{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPHeaders\/CacheControl-swift.struct\/onlyIfCached"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp1\/httpheaders\/cachecontrol-swift.struct\/onlyifcached"]}],"metadata":{"modules":[{"name":"NIOHTTP1"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"onlyIfCached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"onlyIfCached","role":"symbol","symbolKind":"property","externalID":"s:8NIOHTTP111HTTPHeadersV5VaporE12CacheControlV12onlyIfCachedSbvp","roleHeading":"Instance Property"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"onlyIfCached"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"platforms":["Linux"]}],"kind":"declarations"}],"abstract":[{"text":"Indicates to not retrieve new data. This being the case, the server wishes the client to obtain a response only once and then cache. From this moment the","type":"text"},{"text":" ","type":"text"},{"text":"client should keep releasing a cached copy and avoid contacting the origin-server to see if a newer copy exists.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPHeaders","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPHeaders\/CacheControl-swift.struct"]]},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"title":"NIOHTTP1","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","kind":"symbol","url":"\/documentation\/niohttp1","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPHeaders/CacheControl-swift.struct":{"title":"HTTPHeaders.CacheControl","url":"\/documentation\/niohttp1\/httpheaders\/cachecontrol-swift.struct","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPHeaders\/CacheControl-swift.struct","navigatorTitle":[{"kind":"identifier","text":"CacheControl"}],"abstract":[{"type":"text","text":"Represents the HTTP "},{"code":"Cache-Control","type":"codeVoice"},{"type":"text","text":" header."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CacheControl"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPHeaders":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPHeaders","kind":"identifier"}],"type":"topic","abstract":[{"text":"A representation of a block of HTTP header fields.","type":"text"}],"navigatorTitle":[{"text":"HTTPHeaders","kind":"identifier"}],"url":"\/documentation\/niohttp1\/httpheaders","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPHeaders","title":"HTTPHeaders","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPHeaders/CacheControl-swift.struct/onlyIfCached":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPHeaders\/CacheControl-swift.struct\/onlyIfCached","title":"onlyIfCached","url":"\/documentation\/niohttp1\/httpheaders\/cachecontrol-swift.struct\/onlyifcached","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"onlyIfCached"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"text":"Indicates to not retrieve new data. This being the case, the server wishes the client to obtain a response only once and then cache. From this moment the","type":"text"},{"text":" ","type":"text"},{"text":"client should keep releasing a cached copy and avoid contacting the origin-server to see if a newer copy exists.","type":"text"}],"role":"symbol","type":"topic"}}}