{"metadata":{"modules":[{"name":"NIOHTTP1"}],"role":"collectionGroup","title":"ChannelInboundHandler Implementations"},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolErrorHandler\/ChannelInboundHandler-Implementations"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolErrorHandler"]]},"topicSections":[{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolErrorHandler\/unwrapInboundIn(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolErrorHandler\/wrapInboundOut(_:)"]}],"kind":"article","references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerProtocolErrorHandler/wrapInboundOut(_:)":{"kind":"symbol","type":"topic","role":"symbol","title":"wrapInboundOut(_:)","url":"\/documentation\/niohttp1\/httpserverprotocolerrorhandler\/wrapinboundout(_:)","abstract":[{"text":"Wrap the provided ","type":"text"},{"code":"InboundOut","type":"codeVoice"},{"text":" that will be passed to the next ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" by calling ","type":"text"},{"code":"ChannelHandlerContext.fireChannelRead","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolErrorHandler\/wrapInboundOut(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapInboundOut"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InboundOut"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerProtocolErrorHandler/unwrapInboundIn(_:)":{"abstract":[{"text":"Unwrap the provided ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":" that was passed to ","type":"text"},{"type":"codeVoice","code":"channelRead"},{"type":"text","text":"."}],"title":"unwrapInboundIn(_:)","kind":"symbol","type":"topic","url":"\/documentation\/niohttp1\/httpserverprotocolerrorhandler\/unwrapinboundin(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolErrorHandler\/unwrapInboundIn(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrapInboundIn","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InboundIn"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerProtocolErrorHandler":{"abstract":[{"type":"text","text":"A simple channel handler that catches errors emitted by parsing HTTP requests"},{"type":"text","text":" "},{"type":"text","text":"and sends 400 Bad Request responses."}],"navigatorTitle":[{"text":"HTTPServerProtocolErrorHandler","kind":"identifier"}],"url":"\/documentation\/niohttp1\/httpserverprotocolerrorhandler","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"HTTPServerProtocolErrorHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolErrorHandler","type":"topic","title":"HTTPServerProtocolErrorHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"title":"NIOHTTP1","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","kind":"symbol","url":"\/documentation\/niohttp1","abstract":[]}}}