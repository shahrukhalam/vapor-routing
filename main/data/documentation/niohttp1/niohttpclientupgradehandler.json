{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/init(upgraders:httpHandlers:upgradeCompletionHandler:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/write(context:data:promise:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/OutboundOut"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/RemovableChannelHandler-Implementations"],"title":"Default Implementations","generated":true}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"symbolKind":"class","modules":[{"name":"NIOHTTP1"}],"navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientUpgradeHandler"}],"externalID":"s:8NIOHTTP127NIOHTTPClientUpgradeHandlerC","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientUpgradeHandler"}],"title":"NIOHTTPClientUpgradeHandler","role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientUpgradeHandler"}],"platforms":["Linux"]}]},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"The request sends an order of preference to request which protocol it would like to use for the upgrade."},{"type":"text","text":" "},{"type":"text","text":"It will only upgrade to the protocol that is returned first in the list and does not currently"},{"type":"text","text":" "},{"type":"text","text":"have the capability to upgrade to multiple simultaneous layered protocols."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp1\/niohttpclientupgradehandler"]}],"abstract":[{"type":"text","text":"A client-side channel handler that sends a HTTP upgrade handshake request to perform a HTTP-upgrade."},{"type":"text","text":" "},{"type":"text","text":"When the first HTTP request is sent, this handler will add all appropriate headers to perform an upgrade to"},{"type":"text","text":" "},{"type":"text","text":"the a protocol. It may add headers for a set of protocols in preference order."},{"type":"text","text":" "},{"type":"text","text":"If the upgrade fails (i.e. response is not 101 Switching Protocols), this handler simply"},{"type":"text","text":" "},{"type":"text","text":"removes itself from the pipeline. If the upgrade is successful, it upgrades the pipeline to the new protocol."}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","doc:\/\/co.pointfree.VaporRouting\/s8SendableP"],"title":"Conforms To"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/init(upgraders:httpHandlers:upgradeCompletionHandler:)":{"title":"init(upgraders:httpHandlers:upgradeCompletionHandler:)","abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"HTTPClientUpgradeHandler"},{"type":"text","text":"."}],"url":"\/documentation\/niohttp1\/niohttpclientupgradehandler\/init(upgraders:httphandlers:upgradecompletionhandler:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/init(upgraders:httpHandlers:upgradeCompletionHandler:)","kind":"symbol","role":"symbol","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgraders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP","text":"NIOHTTPClientProtocolUpgrader"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"httpHandlers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"RemovableChannelHandler","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"upgradeCompletionHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientUpgradeHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler","type":"topic","url":"\/documentation\/niohttp1\/niohttpclientupgradehandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientUpgradeHandler"}],"title":"NIOHTTPClientUpgradeHandler","abstract":[{"type":"text","text":"A client-side channel handler that sends a HTTP upgrade handshake request to perform a HTTP-upgrade."},{"type":"text","text":" "},{"type":"text","text":"When the first HTTP request is sent, this handler will add all appropriate headers to perform an upgrade to"},{"type":"text","text":" "},{"type":"text","text":"the a protocol. It may add headers for a set of protocols in preference order."},{"type":"text","text":" "},{"type":"text","text":"If the upgrade fails (i.e. response is not 101 Switching Protocols), this handler simply"},{"type":"text","text":" "},{"type":"text","text":"removes itself from the pipeline. If the upgrade is successful, it upgrades the pipeline to the new protocol."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/ChannelOutboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/ChannelOutboundHandler-Implementations","type":"topic","url":"\/documentation\/niohttp1\/niohttpclientupgradehandler\/channeloutboundhandler-implementations","kind":"article","role":"collectionGroup","title":"ChannelOutboundHandler Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"title":"NIOHTTP1","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","kind":"symbol","url":"\/documentation\/niohttp1","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"url":"\/documentation\/niocore\/channelinboundhandler","type":"topic","title":"ChannelInboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/OutboundIn":{"navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}],"type":"topic","title":"NIOHTTPClientUpgradeHandler.OutboundIn","url":"\/documentation\/niohttp1\/niohttpclientupgradehandler\/outboundin","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/OutboundIn","abstract":[{"type":"text","text":"The type of the outbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/OutboundOut":{"navigatorTitle":[{"kind":"identifier","text":"OutboundOut"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/OutboundOut","type":"topic","url":"\/documentation\/niohttp1\/niohttpclientupgradehandler\/outboundout","kind":"symbol","role":"symbol","title":"NIOHTTPClientUpgradeHandler.OutboundOut","abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundOut"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/InboundOut":{"title":"NIOHTTPClientUpgradeHandler.InboundOut","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"url":"\/documentation\/niohttp1\/niohttpclientupgradehandler\/inboundout","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/InboundOut","navigatorTitle":[{"text":"InboundOut","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundOut","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}],"abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"ChannelOutboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"url":"\/documentation\/niocore\/channeloutboundhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"role":"symbol","url":"\/documentation\/niocore\/removablechannelhandler","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"RemovableChannelHandler"},{"text":" is a ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" that can be dynamically removed from a ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" whilst","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is operating normally.","type":"text"},{"text":" ","type":"text"},{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is required to remove itself from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" (using","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"text":") as soon as possible.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"title":"RemovableChannelHandler","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/write(context:data:promise:)":{"type":"topic","title":"write(context:data:promise:)","url":"\/documentation\/niohttp1\/niohttpclientupgradehandler\/write(context:data:promise:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/write(context:data:promise:)","abstract":[{"type":"text","text":"Called to request a write operation. The write operation will write the messages through the"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.flush"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"type":"text","text":" is called."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/InboundIn":{"type":"topic","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/niohttp1\/niohttpclientupgradehandler\/inboundin","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/InboundIn","title":"NIOHTTPClientUpgradeHandler.InboundIn","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/RemovableChannelHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/RemovableChannelHandler-Implementations","type":"topic","url":"\/documentation\/niohttp1\/niohttpclientupgradehandler\/removablechannelhandler-implementations","kind":"article","role":"collectionGroup","title":"RemovableChannelHandler Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/channelRead(context:data:)":{"title":"channelRead(context:data:)","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"url":"\/documentation\/niohttp1\/niohttpclientupgradehandler\/channelread(context:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/channelRead(context:data:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":")"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/ChannelHandler-Implementations":{"url":"\/documentation\/niohttp1\/niohttpclientupgradehandler\/channelhandler-implementations","title":"ChannelHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/ChannelHandler-Implementations","abstract":[],"kind":"article","role":"collectionGroup","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientUpgradeHandler/ChannelInboundHandler-Implementations":{"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientUpgradeHandler\/ChannelInboundHandler-Implementations","url":"\/documentation\/niohttp1\/niohttpclientupgradehandler\/channelinboundhandler-implementations","type":"topic","title":"ChannelInboundHandler Implementations","role":"collectionGroup","abstract":[]},"doc://co.pointfree.VaporRouting/s8SendableP":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"}}}