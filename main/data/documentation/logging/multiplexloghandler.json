{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler"},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"MultiplexLogHandler"}],"roleHeading":"Structure","title":"MultiplexLogHandler","externalID":"s:7Logging19MultiplexLogHandlerV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiplexLogHandler"}],"modules":[{"name":"Logging"}],"role":"symbol","symbolKind":"struct"},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/logging\/multiplexloghandler"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/LogHandler"],"kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging"]]},"abstract":[{"type":"text","text":"A pseudo-"},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" that can be used to send messages to multiple other "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":"s."}],"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/logLevel","doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/metadata"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/log(level:message:metadata:source:file:function:line:)"]},{"title":"Subscripts","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/subscript(metadataKey:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/LogHandler-Implementations"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiplexLogHandler","kind":"identifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":3,"type":"heading","text":"Effective Logger.Level","anchor":"Effective-LoggerLevel"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When first initialized the multiplex log handlers’ log level is automatically set to the minimum of all the"},{"text":" ","type":"text"},{"text":"passed in log handlers. This ensures that each of the handlers will be able to log at their appropriate level","type":"text"},{"text":" ","type":"text"},{"text":"any log events they might be interested in.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Example:","type":"text"},{"text":" ","type":"text"},{"text":"If log handler ","type":"text"},{"type":"codeVoice","code":"A"},{"text":" is logging at ","type":"text"},{"type":"codeVoice","code":".debug"},{"text":" level, and log handler ","type":"text"},{"type":"codeVoice","code":"B"},{"text":" is logging at ","type":"text"},{"type":"codeVoice","code":".info"},{"text":" level, the constructed","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MultiplexLogHandler([A, B])"},{"text":"’s effective log level will be set to ","type":"text"},{"type":"codeVoice","code":".debug"},{"text":", meaning that debug messages will be","type":"text"},{"text":" ","type":"text"},{"text":"handled by this handler, while only logged by the underlying ","type":"text"},{"type":"codeVoice","code":"A"},{"text":" log handler (since ","type":"text"},{"type":"codeVoice","code":"B"},{"text":"’s log level is ","type":"text"},{"type":"codeVoice","code":".info"},{"text":" ","type":"text"},{"text":"and thus it would not actually log that log message).","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If the log level is ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"set","type":"text"}]},{"text":" on a ","type":"text"},{"code":"Logger","type":"codeVoice"},{"text":" backed by an ","type":"text"},{"code":"MultiplexLogHandler","type":"codeVoice"},{"text":" the log level will apply to ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"all","type":"text"}]},{"text":" ","type":"text"},{"text":"underlying log handlers, allowing a logger to still select at what level it wants to log regardless of if the underlying","type":"text"},{"text":" ","type":"text"},{"text":"handler is a multiplex or a normal one. If for some reason one might want to not allow changing a log level of a specific","type":"text"},{"text":" ","type":"text"},{"text":"handler passed into the multiplex log handler, this is possible by wrapping it in a handler which ignores any log level changes.","type":"text"}]},{"level":3,"type":"heading","text":"Effective Logger.Metadata","anchor":"Effective-LoggerMetadata"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since a "},{"code":"MultiplexLogHandler","type":"codeVoice"},{"type":"text","text":" is a combination of multiple log handlers, the handling of metadata can be non-obvious."},{"type":"text","text":" "},{"type":"text","text":"For example, the underlying log handlers may have metadata of their own set before they are used to initialize the multiplex log handler."}]},{"type":"paragraph","inlineContent":[{"text":"The multiplex log handler acts purely as proxy and does not make any changes to underlying handler metadata other than","type":"text"},{"text":" ","type":"text"},{"text":"proxying writes that users made on a ","type":"text"},{"code":"Logger","type":"codeVoice"},{"text":" instance backed by this handler.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Setting metadata is always proxied through to "},{"type":"emphasis","inlineContent":[{"type":"text","text":"all"}]},{"type":"text","text":" underlying handlers, meaning that if a modification like"},{"type":"text","text":" "},{"type":"codeVoice","code":"logger[metadataKey: \"x\"] = \"y\""},{"type":"text","text":" is made, all underlying log handlers that this multiplex handler was initiated with"},{"type":"text","text":" "},{"type":"text","text":"will observe this change."}]},{"type":"paragraph","inlineContent":[{"text":"Reading metadata from the multiplex log handler MAY need to pick one of conflicting values if the underlying log handlers","type":"text"},{"text":" ","type":"text"},{"text":"were already initiated with some metadata before passing them into the multiplex handler. The multiplex handler uses","type":"text"},{"text":" ","type":"text"},{"text":"the order in which the handlers were passed in during its initialization as a priority indicator - the first handler’s","type":"text"},{"text":" ","type":"text"},{"text":"values are more important than the next handlers values, etc.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"},{"type":"text","text":" "},{"type":"text","text":"If the multiplex log handler was initiated with two handlers like this: "},{"type":"codeVoice","code":"MultiplexLogHandler([handler1, handler2])"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The handlers each have some already set metadata: "},{"type":"codeVoice","code":"handler1"},{"type":"text","text":" has metadata values for keys "},{"type":"codeVoice","code":"one"},{"type":"text","text":" and "},{"type":"codeVoice","code":"all"},{"type":"text","text":", and "},{"type":"codeVoice","code":"handler2"},{"type":"text","text":" "},{"type":"text","text":"has values for keys "},{"type":"codeVoice","code":"two"},{"type":"text","text":" and "},{"type":"codeVoice","code":"all"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A query through the multiplex log handler the key "},{"code":"one","type":"codeVoice"},{"type":"text","text":" naturally returns "},{"code":"handler1","type":"codeVoice"},{"type":"text","text":"’s value, and a query for "},{"code":"two","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"naturally returns "},{"code":"handler2","type":"codeVoice"},{"type":"text","text":"’s value. Querying for the key "},{"code":"all","type":"codeVoice"},{"type":"text","text":" will return "},{"code":"handler1","type":"codeVoice"},{"type":"text","text":"’s value, as that handler was indicated"},{"type":"text","text":" "},{"type":"text","text":"“more important” than the second handler. The same rule applies when querying for the "},{"code":"metadata","type":"codeVoice"},{"type":"text","text":" property of the"},{"type":"text","text":" "},{"type":"text","text":"multiplex log handler - it constructs "},{"code":"Metadata","type":"codeVoice"},{"type":"text","text":" uniquing values."}]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/subscript(metadataKey:)":{"fragments":[{"text":"subscript","kind":"keyword"},{"text":"(","kind":"text"},{"text":"metadataKey","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Metadata","preciseIdentifier":"s:7Logging6LoggerV8Metadataa","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Key","preciseIdentifier":"s:SD3Keya","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Metadata","preciseIdentifier":"s:7Logging6LoggerV8Metadataa","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","preciseIdentifier":"s:SD5Valuea","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","abstract":[{"text":"Add, remove, or change the logging metadata.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/subscript(metadataKey:)","url":"\/documentation\/logging\/multiplexloghandler\/subscript(metadatakey:)","kind":"symbol","title":"subscript(metadataKey:)"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/log(level:message:metadata:source:file:function:line:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/log(level:message:metadata:source:file:function:line:)","title":"log(level:message:metadata:source:file:function:line:)","type":"topic","url":"\/documentation\/logging\/multiplexloghandler\/log(level:message:metadata:source:file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"log","kind":"identifier"},{"text":"(","kind":"text"},{"text":"level","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":".","kind":"text"},{"text":"Level","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV5LevelO"},{"text":", ","kind":"text"},{"text":"message","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":".","kind":"text"},{"text":"Message","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV7MessageV"},{"text":", ","kind":"text"},{"text":"metadata","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":".","kind":"text"},{"text":"Metadata","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV8Metadataa"},{"text":"?, ","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"This method is called when a "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" must emit a log message. There is no need for the "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"check if the "},{"type":"codeVoice","code":"level"},{"type":"text","text":" is above or below the configured "},{"type":"codeVoice","code":"logLevel"},{"type":"text","text":" as "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" already performed this check and"},{"type":"text","text":" "},{"type":"text","text":"determined that a message should be logged."}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/LogHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/LogHandler-Implementations","title":"LogHandler Implementations","type":"topic","url":"\/documentation\/logging\/multiplexloghandler\/loghandler-implementations","abstract":[],"kind":"article","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Logging/LogHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/LogHandler","title":"LogHandler","navigatorTitle":[{"kind":"identifier","text":"LogHandler"}],"type":"topic","url":"\/documentation\/logging\/loghandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LogHandler"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" is an implementation of a logging backend."}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler":{"url":"\/documentation\/logging\/multiplexloghandler","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiplexLogHandler","kind":"identifier"}],"navigatorTitle":[{"text":"MultiplexLogHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"A pseudo-"},{"type":"codeVoice","code":"LogHandler"},{"text":" that can be used to send messages to multiple other ","type":"text"},{"type":"codeVoice","code":"LogHandler"},{"text":"s.","type":"text"}],"title":"MultiplexLogHandler"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/metadata":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/metadata","title":"metadata","type":"topic","url":"\/documentation\/logging\/multiplexloghandler\/metadata","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"metadata"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV8Metadataa","text":"Metadata"}],"abstract":[{"type":"text","text":"Get or set the entire metadata storage as a dictionary."}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/init(_:)":{"title":"init(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/init(_:)","type":"topic","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"LogHandler","preciseIdentifier":"s:7Logging10LogHandlerP"},{"kind":"text","text":"])"}],"role":"symbol","abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"MultiplexLogHandler"},{"type":"text","text":"."}],"url":"\/documentation\/logging\/multiplexloghandler\/init(_:)"},"doc://co.pointfree.VaporRouting/documentation/Logging":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging","role":"collection","type":"topic","url":"\/documentation\/logging","kind":"symbol","title":"Logging","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/logLevel":{"title":"logLevel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/logLevel","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logLevel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Level","preciseIdentifier":"s:7Logging6LoggerV5LevelO"}],"role":"symbol","abstract":[{"type":"text","text":"Get or set the configured log level."}],"url":"\/documentation\/logging\/multiplexloghandler\/loglevel"}}}