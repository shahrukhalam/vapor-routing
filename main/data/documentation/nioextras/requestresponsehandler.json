{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestResponseHandler"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Request"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Response"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler"},{"text":" does support pipelining ","type":"text"},{"type":"codeVoice","code":"Request"},{"text":"s and it will send them pipelined further down the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":". Should ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler"},{"text":" receive an error from the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":", it will fail all promises meant for","type":"text"},{"text":" ","type":"text"},{"text":"the outstanding ","type":"text"},{"type":"codeVoice","code":"Reponse"},{"text":"s and close the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":". All requests enqueued after an error occured will be immediately","type":"text"},{"text":" ","type":"text"},{"text":"failed with the first error the channel received.","type":"text"}]},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler"},{"text":" requires that the ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":"s arrive on ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" in the same order as the ","type":"text"},{"code":"Request","type":"codeVoice"},{"text":"s","type":"text"},{"text":" ","type":"text"},{"text":"were submitted.","type":"text"}]}],"kind":"content"}],"metadata":{"title":"RequestResponseHandler","externalID":"s:9NIOExtras22RequestResponseHandlerC","symbolKind":"class","roleHeading":"Class","navigatorTitle":[{"text":"RequestResponseHandler","kind":"identifier"}],"role":"symbol","modules":[{"name":"NIOExtras"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestResponseHandler","kind":"identifier"}]},"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/init(initialBufferCapacity:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/channelInactive(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/errorCaught(context:error:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/OutboundOut"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelOutboundHandler-Implementations"],"generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/nioextras\/requestresponsehandler"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler"],"kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler"},"abstract":[{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler","isActive":true,"type":"reference"},{"type":"text","text":" receives a "},{"type":"codeVoice","code":"Request"},{"type":"text","text":" alongside an "},{"type":"codeVoice","code":"EventLoopPromise<Response>"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"‘s"},{"type":"text","text":" "},{"type":"text","text":"outbound side. It will fulfill the promise with the "},{"type":"codeVoice","code":"Response"},{"type":"text","text":" once it’s received from the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"’s inbound"},{"type":"text","text":" "},{"type":"text","text":"side."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/init(initialBufferCapacity:)":{"title":"init(initialBufferCapacity:)","url":"\/documentation\/nioextras\/requestresponsehandler\/init(initialbuffercapacity:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"initialBufferCapacity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","abstract":[{"text":"Create a new ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler","type":"reference"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/init(initialBufferCapacity:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/OutboundOut":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/OutboundOut","url":"\/documentation\/nioextras\/requestresponsehandler\/outboundout","type":"topic","title":"RequestResponseHandler.OutboundOut","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"abstract":[{"text":"Type this class passes out.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}],"abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"ChannelOutboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"url":"\/documentation\/niocore\/channeloutboundhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/channelInactive(context:)":{"title":"channelInactive(context:)","kind":"symbol","role":"symbol","url":"\/documentation\/nioextras\/requestresponsehandler\/channelinactive(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInactive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/channelInactive(context:)","abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has become inactive and is no longer able to send and receive data`."}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"abstract":[],"role":"collection","title":"NIOExtras","url":"\/documentation\/nioextras","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/ChannelOutboundHandler-Implementations":{"type":"topic","title":"ChannelOutboundHandler Implementations","abstract":[],"url":"\/documentation\/nioextras\/requestresponsehandler\/channeloutboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelOutboundHandler-Implementations","kind":"article","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler":{"kind":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler","isActive":true},{"type":"text","text":" receives a "},{"type":"codeVoice","code":"Request"},{"type":"text","text":" alongside an "},{"code":"EventLoopPromise<Response>","type":"codeVoice"},{"type":"text","text":" from the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"‘s"},{"type":"text","text":" "},{"type":"text","text":"outbound side. It will fulfill the promise with the "},{"type":"codeVoice","code":"Response"},{"type":"text","text":" once it’s received from the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"’s inbound"},{"type":"text","text":" "},{"type":"text","text":"side."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler","type":"topic","title":"RequestResponseHandler","url":"\/documentation\/nioextras\/requestresponsehandler","role":"symbol","navigatorTitle":[{"text":"RequestResponseHandler","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestResponseHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/InboundOut":{"navigatorTitle":[{"text":"InboundOut","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Don’t expect to pass anything on in-bound."}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundOut","kind":"identifier"}],"title":"RequestResponseHandler.InboundOut","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/InboundOut","url":"\/documentation\/nioextras\/requestresponsehandler\/inboundout","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"url":"\/documentation\/niocore\/channelinboundhandler","type":"topic","title":"ChannelInboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/ChannelInboundHandler-Implementations":{"url":"\/documentation\/nioextras\/requestresponsehandler\/channelinboundhandler-implementations","kind":"article","role":"collectionGroup","title":"ChannelInboundHandler Implementations","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelInboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/write(context:data:promise:)":{"role":"symbol","title":"write(context:data:promise:)","abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.flush"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"text":" is called.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}],"url":"\/documentation\/nioextras\/requestresponsehandler\/write(context:data:promise:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/write(context:data:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/errorCaught(context:error:)":{"title":"errorCaught(context:error:)","kind":"symbol","role":"symbol","url":"\/documentation\/nioextras\/requestresponsehandler\/errorcaught(context:error:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"errorCaught","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/errorCaught(context:error:)","abstract":[{"type":"text","text":"An error was encountered earlier in the inbound "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/OutboundIn":{"title":"RequestResponseHandler.OutboundIn","navigatorTitle":[{"text":"OutboundIn","kind":"identifier"}],"abstract":[{"type":"text","text":"Type this class expect to receive in an outbound direction."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/OutboundIn","url":"\/documentation\/nioextras\/requestresponsehandler\/outboundin","type":"topic","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundIn","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/channelRead(context:data:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/channelRead(context:data:)","role":"symbol","title":"channelRead(context:data:)","kind":"symbol","url":"\/documentation\/nioextras\/requestresponsehandler\/channelread(context:data:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Called when some data has been read from the remote peer.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/InboundIn":{"title":"RequestResponseHandler.InboundIn","kind":"symbol","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"role":"symbol","url":"\/documentation\/nioextras\/requestresponsehandler\/inboundin","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/InboundIn","abstract":[{"type":"codeVoice","code":"Response"},{"type":"text","text":" is the type this class expects to receive inbound."}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/ChannelHandler-Implementations":{"type":"topic","kind":"article","abstract":[],"url":"\/documentation\/nioextras\/requestresponsehandler\/channelhandler-implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelHandler-Implementations","title":"ChannelHandler Implementations"}}}