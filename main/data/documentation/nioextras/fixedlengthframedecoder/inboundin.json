{"abstract":[{"text":"Data type we receive.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","text":"ByteBuffer","kind":"typeIdentifier"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"symbolKind":"typealias","modules":[{"name":"NIOExtras"}],"role":"symbol","externalID":"s:9NIOExtras23FixedLengthFrameDecoderC9InboundIna","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"roleHeading":"Type Alias","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"title":"FixedLengthFrameDecoder.InboundIn"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/fixedlengthframedecoder\/inboundin"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder\/InboundIn","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol","url":"\/documentation\/niocore\/bytebuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/FixedLengthFrameDecoder":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FixedLengthFrameDecoder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder","type":"topic","title":"FixedLengthFrameDecoder","kind":"symbol","url":"\/documentation\/nioextras\/fixedlengthframedecoder","role":"symbol","abstract":[{"type":"text","text":"A decoder that splits the received "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" by a fixed number"},{"type":"text","text":" "},{"type":"text","text":"of bytes. For example, if you received the following four fragmented packets:"}],"navigatorTitle":[{"text":"FixedLengthFrameDecoder","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/FixedLengthFrameDecoder/InboundIn":{"abstract":[{"text":"Data type we receive.","type":"text"}],"navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"title":"FixedLengthFrameDecoder.InboundIn","kind":"symbol","type":"topic","url":"\/documentation\/nioextras\/fixedlengthframedecoder\/inboundin","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder\/InboundIn","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"abstract":[],"role":"collection","title":"NIOExtras","url":"\/documentation\/nioextras","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"}}}