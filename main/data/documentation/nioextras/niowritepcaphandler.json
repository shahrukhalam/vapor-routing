{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWritePCAPHandler"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"You will be able to open the ","type":"text"},{"code":".pcap","type":"codeVoice"},{"text":" file in for example ","type":"text"},{"identifier":"https:\/\/www.wireshark.org","type":"reference","isActive":true},{"text":" or","type":"text"},{"text":" ","type":"text"},{"identifier":"http:\/\/www.tcpdump.org","type":"reference","isActive":true},{"text":". Using ","type":"text"},{"code":"NIOWritePCAPHandler","type":"codeVoice"},{"text":" to write your ","type":"text"},{"type":"codeVoice","code":".pcap"},{"text":" files can be useful for","type":"text"},{"text":" ","type":"text"},{"text":"example when your real network traffic is TLS protected (so ","type":"text"},{"type":"codeVoice","code":"tcpdump"},{"text":"\/Wireshark can’t read it directly), or if you","type":"text"},{"text":" ","type":"text"},{"text":"don’t have enough privileges on the running host to dump the network traffic.","type":"text"}]},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler","isActive":true,"type":"reference"},{"text":" will also work with Unix Domain Sockets in which case it will still synthesize a TCP packet","type":"text"},{"text":" ","type":"text"},{"text":"capture with local address ","type":"text"},{"code":"111.111.111.111","type":"codeVoice"},{"text":" (port ","type":"text"},{"code":"1111","type":"codeVoice"},{"text":") and remote address ","type":"text"},{"code":"222.222.222.222","type":"codeVoice"},{"text":" (port ","type":"text"},{"code":"2222","type":"codeVoice"},{"text":").","type":"text"}]}]}],"metadata":{"navigatorTitle":[{"text":"NIOWritePCAPHandler","kind":"identifier"}],"roleHeading":"Class","role":"symbol","modules":[{"name":"NIOExtras"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWritePCAPHandler","kind":"identifier"}],"externalID":"s:9NIOExtras19NIOWritePCAPHandlerC","title":"NIOWritePCAPHandler","symbolKind":"class"},"abstract":[{"type":"text","text":"A "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" that can write a "},{"isActive":true,"type":"reference","identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap"},{"type":"text","text":" containing the send\/received"},{"type":"text","text":" "},{"type":"text","text":"data as synthesized TCP packet captures."}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/SynchronizedFileSink"],"title":"Classes"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Settings"],"title":"Structures"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/pcapFileHeader"],"title":"Type Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Mode"],"title":"Enumerations"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/RemovableChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_EmittingChannelHandler-Implementations"],"generated":true,"title":"Default Implementations"}],"variants":[{"paths":["\/documentation\/nioextras\/niowritepcaphandler"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler"},"kind":"symbol","sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/SynchronizedFileSink":{"title":"NIOWritePCAPHandler.SynchronizedFileSink","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"SynchronizedFileSink","kind":"identifier"}],"abstract":[{"text":"A synchronised file sink that uses a ","type":"text"},{"code":"DispatchQueue","type":"codeVoice"},{"text":" to do all the necessary write synchronously.","type":"text"}],"url":"\/documentation\/nioextras\/niowritepcaphandler\/synchronizedfilesink","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/SynchronizedFileSink","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SynchronizedFileSink","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/ChannelOutboundHandler-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/nioextras\/niowritepcaphandler\/channeloutboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelOutboundHandler-Implementations","kind":"article","title":"ChannelOutboundHandler Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/ChannelInboundHandler-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/nioextras\/niowritepcaphandler\/channelinboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelInboundHandler-Implementations","kind":"article","title":"ChannelInboundHandler Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/_EmittingChannelHandler-Implementations":{"type":"topic","url":"\/documentation\/nioextras\/niowritepcaphandler\/_emittingchannelhandler-implementations","role":"collectionGroup","abstract":[],"title":"_EmittingChannelHandler Implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_EmittingChannelHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/ChannelHandler-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/nioextras\/niowritepcaphandler\/channelhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/ChannelHandler-Implementations","kind":"article","title":"ChannelHandler Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/_ChannelInboundHandler-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/nioextras\/niowritepcaphandler\/_channelinboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelInboundHandler-Implementations","title":"_ChannelInboundHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)":{"fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOWritePCAPHandler","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC4ModeO","text":"Mode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fakeLocalAddress"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"fakeRemoteAddress"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"fileSink"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Initialize a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler"},{"type":"text","text":" with default settings."}],"url":"\/documentation\/nioextras\/niowritepcaphandler\/init(mode:fakelocaladdress:fakeremoteaddress:filesink:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)","kind":"symbol","title":"init(mode:fakeLocalAddress:fakeRemoteAddress:fileSink:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/Settings":{"title":"NIOWritePCAPHandler.Settings","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Settings","url":"\/documentation\/nioextras\/niowritepcaphandler\/settings","abstract":[{"text":"Settings for ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler"},{"text":".","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Settings","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Settings","kind":"identifier"}]},"https://www.wireshark.org":{"type":"link","url":"https:\/\/www.wireshark.org","titleInlineContent":[{"type":"text","text":"Wireshark"}],"identifier":"https:\/\/www.wireshark.org","title":"Wireshark"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/_ChannelOutboundHandler-Implementations":{"url":"\/documentation\/nioextras\/niowritepcaphandler\/_channeloutboundhandler-implementations","role":"collectionGroup","kind":"article","title":"_ChannelOutboundHandler Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/_ChannelOutboundHandler-Implementations","type":"topic"},"https://en.wikipedia.org/wiki/Pcap":{"type":"link","url":"https:\/\/en.wikipedia.org\/wiki\/Pcap","titleInlineContent":[{"code":".pcap","type":"codeVoice"},{"type":"text","text":" file"}],"identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap","title":".pcap file"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOWritePCAPHandler","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Mode","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC4ModeO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fakeLocalAddress"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"fakeRemoteAddress"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"settings"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC","text":"NIOWritePCAPHandler"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9NIOExtras19NIOWritePCAPHandlerC8SettingsV","text":"Settings"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileSink"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Initialize a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler"},{"type":"text","text":"."}],"url":"\/documentation\/nioextras\/niowritepcaphandler\/init(mode:fakelocaladdress:fakeremoteaddress:settings:filesink:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)","kind":"symbol","title":"init(mode:fakeLocalAddress:fakeRemoteAddress:settings:fileSink:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler":{"navigatorTitle":[{"kind":"identifier","text":"NIOWritePCAPHandler"}],"abstract":[{"type":"text","text":"A "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" that can write a "},{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap","type":"reference","isActive":true},{"type":"text","text":" containing the send\/received"},{"type":"text","text":" "},{"type":"text","text":"data as synthesized TCP packet captures."}],"role":"symbol","title":"NIOWritePCAPHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWritePCAPHandler"}],"url":"\/documentation\/nioextras\/niowritepcaphandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"url":"\/documentation\/niocore\/channelinboundhandler","type":"topic","title":"ChannelInboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"role":"symbol"},"http://www.tcpdump.org":{"type":"link","url":"http:\/\/www.tcpdump.org","titleInlineContent":[{"code":"tcpdump","type":"codeVoice"}],"identifier":"http:\/\/www.tcpdump.org","title":"tcpdump"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/Mode":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/Mode","title":"NIOWritePCAPHandler.Mode","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Mode","kind":"identifier"}],"url":"\/documentation\/nioextras\/niowritepcaphandler\/mode","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mode","kind":"identifier"}],"type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/pcapFileHeader":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"pcapFileHeader"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"}],"url":"\/documentation\/nioextras\/niowritepcaphandler\/pcapfileheader","abstract":[{"text":"Reusable header for ","type":"text"},{"code":".pcap","type":"codeVoice"},{"text":" file.","type":"text"}],"type":"topic","kind":"symbol","title":"pcapFileHeader","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/pcapFileHeader"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}],"abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"ChannelOutboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"url":"\/documentation\/niocore\/channeloutboundhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler/RemovableChannelHandler-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/nioextras\/niowritepcaphandler\/removablechannelhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler\/RemovableChannelHandler-Implementations","kind":"article","title":"RemovableChannelHandler Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"role":"symbol","url":"\/documentation\/niocore\/removablechannelhandler","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"RemovableChannelHandler"},{"text":" is a ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" that can be dynamically removed from a ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" whilst","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is operating normally.","type":"text"},{"text":" ","type":"text"},{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is required to remove itself from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" (using","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"text":") as soon as possible.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"title":"RemovableChannelHandler","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"abstract":[],"role":"collection","title":"NIOExtras","url":"\/documentation\/nioextras","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"}}}