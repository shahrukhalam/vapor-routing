{"metadata":{"modules":[{"name":"NIOHPACK"}],"symbolKind":"init","externalID":"s:8NIOHPACK12HPACKDecoderV9allocator19maxDynamicTableSize0d10HeaderListG0AC7NIOCore19ByteBufferAllocatorV_S2itcfc","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxDynamicTableSize","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxHeaderListSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"roleHeading":"Initializer","role":"symbol","title":"init(allocator:maxDynamicTableSize:maxHeaderListSize:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDynamicTableSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxHeaderListSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"parameters":[{"name":"maxDynamicTableSize","content":[{"type":"paragraph","inlineContent":[{"text":"Maximum allowed size of the dynamic header table.","type":"text"}]}]},{"name":"maxHeaderListSize","content":[{"inlineContent":[{"text":"Maximum allowed size of a decoded header list.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"}],"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohpack\/hpackdecoder\/init(allocator:maxdynamictablesize:maxheaderlistsize:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder\/init(allocator:maxDynamicTableSize:maxHeaderListSize:)"},"abstract":[{"type":"text","text":"Creates a new decoder"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKDecoder":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder","navigatorTitle":[{"text":"HPACKDecoder","kind":"identifier"}],"title":"HPACKDecoder","abstract":[{"type":"text","text":"An "},{"code":"HPACKDecoder","type":"codeVoice"},{"text":" maintains its own dynamic header table and uses that to","type":"text"},{"text":" ","type":"text"},{"text":"decode indexed HTTP headers, along with Huffman-encoded strings and","type":"text"},{"text":" ","type":"text"},{"text":"HPACK-encoded integers.","type":"text"}],"kind":"symbol","url":"\/documentation\/niohpack\/hpackdecoder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HPACKDecoder","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","url":"\/documentation\/niocore\/bytebufferallocator","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"title":"ByteBufferAllocator","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"abstract":[{"text":"The preferred allocator for ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" values. The allocation strategy is opaque but is currently libcâ€™s","type":"text"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"code":"realloc","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKDecoder/init(allocator:maxDynamicTableSize:maxHeaderListSize:)":{"kind":"symbol","url":"\/documentation\/niohpack\/hpackdecoder\/init(allocator:maxdynamictablesize:maxheaderlistsize:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxDynamicTableSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxHeaderListSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder\/init(allocator:maxDynamicTableSize:maxHeaderListSize:)","abstract":[{"text":"Creates a new decoder","type":"text"}],"title":"init(allocator:maxDynamicTableSize:maxHeaderListSize:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","type":"topic","url":"\/documentation\/niohpack","abstract":[],"title":"NIOHPACK","role":"collection"}}}