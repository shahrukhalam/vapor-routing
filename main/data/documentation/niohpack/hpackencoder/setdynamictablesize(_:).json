{"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/setDynamicTableSize(_:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"role":"symbol","modules":[{"name":"NIOHPACK"}],"title":"setDynamicTableSize(_:)","externalID":"s:8NIOHPACK12HPACKEncoderV19setDynamicTableSizeyySiKF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setDynamicTableSize","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"symbolKind":"method"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Sets the maximum size for the dynamic table and encodes the new value"},{"type":"text","text":" "},{"type":"text","text":"at the start of the current packed header block to send to the peer."}],"variants":[{"paths":["\/documentation\/niohpack\/hpackencoder\/setdynamictablesize(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setDynamicTableSize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"size","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"size","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new maximum size for the dynamic header table."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the encoder is currently in use, or if the requested size"},{"type":"text","text":" "},{"type":"text","text":"exceeds the maximum value negotiated with the peer."}]}]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/setDynamicTableSize(_:)":{"title":"setDynamicTableSize(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/setDynamicTableSize(_:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Sets the maximum size for the dynamic table and encodes the new value"},{"type":"text","text":" "},{"type":"text","text":"at the start of the current packed header block to send to the peer."}],"type":"topic","url":"\/documentation\/niohpack\/hpackencoder\/setdynamictablesize(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setDynamicTableSize"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","type":"topic","url":"\/documentation\/niohpack","abstract":[],"title":"NIOHPACK","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder","url":"\/documentation\/niohpack\/hpackencoder","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HPACKEncoder"}],"title":"HPACKEncoder","navigatorTitle":[{"kind":"identifier","text":"HPACKEncoder"}],"abstract":[{"text":"An ","type":"text"},{"code":"HPACKEncoder","type":"codeVoice"},{"type":"text","text":" maintains its own dynamic header table and uses that to"},{"type":"text","text":" "},{"type":"text","text":"encode HTTP headers to an internal byte buffer."}],"role":"symbol","kind":"symbol"}}}