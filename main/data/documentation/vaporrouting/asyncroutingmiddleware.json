{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncRoutingMiddleware"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Router"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Router"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Router"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/URLRequestData","text":"URLRequestData","preciseIdentifier":"s:10URLRouting14URLRequestDataV"}]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"You will not typically need to interact with this type directly. Instead you should use the"},{"type":"text","text":" "},{"type":"codeVoice","code":"mount"},{"type":"text","text":" method on your Vapor application."}],"type":"paragraph"},{"inlineContent":[{"text":"See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting"},{"text":" for more information on usage.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting"]]},"abstract":[{"text":"Serves requests using a router and response handler.","type":"text"}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware","interfaceLanguage":"swift"},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AsyncMiddleware","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware"],"kind":"relationships"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"role":"symbol","externalID":"s:12VaporRouting05AsyncB10MiddlewareV","symbolKind":"struct","title":"AsyncRoutingMiddleware","roleHeading":"Structure","modules":[{"name":"VaporRouting"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncRoutingMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncRoutingMiddleware"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vaporrouting\/asyncroutingmiddleware"]}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware\/respond(to:chainingTo:)-4pm2r"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware\/AsyncMiddleware-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware\/Middleware-Implementations"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/VaporRouting/AsyncRoutingMiddleware/Middleware-Implementations":{"url":"\/documentation\/vaporrouting\/asyncroutingmiddleware\/middleware-implementations","abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware\/Middleware-Implementations","type":"topic","title":"Middleware Implementations"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Middleware":{"title":"Middleware","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware","role":"symbol","abstract":[{"code":"Middleware","type":"codeVoice"},{"text":" is placed between the server and your router. It is capable of","type":"text"},{"text":" ","type":"text"},{"text":"mutating both incoming requests and outgoing responses. ","type":"text"},{"code":"Middleware","type":"codeVoice"},{"text":" can choose","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to pass requests on to the next "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" in a chain, or they can short circuit and"},{"type":"text","text":" "},{"type":"text","text":"return a custom "},{"type":"codeVoice","code":"Response"},{"type":"text","text":" if desired."}],"url":"\/documentation\/vapor\/middleware","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}]},"doc://co.pointfree.VaporRouting/documentation/VaporRouting/AsyncRoutingMiddleware/respond(to:chainingTo:)-4pm2r":{"url":"\/documentation\/vaporrouting\/asyncroutingmiddleware\/respond(to:chainingto:)-4pm2r","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware\/respond(to:chainingTo:)-4pm2r","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"respond"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Vapor7RequestC","text":"Request","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"chainingTo","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Vapor14AsyncResponderP","text":"AsyncResponder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:5Vapor8ResponseC","text":"Response","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Called with each "},{"type":"codeVoice","code":"Request"},{"type":"text","text":" that passes through this middleware."}],"role":"symbol","title":"respond(to:chainingTo:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor/AsyncMiddleware":{"role":"symbol","title":"AsyncMiddleware","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AsyncMiddleware","kind":"symbol","navigatorTitle":[{"text":"AsyncMiddleware","kind":"identifier"}],"abstract":[{"code":"AsyncMiddleware","type":"codeVoice"},{"text":" is placed between the server and your router. It is capable of","type":"text"},{"text":" ","type":"text"},{"text":"mutating both incoming requests and outgoing responses. ","type":"text"},{"code":"AsyncMiddleware","type":"codeVoice"},{"text":" can choose","type":"text"},{"text":" ","type":"text"},{"text":"to pass requests on to the next ","type":"text"},{"code":"AsyncMiddleware","type":"codeVoice"},{"text":" in a chain, or they can short circuit and","type":"text"},{"text":" ","type":"text"},{"text":"return a custom ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":" if desired.","type":"text"}],"type":"topic","url":"\/documentation\/vapor\/asyncmiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncMiddleware","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/VaporRouting":{"url":"\/documentation\/vaporrouting","title":"VaporRouting","abstract":[{"type":"text","text":"A bidirectional Vapor router with more type safety and less fuss."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/VaporRouting/AsyncRoutingMiddleware/AsyncMiddleware-Implementations":{"url":"\/documentation\/vaporrouting\/asyncroutingmiddleware\/asyncmiddleware-implementations","abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware\/AsyncMiddleware-Implementations","type":"topic","title":"AsyncMiddleware Implementations"},"doc://co.pointfree.VaporRouting/documentation/VaporRouting/AsyncRoutingMiddleware":{"navigatorTitle":[{"kind":"identifier","text":"AsyncRoutingMiddleware"}],"url":"\/documentation\/vaporrouting\/asyncroutingmiddleware","title":"AsyncRoutingMiddleware","abstract":[{"type":"text","text":"Serves requests using a router and response handler."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncRoutingMiddleware"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/URLRequestData":{"navigatorTitle":[{"kind":"identifier","text":"URLRequestData"}],"title":"URLRequestData","kind":"symbol","abstract":[{"type":"text","text":"A parseable URL request."}],"url":"\/documentation\/urlrouting\/urlrequestdata","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/URLRequestData","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URLRequestData"}]}}}