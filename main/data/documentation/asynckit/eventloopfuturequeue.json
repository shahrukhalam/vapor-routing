{"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynckit\/eventloopfuturequeue"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit"]]},"abstract":[{"type":"text","text":"Allows you to queue closures that produce an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":", so each future only gets run if the previous ones complete, succeed, or fail."}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/init(eventLoop:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/eventLoop"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(_:runningOn:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(each:_:)-1fw85","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(each:_:)-3i4m4","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(onPrevious:generator:)"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError"]}],"kind":"symbol","sections":[],"metadata":{"roleHeading":"Class","title":"EventLoopFutureQueue","modules":[{"name":"AsyncKit"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFutureQueue"}],"role":"symbol","symbolKind":"class","externalID":"s:8AsyncKit20EventLoopFutureQueueC","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFutureQueue"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFutureQueue"}],"platforms":["Linux"]}],"kind":"declarations"}],"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/init(eventLoop:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/init(eventLoop:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"EventLoopFutureQueue"},{"text":" on a given event loop.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue\/init(eventloop:)","title":"init(eventLoop:)"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFutureQueue","kind":"identifier"}],"url":"\/documentation\/asynckit\/eventloopfuturequeue","navigatorTitle":[{"text":"EventLoopFutureQueue","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue","title":"EventLoopFutureQueue","abstract":[{"type":"text","text":"Allows you to queue closures that produce an "},{"type":"codeVoice","code":"EventLoopFuture"},{"text":", so each future only gets run if the previous ones complete, succeed, or fail.","type":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/append(onPrevious:generator:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(onPrevious:generator:)","title":"append(onPrevious:generator:)","abstract":[{"text":"Adds another ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" producing closure to be run as soon as all previously queued future have completed, succeeded, or failed.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"onPrevious","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC","text":"EventLoopFutureQueue","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC17ContinueConditionO","text":"ContinueCondition","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"generator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/asynckit\/eventloopfuturequeue\/append(onprevious:generator:)","role":"symbol","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueError":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContinueError","kind":"identifier"}],"title":"EventLoopFutureQueue.ContinueError","kind":"symbol","abstract":[{"text":"Errors that get propogated based on a future’s completion status and the next appended closure’s continuation condition.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError","navigatorTitle":[{"text":"ContinueError","kind":"identifier"}],"url":"\/documentation\/asynckit\/eventloopfuturequeue\/continueerror","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/append(_:runningOn:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(_:runningOn:)","url":"\/documentation\/asynckit\/eventloopfuturequeue\/append(_:runningon:)","abstract":[{"type":"text","text":"An overload for "},{"type":"codeVoice","code":"append(generator:runningOn:)"},{"type":"text","text":" that takes in an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" as an auto closure to provide a better 1-liner API."}],"title":"append(_:runningOn:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"runningOn"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopFutureQueue","preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ContinueCondition","preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC17ContinueConditionO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/eventLoop":{"title":"eventLoop","abstract":[{"type":"text","text":"The event loop that all the futures’s completions are handled on."}],"role":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue\/eventloop","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/eventLoop","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"type":"topic","kind":"symbol","url":"\/documentation\/asynckit","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","abstract":[],"role":"collection","title":"AsyncKit"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueCondition":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition","type":"topic","title":"EventLoopFutureQueue.ContinueCondition","abstract":[{"type":"text","text":"Under what conditions an appended closure should be run."}],"navigatorTitle":[{"kind":"identifier","text":"ContinueCondition"}],"url":"\/documentation\/asynckit\/eventloopfuturequeue\/continuecondition","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContinueCondition"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/append(each:_:)-1fw85":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(each:_:)-1fw85","role":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue\/append(each:_:)-1fw85","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"each"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<[","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"]>","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"For each element of the provided collection, invoke the given generator"},{"type":"text","text":" "},{"type":"text","text":"and queue the returned future. Return a future whose value is an array"},{"type":"text","text":" "},{"type":"text","text":"containing the result of each generated future in the same order as the"},{"type":"text","text":" "},{"type":"text","text":"original sequence. The resulting array is intended to have semantics"},{"type":"text","text":" "},{"type":"text","text":"substantially similar to those provided by "},{"type":"codeVoice","code":"EventLoop.flatten(_:on:)"},{"type":"text","text":"."}],"title":"append(each:_:)"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/append(each:_:)-3i4m4":{"role":"symbol","kind":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue\/append(each:_:)-3i4m4","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"each"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"append(each:_:)","abstract":[{"text":"Same as ","type":"text"},{"code":"append(each:_:)","type":"codeVoice"},{"text":" above, but assumes all futures return ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and returns a ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" future instead of a result array.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(each:_:)-3i4m4"}}}