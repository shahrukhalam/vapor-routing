{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopConnectionPool"]]},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withConnection","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":", (","kind":"text"},{"text":"Source","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Connection","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"AsyncKit"}],"role":"symbol","externalID":"s:8AsyncKit23EventLoopConnectionPoolC04withE06logger_7NIOCore0cD6FutureCyqd__G7Logging6LoggerV_AI0E0QzctlF","title":"withConnection(logger:_:)"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/Logger","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"closure"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Connection"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"For trace and debug logs.","type":"text"}]}],"name":"logger"},{"content":[{"inlineContent":[{"text":"Callback that accepts the pooled connection.","type":"text"}],"type":"paragraph"}],"name":"closure"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A future containing the result of the closure."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The connection is provided to the supplied callback and will be automatically released when the"},{"type":"text","text":" "},{"type":"text","text":"future returned by the callback is completed."}]},{"type":"codeListing","code":["pool.withConnection(...) { conn in","    \/\/ use the connection","}"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"See ","type":"text"},{"code":"requestConnection(on:)","type":"codeVoice"},{"text":" to request a pooled connection without using a callback.","type":"text"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopConnectionPool\/withConnection(logger:_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynckit\/eventloopconnectionpool\/withconnection(logger:_:)"]}],"abstract":[{"type":"text","text":"Fetches a pooled connection for the lifetime of the closure."}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopConnectionPool":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopConnectionPool","kind":"identifier"}],"title":"EventLoopConnectionPool","kind":"symbol","abstract":[{"text":"Holds a collection of active connections that can be requested and later released","type":"text"},{"text":" ","type":"text"},{"text":"back into the pool.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopConnectionPool","navigatorTitle":[{"text":"EventLoopConnectionPool","kind":"identifier"}],"url":"\/documentation\/asynckit\/eventloopconnectionpool","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","title":"EventLoopFuture"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopConnectionPool/withConnection(logger:_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopConnectionPool\/withConnection(logger:_:)","type":"topic","role":"symbol","url":"\/documentation\/asynckit\/eventloopconnectionpool\/withconnection(logger:_:)","kind":"symbol","title":"withConnection(logger:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Connection"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Fetches a pooled connection for the lifetime of the closure."}]},"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"type":"topic","kind":"symbol","url":"\/documentation\/asynckit","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","abstract":[],"role":"collection","title":"AsyncKit"},"doc://co.pointfree.VaporRouting/documentation/Logging/Logger":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/Logger","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Logger","kind":"identifier"}],"navigatorTitle":[{"text":"Logger","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/logging\/logger","kind":"symbol","title":"Logger","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Logger"},{"text":" is the central type in ","type":"text"},{"type":"codeVoice","code":"SwiftLog"},{"text":". Its central function is to emit log messages using one of the methods","type":"text"},{"text":" ","type":"text"},{"text":"corresponding to a log level.","type":"text"}]}}}