{"variants":[{"paths":["\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/unwrapinboundin(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/ChannelInboundHandler-Implementations"]]},"metadata":{"symbolKind":"method","externalID":"s:7NIOCore21ChannelInboundHandlerPAAE06unwrapC2Iny0cF0QzAA6NIOAnyVF::SYNTHESIZED::s:12NIOWebSocket03WebB20ProtocolErrorHandlerC","modules":[{"name":"NIOWebSocket"}],"role":"symbol","title":"unwrapInboundIn(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrapInboundIn"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"InboundIn","kind":"typeIdentifier"}],"roleHeading":"Instance Method","extendedModule":"NIOCore"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrapInboundIn"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"InboundIn","kind":"typeIdentifier"}]}]}],"abstract":[{"type":"text","text":"Unwrap the provided "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" that was passed to "},{"type":"codeVoice","code":"channelRead"},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/unwrapInboundIn(_:)"},"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/unwrapInboundIn(_:)":{"url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/unwrapinboundin(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/unwrapInboundIn(_:)","kind":"symbol","abstract":[{"type":"text","text":"Unwrap the provided "},{"code":"NIOAny","type":"codeVoice"},{"text":" that was passed to ","type":"text"},{"code":"channelRead","type":"codeVoice"},{"type":"text","text":"."}],"title":"unwrapInboundIn(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrapInboundIn","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"InboundIn","kind":"typeIdentifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"title":"NIOWebSocket","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","kind":"symbol","url":"\/documentation\/niowebsocket","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","url":"\/documentation\/niocore\/nioany","type":"topic","title":"NIOAny","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOAny","kind":"identifier"}],"navigatorTitle":[{"text":"NIOAny","kind":"identifier"}],"abstract":[{"code":"NIOAny","type":"codeVoice"},{"text":" is an opaque container for values of ","type":"text"},{"inlineContent":[{"text":"any","type":"text"}],"type":"emphasis"},{"text":" type, similar to Swiftâ€™s builtin ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" type. Contrary to","type":"text"},{"text":" ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" the overhead of ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" depends on the the type of the wrapped value. Certain types that are important","type":"text"},{"text":" ","type":"text"},{"text":"for the performance of a SwiftNIO application like ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FileRegion","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"AddressEnvelope<ByteBuffer>","type":"codeVoice"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" just like ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" will contain them within an existential container.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/ChannelInboundHandler-Implementations":{"title":"ChannelInboundHandler Implementations","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/ChannelInboundHandler-Implementations","url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/channelinboundhandler-implementations","role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler","navigatorTitle":[{"kind":"identifier","text":"WebSocketProtocolErrorHandler"}],"title":"WebSocketProtocolErrorHandler","url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler","abstract":[{"type":"text","text":"A simple "},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that catches protocol errors emitted by the","type":"text"},{"text":" ","type":"text"},{"code":"WebSocketFrameDecoder","type":"codeVoice"},{"text":" and automatically generates protocol error responses.","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebSocketProtocolErrorHandler"}]}}}