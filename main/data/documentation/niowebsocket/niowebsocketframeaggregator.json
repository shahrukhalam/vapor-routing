{"metadata":{"symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketFrameAggregator","kind":"identifier"}],"title":"NIOWebSocketFrameAggregator","roleHeading":"Class","modules":[{"name":"NIOWebSocket"}],"externalID":"s:12NIOWebSocket0aB15FrameAggregatorC","role":"symbol","navigatorTitle":[{"text":"NIOWebSocketFrameAggregator","kind":"identifier"}]},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWebSocketFrameAggregator"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":".ping","type":"codeVoice"},{"type":"text","text":", "},{"code":".pong","type":"codeVoice"},{"type":"text","text":", "},{"code":".closeConnection","type":"codeVoice"},{"type":"text","text":" frames are forwarded during frame aggregation"}]}]}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/channelRead(context:data:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundOut"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/Error"],"title":"Enumerations"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelInboundHandler-Implementations"],"title":"Default Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/niowebsocketframeaggregator"]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket"]]},"abstract":[{"code":"NIOWebSocketFrameAggregator","type":"codeVoice"},{"text":" buffers inbound fragmented ","type":"text"},{"code":"WebSocketFrame","type":"codeVoice"},{"type":"text","text":"’s and aggregates them into a single "},{"code":"WebSocketFrame","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It guarantees that a "},{"code":"WebSocketFrame","type":"codeVoice"},{"type":"text","text":" with an "},{"code":"opcode","type":"codeVoice"},{"type":"text","text":" of "},{"code":".continuation","type":"codeVoice"},{"type":"text","text":" is never forwarded."},{"type":"text","text":" "},{"type":"text","text":"Frames which are not fragmented are just forwarded without any processing."},{"type":"text","text":" "},{"type":"text","text":"Fragmented frames are unmasked, concatenated and forwarded as a new "},{"code":"WebSocketFrame","type":"codeVoice"},{"type":"text","text":" which is either a "},{"type":"codeVoice","code":".binary"},{"type":"text","text":" or "},{"type":"codeVoice","code":".text"},{"type":"text","text":" frame."},{"type":"text","text":" "},{"type":"codeVoice","code":"extensionData"},{"type":"text","text":", "},{"type":"codeVoice","code":"rsv1"},{"type":"text","text":", "},{"type":"codeVoice","code":"rsv2"},{"type":"text","text":" and "},{"type":"codeVoice","code":"rsv3"},{"type":"text","text":" are lost if a frame is fragmented because they cannot be concatenated."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/InboundOut":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundOut","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundOut","kind":"identifier"}],"title":"NIOWebSocketFrameAggregator.InboundOut","kind":"symbol","type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/inboundout","navigatorTitle":[{"text":"InboundOut","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/Error":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Error","kind":"identifier"}],"role":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/error","abstract":[],"type":"topic","title":"NIOWebSocketFrameAggregator.Error","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/Error","navigatorTitle":[{"kind":"identifier","text":"Error"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minNonFinalFragmentSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxAccumulatedFrameCount","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxAccumulatedFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/init(minnonfinalfragmentsize:maxaccumulatedframecount:maxaccumulatedframesize:)","abstract":[{"type":"text","text":"Configures a "},{"type":"codeVoice","code":"NIOWebSocketFrameAggregator"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)","type":"topic","title":"init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"title":"NIOWebSocket","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","kind":"symbol","url":"\/documentation\/niowebsocket","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/InboundIn":{"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/inboundin","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundIn","role":"symbol","kind":"symbol","title":"NIOWebSocketFrameAggregator.InboundIn"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/ChannelHandler-Implementations":{"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/channelhandler-implementations","type":"topic","role":"collectionGroup","kind":"article","title":"ChannelHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelHandler-Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketFrameAggregator","kind":"identifier"}],"navigatorTitle":[{"text":"NIOWebSocketFrameAggregator","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator","kind":"symbol","title":"NIOWebSocketFrameAggregator","abstract":[{"type":"codeVoice","code":"NIOWebSocketFrameAggregator"},{"text":" buffers inbound fragmented ","type":"text"},{"type":"codeVoice","code":"WebSocketFrame"},{"text":"’s and aggregates them into a single ","type":"text"},{"type":"codeVoice","code":"WebSocketFrame"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"It guarantees that a ","type":"text"},{"type":"codeVoice","code":"WebSocketFrame"},{"text":" with an ","type":"text"},{"type":"codeVoice","code":"opcode"},{"text":" of ","type":"text"},{"type":"codeVoice","code":".continuation"},{"text":" is never forwarded.","type":"text"},{"text":" ","type":"text"},{"text":"Frames which are not fragmented are just forwarded without any processing.","type":"text"},{"text":" ","type":"text"},{"text":"Fragmented frames are unmasked, concatenated and forwarded as a new ","type":"text"},{"type":"codeVoice","code":"WebSocketFrame"},{"text":" which is either a ","type":"text"},{"type":"codeVoice","code":".binary"},{"text":" or ","type":"text"},{"type":"codeVoice","code":".text"},{"text":" frame.","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"extensionData"},{"text":", ","type":"text"},{"type":"codeVoice","code":"rsv1"},{"text":", ","type":"text"},{"type":"codeVoice","code":"rsv2"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"rsv3"},{"text":" are lost if a frame is fragmented because they cannot be concatenated.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/ChannelInboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelInboundHandler-Implementations","abstract":[],"title":"ChannelInboundHandler Implementations","kind":"article","type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/channelinboundhandler-implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/channelRead(context:data:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/channelread(context:data:)","type":"topic","role":"symbol","kind":"symbol","title":"channelRead(context:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/channelRead(context:data:)","abstract":[{"text":"Called when some data has been read from the remote peer.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"url":"\/documentation\/niocore\/channelinboundhandler","type":"topic","title":"ChannelInboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler"}}}