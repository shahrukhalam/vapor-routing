{"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Called when the upgrade response has been flushed. At this time it is safe to mutate the channel pipeline"},{"type":"text","text":" "},{"type":"text","text":"to add whatever channel handlers are required. Until the returned "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" succeeds, all received"},{"type":"text","text":" "},{"type":"text","text":"data will be buffered."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/niowebsocketserverupgrader\/upgrade(context:upgraderequest:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader\/upgrade(context:upgradeRequest:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader"]]},"sections":[],"kind":"symbol","metadata":{"roleHeading":"Instance Method","symbolKind":"method","title":"upgrade(context:upgradeRequest:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"upgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upgradeRequest"},{"text":": ","kind":"text"},{"text":"HTTPRequestHead","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"NIOWebSocket"}],"role":"symbol","externalID":"s:12NIOWebSocket0aB14ServerUpgraderC7upgrade7context0E7Request7NIOCore15EventLoopFutureCyytGAG21ChannelHandlerContextC_8NIOHTTP115HTTPRequestHeadVtF"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext"},{"text":", ","kind":"text"},{"text":"upgradeRequest","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPRequestHead","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPRequestHead"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}]}],"kind":"declarations"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"title":"NIOWebSocket","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","kind":"symbol","url":"\/documentation\/niowebsocket","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketServerUpgrader/upgrade(context:upgradeRequest:)":{"type":"topic","abstract":[{"type":"text","text":"Called when the upgrade response has been flushed. At this time it is safe to mutate the channel pipeline"},{"type":"text","text":" "},{"type":"text","text":"to add whatever channel handlers are required. Until the returned "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" succeeds, all received"},{"type":"text","text":" "},{"type":"text","text":"data will be buffered."}],"kind":"symbol","title":"upgrade(context:upgradeRequest:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"upgradeRequest","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"HTTPRequestHead","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader\/upgrade(context:upgradeRequest:)","url":"\/documentation\/niowebsocket\/niowebsocketserverupgrader\/upgrade(context:upgraderequest:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketServerUpgrader":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketServerUpgrader","kind":"identifier"}],"abstract":[{"type":"text","text":"A "},{"code":"HTTPServerProtocolUpgrader","type":"codeVoice"},{"type":"text","text":" that knows how to do the WebSocket upgrade dance."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader","type":"topic","navigatorTitle":[{"text":"NIOWebSocketServerUpgrader","kind":"identifier"}],"url":"\/documentation\/niowebsocket\/niowebsocketserverupgrader","title":"NIOWebSocketServerUpgrader","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"title":"ChannelHandlerContext","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","kind":"symbol","url":"\/documentation\/niocore\/channelhandlercontext","abstract":[{"type":"text","text":"Every "},{"code":"ChannelHandler","type":"codeVoice"},{"text":" has – when added to a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" – a corresponding ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" which is","type":"text"},{"text":" ","type":"text"},{"text":"the way ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s can interact with other ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in the pipeline.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPRequestHead":{"type":"topic","url":"\/documentation\/niohttp1\/httprequesthead","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPRequestHead","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPRequestHead","abstract":[{"type":"text","text":"A representation of the request line and header fields of a HTTP request."}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HTTPRequestHead","kind":"identifier"}],"title":"HTTPRequestHead"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","title":"EventLoopFuture"}}}