{"metadata":{"roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebSocketFrameEncoder"}],"role":"symbol","externalID":"s:12NIOWebSocket03WebB12FrameEncoderC","navigatorTitle":[{"kind":"identifier","text":"WebSocketFrameEncoder"}],"title":"WebSocketFrameEncoder","symbolKind":"class","modules":[{"name":"NIOWebSocket"}]},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketFrameEncoder","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This encoder has limited enforcement of compliance to RFC 6455. In particular, to guarantee"},{"type":"text","text":" "},{"type":"text","text":"that the encoder can handle arbitrary extensions, only normative MUST\/MUST NOTs that do not"},{"type":"text","text":" "},{"type":"text","text":"relate to extensions (e.g. the requirement that control frames not have lengths larger than"},{"type":"text","text":" "},{"type":"text","text":"125 bytes) are enforced by this encoder."}],"type":"paragraph"},{"inlineContent":[{"text":"This encoder does not have any support for encoder extensions. If you wish to support","type":"text"},{"text":" ","type":"text"},{"text":"extensions, you should implement a message-to-message encoder that performs the appropriate","type":"text"},{"text":" ","type":"text"},{"text":"frame transformation as needed.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/handlerAdded(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/handlerRemoved(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/write(context:data:promise:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/OutboundOut"],"title":"Type Aliases"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/ChannelOutboundHandler-Implementations"],"title":"Default Implementations"}],"abstract":[{"text":"An inbound ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" that serializes structured websocket frames into a byte stream","type":"text"},{"text":" ","type":"text"},{"text":"for sending on the network.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder"},"schemaVersion":{"patch":0,"minor":3,"major":0},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"variants":[{"paths":["\/documentation\/niowebsocket\/websocketframeencoder"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"title":"NIOWebSocket","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","kind":"symbol","url":"\/documentation\/niowebsocket","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}],"abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"ChannelOutboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"url":"\/documentation\/niocore\/channeloutboundhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/handlerRemoved(context:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/handlerRemoved(context:)","role":"symbol","url":"\/documentation\/niowebsocket\/websocketframeencoder\/handlerremoved(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerRemoved"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"text":"Called when this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" is removed from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","title":"handlerRemoved(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/init()":{"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","title":"init()","url":"\/documentation\/niowebsocket\/websocketframeencoder\/init()","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/ChannelOutboundHandler-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/ChannelOutboundHandler-Implementations","type":"topic","title":"ChannelOutboundHandler Implementations","url":"\/documentation\/niowebsocket\/websocketframeencoder\/channeloutboundhandler-implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/handlerAdded(context:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","title":"handlerAdded(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/handlerAdded(context:)","abstract":[{"type":"text","text":"Called when this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" is added to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"url":"\/documentation\/niowebsocket\/websocketframeencoder\/handleradded(context:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder":{"navigatorTitle":[{"kind":"identifier","text":"WebSocketFrameEncoder"}],"url":"\/documentation\/niowebsocket\/websocketframeencoder","title":"WebSocketFrameEncoder","abstract":[{"text":"An inbound ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that serializes structured websocket frames into a byte stream","type":"text"},{"text":" ","type":"text"},{"text":"for sending on the network.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebSocketFrameEncoder"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/OutboundIn":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundIn","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"The type of the outbound data which is wrapped in ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"OutboundIn","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/OutboundIn","type":"topic","role":"symbol","url":"\/documentation\/niowebsocket\/websocketframeencoder\/outboundin","title":"WebSocketFrameEncoder.OutboundIn"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/write(context:data:promise:)":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Called to request a write operation. The write operation will write the messages through the"},{"type":"text","text":" "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.flush"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"type":"text","text":" is called."}],"title":"write(context:data:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/write(context:data:promise:)","url":"\/documentation\/niowebsocket\/websocketframeencoder\/write(context:data:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":">?)","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/OutboundOut":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/OutboundOut","type":"topic","role":"symbol","url":"\/documentation\/niowebsocket\/websocketframeencoder\/outboundout","title":"WebSocketFrameEncoder.OutboundOut"}}}