{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxFrameSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" = 1 << 14)"}]}]},{"kind":"parameters","parameters":[{"name":"maxFrameSize","content":[{"inlineContent":[{"type":"text","text":"The maximum frame size the decoder is willing to tolerate from the"},{"type":"text","text":" "},{"type":"text","text":"remote peer. WebSockets in principle allows frame sizes up to "},{"type":"codeVoice","code":"2**64"},{"type":"text","text":" bytes, but"},{"type":"text","text":" "},{"type":"text","text":"this is an objectively unreasonable maximum value (on AMD64 systems it is not"},{"type":"text","text":" "},{"type":"text","text":"possible to even allocate a buffer large enough to handle this size), so we"},{"type":"text","text":" "},{"type":"text","text":"set a lower one. The default value is the same as the default HTTP\/2 max frame"},{"type":"text","text":" "},{"type":"text","text":"size, "},{"type":"codeVoice","code":"2**14"},{"type":"text","text":" bytes. Users may override this to any value up to "},{"type":"codeVoice","code":"UInt32.max"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Users are strongly encouraged not to increase this value unless they absolutely"},{"type":"text","text":" "},{"type":"text","text":"must, as the decoder will not produce partial frames, meaning that it will hold"},{"type":"text","text":" "},{"type":"text","text":"on to data until the "},{"type":"emphasis","inlineContent":[{"text":"entire","type":"text"}]},{"type":"text","text":" body is received."}],"type":"paragraph"}]},{"name":"automaticErrorHandling","content":[{"type":"paragraph","inlineContent":[{"text":"Whether this ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" should automatically handle","type":"text"},{"text":" ","type":"text"},{"text":"protocol errors in frame serialization, or whether it should allow the pipeline","type":"text"},{"text":" ","type":"text"},{"text":"to handle them.","type":"text"}]}]}]}],"variants":[{"paths":["\/documentation\/niowebsocket\/websocketframedecoder\/init(maxframesize:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Construct a new "},{"code":"WebSocketFrameDecoder","type":"codeVoice"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder\/init(maxFrameSize:)","interfaceLanguage":"swift"},"metadata":{"title":"init(maxFrameSize:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"symbolKind":"init","modules":[{"name":"NIOWebSocket"}],"roleHeading":"Initializer","role":"symbol","externalID":"s:12NIOWebSocket03WebB12FrameDecoderC03maxD4SizeACSi_tcfc"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"title":"NIOWebSocket","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","kind":"symbol","url":"\/documentation\/niowebsocket","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameDecoder":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketFrameDecoder","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"An inbound "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that deserializes websocket frames into a structured"},{"type":"text","text":" "},{"type":"text","text":"format for further processing."}],"url":"\/documentation\/niowebsocket\/websocketframedecoder","navigatorTitle":[{"text":"WebSocketFrameDecoder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder","kind":"symbol","title":"WebSocketFrameDecoder","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameDecoder/init(maxFrameSize:)":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(maxFrameSize:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder\/init(maxFrameSize:)","url":"\/documentation\/niowebsocket\/websocketframedecoder\/init(maxframesize:)","type":"topic","kind":"symbol","abstract":[{"text":"Construct a new ","type":"text"},{"type":"codeVoice","code":"WebSocketFrameDecoder"}]}}}