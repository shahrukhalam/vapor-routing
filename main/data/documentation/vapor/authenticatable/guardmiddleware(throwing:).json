{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable"]]},"abstract":[{"type":"text","text":"This middleware ensures that an "},{"type":"codeVoice","code":"Authenticatable"},{"type":"text","text":" type "},{"type":"codeVoice","code":"A"},{"type":"text","text":" has been authenticated"},{"type":"text","text":" "},{"type":"text","text":"by a previous "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" or throws an "},{"type":"codeVoice","code":"Error"},{"type":"text","text":". The middlewares that actually perform"},{"type":"text","text":" "},{"type":"text","text":"authentication will "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" throw errors if they fail to authenticate the user (except in"},{"type":"text","text":" "},{"type":"text","text":"some exceptional cases like malformed data). This allows the middlewares to be composed"},{"type":"text","text":" "},{"type":"text","text":"together to create chains of authentication for multiple user types."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable\/guardMiddleware(throwing:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"guardMiddleware"},{"kind":"text","text":"("},{"kind":"externalParam","text":"throwing"},{"kind":"text","text":" "},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":" = Abort(.unauthorized, reason: \"\\(Self.self) not authenticated.\")) -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor10MiddlewareP","text":"Middleware"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"throwing","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"Error","type":"codeVoice"},{"text":" to throw if the type is not authed.","type":"text"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Use this middleware to protect routes that might not otherwise attempt to access the"},{"type":"text","text":" "},{"type":"text","text":"authenticated user (which always requires prior authentication)."}],"type":"paragraph"},{"inlineContent":[{"text":"Use ","type":"text"},{"code":"Authenticatable.guardMiddleware(...)","type":"codeVoice"},{"text":" to create an instance.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Use this middleware in conjunction with other middleware such as "},{"code":"BearerAuthenticator","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"BasicAuthenticator","type":"codeVoice"},{"type":"text","text":" to do the actual authentication."}],"type":"paragraph"}]}],"kind":"symbol","metadata":{"role":"symbol","title":"guardMiddleware(throwing:)","extendedModule":"Vapor","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"guardMiddleware"},{"kind":"text","text":"("},{"kind":"externalParam","text":"throwing"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:5Vapor10MiddlewareP","kind":"typeIdentifier","text":"Middleware"}],"externalID":"s:5Vapor15AuthenticatablePAAE15guardMiddleware8throwingAA0D0_ps5Error_p_tFZ","modules":[{"name":"Vapor"}],"symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vapor\/authenticatable\/guardmiddleware(throwing:)"]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor/Middleware":{"title":"Middleware","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware","role":"symbol","abstract":[{"code":"Middleware","type":"codeVoice"},{"text":" is placed between the server and your router. It is capable of","type":"text"},{"text":" ","type":"text"},{"text":"mutating both incoming requests and outgoing responses. ","type":"text"},{"code":"Middleware","type":"codeVoice"},{"text":" can choose","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to pass requests on to the next "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" in a chain, or they can short circuit and"},{"type":"text","text":" "},{"type":"text","text":"return a custom "},{"type":"codeVoice","code":"Response"},{"type":"text","text":" if desired."}],"url":"\/documentation\/vapor\/middleware","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"type":"topic","abstract":[],"role":"collection","url":"\/documentation\/vapor","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","title":"Vapor"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Authenticatable/guardMiddleware(throwing:)":{"title":"guardMiddleware(throwing:)","abstract":[{"type":"text","text":"This middleware ensures that an "},{"type":"codeVoice","code":"Authenticatable"},{"type":"text","text":" type "},{"type":"codeVoice","code":"A"},{"type":"text","text":" has been authenticated"},{"type":"text","text":" "},{"type":"text","text":"by a previous "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" or throws an "},{"type":"codeVoice","code":"Error"},{"type":"text","text":". The middlewares that actually perform"},{"type":"text","text":" "},{"type":"text","text":"authentication will "},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"type":"text","text":" throw errors if they fail to authenticate the user (except in"},{"type":"text","text":" "},{"type":"text","text":"some exceptional cases like malformed data). This allows the middlewares to be composed"},{"type":"text","text":" "},{"type":"text","text":"together to create chains of authentication for multiple user types."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable\/guardMiddleware(throwing:)","type":"topic","url":"\/documentation\/vapor\/authenticatable\/guardmiddleware(throwing:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"guardMiddleware","kind":"identifier"},{"text":"(","kind":"text"},{"text":"throwing","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:5Vapor10MiddlewareP","text":"Middleware","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor/Authenticatable":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable","title":"Authenticatable","url":"\/documentation\/vapor\/authenticatable","kind":"symbol","abstract":[{"type":"text","text":"Capable of being authenticated."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Authenticatable"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Authenticatable"}]}}}