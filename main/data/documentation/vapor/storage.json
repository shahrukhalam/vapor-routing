{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"]]},"metadata":{"modules":[{"name":"Vapor"}],"roleHeading":"Structure","title":"Storage","role":"symbol","externalID":"s:5Vapor7StorageV","navigatorTitle":[{"text":"Storage","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Storage","kind":"identifier"}],"symbolKind":"struct"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/init(logger:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/clear()","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/contains(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/get(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/set(_:to:onShutdown:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/shutdown()"]},{"title":"Subscripts","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/subscript(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/subscript(_:default:)"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Storage"}],"platforms":["Linux"],"languages":["swift"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vapor\/storage"]}],"abstract":[{"text":"A container providing arbitrary storage for extensions of an existing type, designed to obviate","type":"text"},{"text":" ","type":"text"},{"text":"the problem of being unable to add stored properties to a type in an extension. Each stored item","type":"text"},{"text":" ","type":"text"},{"text":"is keyed by a type conforming to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/StorageKey"},{"text":" protocol.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/init(logger:)":{"url":"\/documentation\/vapor\/storage\/init(logger:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Create a new ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage","isActive":true,"type":"reference"},{"type":"text","text":" container using the given logger."}],"title":"init(logger:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/init(logger:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/contains(_:)":{"title":"contains(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"contains","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Key","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/vapor\/storage\/contains(_:)","abstract":[{"text":"Test whether the given key exists in the container.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/contains(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/clear()":{"url":"\/documentation\/vapor\/storage\/clear()","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/clear()","type":"topic","kind":"symbol","abstract":[{"text":"Delete all values from the container. Does ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"text":" invoke shutdown closures.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"clear","kind":"identifier"},{"text":"()","kind":"text"}],"title":"clear()"},"doc://co.pointfree.VaporRouting/documentation/Vapor/StorageKey":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/StorageKey","type":"topic","url":"\/documentation\/vapor\/storagekey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"StorageKey","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"StorageKey","kind":"identifier"}],"abstract":[{"type":"text","text":"A key used to store values in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage"},{"type":"text","text":" must conform to this protocol."}],"title":"StorageKey","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"type":"topic","abstract":[],"role":"collection","url":"\/documentation\/vapor","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","title":"Vapor"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/shutdown()":{"title":"shutdown()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shutdown","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/vapor\/storage\/shutdown()","abstract":[{"text":"For every key in the container having a shutdown closure, invoke the closure. Designed to","type":"text"},{"text":" ","type":"text"},{"text":"be invoked during an explicit app shutdown process or in a reference typeâ€™s ","type":"text"},{"type":"codeVoice","code":"deinit"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/shutdown()","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/set(_:to:onShutdown:)":{"url":"\/documentation\/vapor\/storage\/set(_:to:onshutdown:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/set(_:to:onShutdown:)","type":"topic","kind":"symbol","abstract":[{"text":"Set or remove a value for a given key, optionally providing a shutdown closure for the value.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Key","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"onShutdown","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ())?)","kind":"text"}],"title":"set(_:to:onShutdown:)"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage","type":"topic","url":"\/documentation\/vapor\/storage","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Storage","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Storage","kind":"identifier"}],"abstract":[{"type":"text","text":"A container providing arbitrary storage for extensions of an existing type, designed to obviate"},{"type":"text","text":" "},{"type":"text","text":"the problem of being unable to add stored properties to a type in an extension. Each stored item"},{"type":"text","text":" "},{"type":"text","text":"is keyed by a type conforming to "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/StorageKey","type":"reference","isActive":true},{"text":" protocol.","type":"text"}],"title":"Storage","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/get(_:)":{"title":"get(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Key","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/vapor\/storage\/get(_:)","abstract":[{"text":"Get the value of the given key if it exists and is of the proper type.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/get(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/subscript(_:)":{"url":"\/documentation\/vapor\/storage\/subscript(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/subscript(_:)","type":"topic","kind":"symbol","abstract":[{"text":"Read\/write access to values via keyed subscript.","type":"text"}],"fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Key","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"subscript(_:)"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/subscript(_:default:)":{"title":"subscript(_:default:)","role":"symbol","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Key","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"default","kind":"externalParam"},{"text":" _: () -> ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/vapor\/storage\/subscript(_:default:)","abstract":[{"text":"Read access to a value via keyed subscript, adding the provided default","type":"text"},{"text":" ","type":"text"},{"text":"value to the storage if the key does not already exist. Similar to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Swift\/Dictionary\/subscript(key:default:)"},{"text":". The ","type":"text"},{"type":"codeVoice","code":"defaultValue"},{"text":" autoclosure","type":"text"},{"text":" ","type":"text"},{"text":"is evaluated only when the key does not already exist in the container.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/subscript(_:default:)","kind":"symbol"}}}