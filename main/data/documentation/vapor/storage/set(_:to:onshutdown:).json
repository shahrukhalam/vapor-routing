{"sections":[],"metadata":{"externalID":"s:5Vapor7StorageV3set_2to10onShutdownyxm_5ValueQzSgyAHKcSgtAA0B3KeyRzlF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Key","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"onShutdown","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ())?)","kind":"text"}],"title":"set(_:to:onShutdown:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","modules":[{"name":"Vapor"}]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/set(_:to:onShutdown:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Key","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"onShutdown","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ())? = nil) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"StorageKey","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/StorageKey","preciseIdentifier":"s:5Vapor10StorageKeyP"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If a key that has a shutdown closure is removed by this method, the closure "},{"type":"strong","inlineContent":[{"text":"is","type":"text"}]},{"type":"text","text":" invoked."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vapor\/storage\/set(_:to:onshutdown:)"]}],"abstract":[{"type":"text","text":"Set or remove a value for a given key, optionally providing a shutdown closure for the value."}],"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor":{"type":"topic","abstract":[],"role":"collection","url":"\/documentation\/vapor","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","title":"Vapor"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage/set(_:to:onShutdown:)":{"url":"\/documentation\/vapor\/storage\/set(_:to:onshutdown:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage\/set(_:to:onShutdown:)","type":"topic","kind":"symbol","abstract":[{"text":"Set or remove a value for a given key, optionally providing a shutdown closure for the value.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Key","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"onShutdown","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ())?)","kind":"text"}],"title":"set(_:to:onShutdown:)"},"doc://co.pointfree.VaporRouting/documentation/Vapor/StorageKey":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/StorageKey","type":"topic","url":"\/documentation\/vapor\/storagekey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"StorageKey","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"StorageKey","kind":"identifier"}],"abstract":[{"type":"text","text":"A key used to store values in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage"},{"type":"text","text":" must conform to this protocol."}],"title":"StorageKey","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Storage":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Storage","type":"topic","url":"\/documentation\/vapor\/storage","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Storage","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Storage","kind":"identifier"}],"abstract":[{"type":"text","text":"A container providing arbitrary storage for extensions of an existing type, designed to obviate"},{"type":"text","text":" "},{"type":"text","text":"the problem of being unable to add stored properties to a type in an extension. Each stored item"},{"type":"text","text":" "},{"type":"text","text":"is keyed by a type conforming to "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/StorageKey","type":"reference","isActive":true},{"text":" protocol.","type":"text"}],"title":"Storage","kind":"symbol"}}}