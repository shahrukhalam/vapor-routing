{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices\/NIOFilterEmptyWritesHandler\/errorCaught(context:error:)","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"errorCaught","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" belongs to."}]}],"name":"context"},{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"Error","type":"codeVoice"},{"text":" that was encountered.","type":"text"}],"type":"paragraph"}],"name":"error"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This should call "},{"type":"codeVoice","code":"context.fireErrorCaught"},{"type":"text","text":" to forward the operation to the next "},{"type":"codeVoice","code":"_ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" if you want to allow the next handler to also handle the error."}],"type":"paragraph"}]}],"metadata":{"modules":[{"name":"NIOTransportServices"}],"symbolKind":"method","title":"errorCaught(context:error:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"errorCaught"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"externalID":"s:20NIOTransportServices27NIOFilterEmptyWritesHandlerC11errorCaught7context0G0y7NIOCore07ChannelF7ContextC_s5Error_ptF","roleHeading":"Instance Method","role":"symbol","extendedModule":"NIOTransportServices"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niotransportservices\/niofilteremptywriteshandler\/errorcaught(context:error:)"]}],"abstract":[{"type":"text","text":"An error was encountered earlier in the inbound "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices\/NIOFilterEmptyWritesHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices\/NIOFilterEmptyWritesHandler\/_ChannelInboundHandler-Implementations"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOTransportServices":{"title":"NIOTransportServices","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices","url":"\/documentation\/niotransportservices","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOTransportServices/NIOFilterEmptyWritesHandler/_ChannelInboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices\/NIOFilterEmptyWritesHandler\/_ChannelInboundHandler-Implementations","kind":"article","title":"_ChannelInboundHandler Implementations","type":"topic","url":"\/documentation\/niotransportservices\/niofilteremptywriteshandler\/_channelinboundhandler-implementations","role":"collectionGroup","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOTransportServices/NIOFilterEmptyWritesHandler/errorCaught(context:error:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices\/NIOFilterEmptyWritesHandler\/errorCaught(context:error:)","kind":"symbol","title":"errorCaught(context:error:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"errorCaught"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":")"}],"url":"\/documentation\/niotransportservices\/niofilteremptywriteshandler\/errorcaught(context:error:)","role":"symbol","abstract":[{"type":"text","text":"An error was encountered earlier in the inbound "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOTransportServices/NIOFilterEmptyWritesHandler":{"navigatorTitle":[{"kind":"identifier","text":"NIOFilterEmptyWritesHandler"}],"abstract":[{"type":"text","text":"A "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" that checks for outbound writes of zero length, which are then dropped. This is"},{"type":"text","text":" "},{"type":"text","text":"due to a bug in "},{"type":"codeVoice","code":"Network Framework"},{"type":"text","text":", where zero byte TCP writes lead to stalled connections."},{"type":"text","text":" "},{"type":"text","text":"Write promises are confirmed in the correct order."}],"role":"symbol","title":"NIOFilterEmptyWritesHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices\/NIOFilterEmptyWritesHandler","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOFilterEmptyWritesHandler"}],"url":"\/documentation\/niotransportservices\/niofilteremptywriteshandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"title":"ChannelHandlerContext","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","kind":"symbol","url":"\/documentation\/niocore\/channelhandlercontext","abstract":[{"type":"text","text":"Every "},{"code":"ChannelHandler","type":"codeVoice"},{"text":" has – when added to a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" – a corresponding ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" which is","type":"text"},{"text":" ","type":"text"},{"text":"the way ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s can interact with other ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in the pipeline.","type":"text"}]}}}