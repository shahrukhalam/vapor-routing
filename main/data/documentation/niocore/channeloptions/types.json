{"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channeloptions\/types"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Types","kind":"identifier"}]}]}],"metadata":{"symbolKind":"enum","externalID":"s:7NIOCore14ChannelOptionsV5TypesO","roleHeading":"Enumeration","extendedModule":"NIOCore","modules":[{"name":"NIOCore"}],"title":"ChannelOptions.Types","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Types"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Types"}]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AllocatorOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AllowRemoteHalfClosureOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AutoReadOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/BacklogOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ConnectTimeoutOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/DatagramVectorReadMessageCountOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ExplicitCongestionNotificationsOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/MaxMessagesPerReadOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ReceivePacketInfo","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/RecvAllocatorOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/SocketOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMark","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteSpinOption"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ConvenienceOptionValue"]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteSpinOption":{"title":"ChannelOptions.Types.WriteSpinOption","type":"topic","role":"symbol","url":"\/documentation\/niocore\/channeloptions\/types\/writespinoption","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WriteSpinOption"}],"navigatorTitle":[{"kind":"identifier","text":"WriteSpinOption"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteSpinOption","kind":"symbol","abstract":[{"code":"WriteSpinOption","type":"codeVoice"},{"text":" allows users to configure the number of repetitions of a only partially successful write call before considering the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" not writable.","type":"text"},{"text":" ","type":"text"},{"text":"Setting this option to ","type":"text"},{"code":"0","type":"codeVoice"},{"text":" means that we only issue one write call and if that call does not write all the bytes,","type":"text"},{"text":" ","type":"text"},{"text":"we consider the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" not writable.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/ConvenienceOptionValue":{"abstract":[{"type":"text","text":"Has an option been set?"},{"type":"text","text":" "},{"type":"text","text":"Option has a value of generic type ValueType."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConvenienceOptionValue"}],"type":"topic","url":"\/documentation\/niocore\/channeloptions\/types\/convenienceoptionvalue","title":"ChannelOptions.Types.ConvenienceOptionValue","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ConvenienceOptionValue","navigatorTitle":[{"kind":"identifier","text":"ConvenienceOptionValue"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/SocketOption":{"abstract":[{"type":"codeVoice","code":"SocketOption"},{"type":"text","text":" allows users to specify configuration settings that are directly applied to the underlying socket file descriptor."}],"url":"\/documentation\/niocore\/channeloptions\/types\/socketoption","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/SocketOption","title":"ChannelOptions.Types.SocketOption","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketOption"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SocketOption"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/AllocatorOption":{"abstract":[{"type":"codeVoice","code":"AllocatorOption"},{"type":"text","text":" allows to specify the "},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":" to use."}],"url":"\/documentation\/niocore\/channeloptions\/types\/allocatoroption","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AllocatorOption","title":"ChannelOptions.Types.AllocatorOption","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AllocatorOption"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AllocatorOption"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOptions"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloptions","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions","type":"topic","title":"ChannelOptions","abstract":[{"text":"Provides ","type":"text"},{"code":"ChannelOption","type":"codeVoice"},{"text":"s to be used with a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Bootstrap","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ServerBootstrap","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelOptions"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/ReceivePacketInfo":{"abstract":[{"type":"text","text":"When set to true IP level Packet Info information will be reported through "},{"type":"codeVoice","code":"AddressedEnvelope.Metadata"},{"type":"text","text":" for UDP packets."}],"url":"\/documentation\/niocore\/channeloptions\/types\/receivepacketinfo","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ReceivePacketInfo","title":"ChannelOptions.Types.ReceivePacketInfo","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReceivePacketInfo"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReceivePacketInfo"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/DatagramVectorReadMessageCountOption":{"role":"symbol","type":"topic","kind":"symbol","abstract":[{"code":"DatagramVectorReadMessageCountOption","type":"codeVoice"},{"text":" allows users to configure the number of messages to attempt to read in a single syscall on a","type":"text"},{"text":" ","type":"text"},{"text":"datagram ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/channeloptions\/types\/datagramvectorreadmessagecountoption","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DatagramVectorReadMessageCountOption","kind":"identifier"}],"navigatorTitle":[{"text":"DatagramVectorReadMessageCountOption","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/DatagramVectorReadMessageCountOption","title":"ChannelOptions.Types.DatagramVectorReadMessageCountOption"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/ConnectTimeoutOption":{"role":"symbol","type":"topic","kind":"symbol","abstract":[{"code":"ConnectTimeoutOption","type":"codeVoice"},{"text":" allows users to configure the ","type":"text"},{"code":"TimeAmount","type":"codeVoice"},{"text":" after which a connect will fail if it was not established in the meantime. May be","type":"text"},{"text":" ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", in which case the connection attempt will never time out.","type":"text"}],"url":"\/documentation\/niocore\/channeloptions\/types\/connecttimeoutoption","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ConnectTimeoutOption","kind":"identifier"}],"navigatorTitle":[{"text":"ConnectTimeoutOption","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ConnectTimeoutOption","title":"ChannelOptions.Types.ConnectTimeoutOption"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteBufferWaterMarkOption":{"role":"symbol","type":"topic","kind":"symbol","abstract":[{"code":"WriteBufferWaterMarkOption","type":"codeVoice"},{"text":" allows users to configure when a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" should be marked as writable or not. Once the amount of bytes queued in a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s outbound buffer is larger than ","type":"text"},{"code":"WriteBufferWaterMark.high","type":"codeVoice"},{"text":" the channel will be marked as non-writable and so","type":"text"},{"text":" ","type":"text"},{"code":"Channel.isWritable","type":"codeVoice"},{"text":" will return ","type":"text"},{"code":"false","type":"codeVoice"},{"text":". Once we were able to write some data out of the outbound buffer and the amount of bytes queued","type":"text"},{"text":" ","type":"text"},{"text":"falls below ","type":"text"},{"code":"WriteBufferWaterMark.low","type":"codeVoice"},{"text":" the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" will become writable again. Once this happens ","type":"text"},{"code":"Channel.writable","type":"codeVoice"},{"text":" will return","type":"text"},{"text":" ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" again. These writability changes are also propagated through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" and so can be intercepted via ","type":"text"},{"code":"ChannelInboundHandler.channelWritabilityChanged","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/channeloptions\/types\/writebufferwatermarkoption","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WriteBufferWaterMarkOption","kind":"identifier"}],"navigatorTitle":[{"text":"WriteBufferWaterMarkOption","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption","title":"ChannelOptions.Types.WriteBufferWaterMarkOption"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/AutoReadOption":{"url":"\/documentation\/niocore\/channeloptions\/types\/autoreadoption","abstract":[{"code":"AutoReadOption","type":"codeVoice"},{"text":" allows users to configure if a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" should automatically call ","type":"text"},{"code":"Channel.read","type":"codeVoice"},{"text":" again once all data was read from the transport or","type":"text"},{"text":" ","type":"text"},{"text":"if the user is responsible to call ","type":"text"},{"code":"Channel.read","type":"codeVoice"},{"text":" manually.","type":"text"}],"type":"topic","kind":"symbol","title":"ChannelOptions.Types.AutoReadOption","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AutoReadOption","kind":"identifier"}],"navigatorTitle":[{"text":"AutoReadOption","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AutoReadOption","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteBufferWaterMark":{"url":"\/documentation\/niocore\/channeloptions\/types\/writebufferwatermark","abstract":[{"text":"The watermark used to detect when ","type":"text"},{"code":"Channel.isWritable","type":"codeVoice"},{"text":" returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","kind":"symbol","title":"ChannelOptions.Types.WriteBufferWaterMark","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WriteBufferWaterMark","kind":"identifier"}],"navigatorTitle":[{"text":"WriteBufferWaterMark","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMark","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/RecvAllocatorOption":{"url":"\/documentation\/niocore\/channeloptions\/types\/recvallocatoroption","abstract":[{"code":"RecvAllocatorOption","type":"codeVoice"},{"text":" allows users to specify the ","type":"text"},{"code":"RecvByteBufferAllocator","type":"codeVoice"},{"text":" to use.","type":"text"}],"type":"topic","kind":"symbol","title":"ChannelOptions.Types.RecvAllocatorOption","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RecvAllocatorOption","kind":"identifier"}],"navigatorTitle":[{"text":"RecvAllocatorOption","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/RecvAllocatorOption","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Types"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloptions\/types","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types","type":"topic","title":"ChannelOptions.Types","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Types"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/MaxMessagesPerReadOption":{"url":"\/documentation\/niocore\/channeloptions\/types\/maxmessagesperreadoption","abstract":[{"code":"MaxMessagesPerReadOption","type":"codeVoice"},{"text":" allows users to configure the maximum number of read calls to the underlying transport are performed before wait again until","type":"text"},{"text":" ","type":"text"},{"text":"there is more to read and be notified.","type":"text"}],"type":"topic","kind":"symbol","title":"ChannelOptions.Types.MaxMessagesPerReadOption","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MaxMessagesPerReadOption","kind":"identifier"}],"navigatorTitle":[{"text":"MaxMessagesPerReadOption","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/MaxMessagesPerReadOption","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/AllowRemoteHalfClosureOption":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AllowRemoteHalfClosureOption"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloptions\/types\/allowremotehalfclosureoption","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/AllowRemoteHalfClosureOption","type":"topic","title":"ChannelOptions.Types.AllowRemoteHalfClosureOption","abstract":[{"code":"AllowRemoteHalfClosureOption","type":"codeVoice"},{"text":" allows users to configure whether the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" will close itself when its remote","type":"text"},{"text":" ","type":"text"},{"text":"peer shuts down its send stream, or whether it will remain open. If set to ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" (the default), the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" ","type":"text"},{"text":"will be closed automatically if the remote peer shuts down its send stream. If set to true, the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" will","type":"text"},{"text":" ","type":"text"},{"text":"not be closed: instead, a ","type":"text"},{"code":"ChannelEvent.inboundClosed","type":"codeVoice"},{"text":" user event will be sent on the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"and no more data will be received.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AllowRemoteHalfClosureOption"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/BacklogOption":{"url":"\/documentation\/niocore\/channeloptions\/types\/backlogoption","abstract":[{"code":"BacklogOption","type":"codeVoice"},{"text":" allows users to configure the ","type":"text"},{"code":"backlog","type":"codeVoice"},{"text":" value as specified in ","type":"text"},{"code":"man 2 listen","type":"codeVoice"},{"text":". This is only useful for ","type":"text"},{"code":"ServerSocketChannel","type":"codeVoice"},{"text":"s.","type":"text"}],"type":"topic","kind":"symbol","title":"ChannelOptions.Types.BacklogOption","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BacklogOption","kind":"identifier"}],"navigatorTitle":[{"text":"BacklogOption","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/BacklogOption","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/ExplicitCongestionNotificationsOption":{"role":"symbol","kind":"symbol","title":"ChannelOptions.Types.ExplicitCongestionNotificationsOption","type":"topic","url":"\/documentation\/niocore\/channeloptions\/types\/explicitcongestionnotificationsoption","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/ExplicitCongestionNotificationsOption","navigatorTitle":[{"kind":"identifier","text":"ExplicitCongestionNotificationsOption"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExplicitCongestionNotificationsOption"}],"abstract":[{"type":"text","text":"When set to true IP level ECN information will be reported through "},{"type":"codeVoice","code":"AddressedEnvelope.Metadata"}]}}}