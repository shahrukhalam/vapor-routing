{"variants":[{"paths":["\/documentation\/niocore\/eventloop\/assertnotineventloop(file:line:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","sections":[],"abstract":[{"text":"Asserts that the current thread is ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"text":" the one tied to this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, if running in debug mode, the process will be abnormally terminated as per the semantics of","type":"text"},{"text":" ","type":"text"},{"code":"preconditionFailure(_:file:line:)","type":"codeVoice"},{"text":". Never has any effect in release mode.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertNotInEventLoop(file:line:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertNotInEventLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#file","kind":"keyword"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"content":[{"type":"paragraph","inlineContent":[{"text":"This is not a customization point so calls to this function can be fully optimized out in release mode.","type":"text"}]}],"type":"aside","style":"note","name":"Note"}],"kind":"content"}],"metadata":{"symbolKind":"method","role":"symbol","extendedModule":"NIOCore","roleHeading":"Instance Method","title":"assertNotInEventLoop(file:line:)","modules":[{"name":"NIOCore"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertNotInEventLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:7NIOCore9EventLoopPAAE011assertNotInbC04file4lineys12StaticStringV_SutF"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until itâ€™s closed."}],"url":"\/documentation\/niocore\/eventloop","type":"topic","title":"EventLoop","role":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/assertNotInEventLoop(file:line:)":{"abstract":[{"text":"Asserts that the current thread is ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"text":" the one tied to this ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, if running in debug mode, the process will be abnormally terminated as per the semantics of","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"preconditionFailure(_:file:line:)"},{"text":". Never has any effect in release mode.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"assertNotInEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"url":"\/documentation\/niocore\/eventloop\/assertnotineventloop(file:line:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertNotInEventLoop(file:line:)","title":"assertNotInEventLoop(file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"}}}