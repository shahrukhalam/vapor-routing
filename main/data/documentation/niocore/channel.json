{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable"],"kind":"relationships"},{"type":"inheritedBy","title":"Inherited By","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel"],"kind":"relationships"},{"type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"],"kind":"relationships"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"},{"kind":"text","text":" : AnyObject, "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","kind":"typeIdentifier","text":"ChannelOutboundInvoker","preciseIdentifier":"s:7NIOCore22ChannelOutboundInvokerP"},{"kind":"text","text":", "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","kind":"typeIdentifier","text":"NIOPreconcurrencySendable","preciseIdentifier":"s:7NIOCore25NIOPreconcurrencySendableP"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"name":"Note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"All operations on "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" are thread-safe."}],"type":"paragraph"}],"style":"note"},{"type":"paragraph","inlineContent":[{"text":"In SwiftNIO, all I\/O operations are asynchronous and hence all operations on ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" are asynchronous too. This means","type":"text"},{"text":" ","type":"text"},{"text":"that all I\/O operations will return immediately, usually before the work has been completed. The ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":"s","type":"text"},{"text":" ","type":"text"},{"text":"passed to or returned by the operations are used to retrieve the result of an operation after it has completed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" owns its ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" which handles all I\/O events and requests associated with the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}]}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/allocator","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/closeFuture","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isActive","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isWritable","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/localAddress","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/parent","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/pipeline","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/remoteAddress","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/syncOptions-17fda"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/getOption(_:)-5gug6","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/nioSSL_tlsVersion()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/registerAlreadyConfigured0(promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/setOption(_:value:)-2fzo9","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/write(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-6zx58","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-9jslm"]}],"sections":[],"metadata":{"symbolKind":"protocol","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Channel","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"modules":[{"name":"NIOCore"}],"title":"Channel","externalID":"s:7NIOCore7ChannelP","role":"symbol"},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channel"]}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/parent":{"title":"parent","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":"?","kind":"text"}],"abstract":[{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s are hierarchical and might have a parent "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" hierarchies are in use for certain"},{"type":"text","text":" "},{"type":"text","text":"protocols such as HTTP\/2."}],"url":"\/documentation\/niocore\/channel\/parent","kind":"symbol","type":"topic","required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/parent"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2Pipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOHTTP2Handler","preciseIdentifier":"s:8NIOHTTP20A7HandlerC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ParserMode","preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initialLocalSettings"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"HTTP2Setting","preciseIdentifier":"s:8NIOHTTP212HTTP2SettingV"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"targetWindowSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inboundStreamInitializer"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">)?) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"HTTP2StreamMultiplexer","preciseIdentifier":"s:8NIOHTTP222HTTP2StreamMultiplexerC"},{"kind":"text","text":">"}],"role":"symbol","abstract":[{"type":"text","text":"Configures a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" to speak HTTP\/2."}],"title":"configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)","url":"\/documentation\/niocore\/channel\/configurehttp2pipeline(mode:initiallocalsettings:position:targetwindowsize:inboundstreaminitializer:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/isActive":{"title":"isActive","kind":"symbol","url":"\/documentation\/niocore\/channel\/isactive","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isActive"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isActive","required":true,"role":"symbol","abstract":[{"type":"text","text":"Returns if this "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is currently active. Active is defined as the period of time after the"},{"type":"text","text":" "},{"code":"channelActive","type":"codeVoice"},{"type":"text","text":" and before "},{"code":"channelInactive","type":"codeVoice"},{"text":" has fired. The main use for this is to know if ","type":"text"},{"code":"channelActive","type":"codeVoice"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"code":"channelInactive","type":"codeVoice"},{"text":" can be expected next when ","type":"text"},{"code":"handlerAdded","type":"codeVoice"},{"text":" was received.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"title":"EmbeddedChannel","role":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/allocator":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"allocator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/allocator","title":"allocator","type":"topic","required":true,"url":"\/documentation\/niocore\/channel\/allocator","role":"symbol","abstract":[{"text":"The ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"’s ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" allocator. This is ","type":"text"},{"inlineContent":[{"type":"text","text":"the only"}],"type":"emphasis"},{"text":" supported way of allocating ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":"s to be used with this ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/getOption(_:)-5gug6":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/getOption(_:)-5gug6","url":"\/documentation\/niocore\/channel\/getoption(_:)-5gug6","defaultImplementations":1,"required":true,"role":"symbol","title":"getOption(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getOption"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Option"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":") -> "},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Get the value of "},{"code":"option","type":"codeVoice"},{"type":"text","text":" for this "},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/setOption(_:value:)-2fzo9":{"defaultImplementations":1,"role":"symbol","title":"setOption(_:value:)","url":"\/documentation\/niocore\/channel\/setoption(_:value:)-2fzo9","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Set ","type":"text"},{"code":"option","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" on this ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/setOption(_:value:)-2fzo9","required":true,"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOPreconcurrencySendable":{"title":"NIOPreconcurrencySendable","type":"topic","role":"symbol","url":"\/documentation\/niocore\/niopreconcurrencysendable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"navigatorTitle":[{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","kind":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/writeAndFlush(_:)-9jslm":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeAndFlush"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"role":"symbol","title":"writeAndFlush(_:)","type":"topic","abstract":[{"type":"text","text":"Shortcut for calling "},{"type":"codeVoice","code":"write"},{"type":"text","text":" and "},{"type":"codeVoice","code":"flush"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/niocore\/channel\/writeandflush(_:)-9jslm","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-9jslm"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)","abstract":[{"text":"Configures a channel to perform a HTTP\/2 secure upgrade.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2SecureUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ChannelConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"http1ChannelConfigurator"},{"text":": (","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/niocore\/channel\/configurehttp2secureupgrade(h2channelconfigurator:http1channelconfigurator:)","title":"configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/nioSSL_tlsVersion()":{"title":"nioSSL_tlsVersion()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nioSSL_tlsVersion"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"TLSVersion","preciseIdentifier":"s:6NIOSSL10TLSVersionO"},{"kind":"text","text":"?>"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/nioSSL_tlsVersion()","url":"\/documentation\/niocore\/channel\/niossl_tlsversion()","type":"topic","abstract":[{"type":"text","text":"API to extract the "},{"type":"codeVoice","code":"TLSVersion"},{"type":"text","text":" from off the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2Pipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"text":": ","kind":"text"},{"text":"NIOHTTP2Handler","preciseIdentifier":"s:8NIOHTTP20A7HandlerC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ParserMode","preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"initialLocalSettings","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"HTTP2Setting","preciseIdentifier":"s:8NIOHTTP212HTTP2SettingV","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"position","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","kind":"typeIdentifier","text":"ChannelPipeline"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","kind":"typeIdentifier","text":"Position"},{"kind":"text","text":", "},{"kind":"externalParam","text":"targetWindowSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inboundStreamStateInitializer"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":", "},{"preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","kind":"typeIdentifier","text":"HTTP2StreamID"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">)?) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:8NIOHTTP222HTTP2StreamMultiplexerC","kind":"typeIdentifier","text":"HTTP2StreamMultiplexer"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Configures a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" to speak HTTP\/2."}],"deprecated":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)","title":"configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)","type":"topic","role":"symbol","url":"\/documentation\/niocore\/channel\/configurehttp2pipeline(mode:initiallocalsettings:position:targetwindowsize:inboundstreamstateinitializer:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"title":"Channel","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/isWritable":{"url":"\/documentation\/niocore\/channel\/iswritable","role":"symbol","required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isWritable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","kind":"symbol","title":"isWritable","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isWritable","abstract":[{"type":"text","text":"Returns if this "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is currently writable."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/localAddress":{"role":"symbol","type":"topic","required":true,"title":"localAddress","abstract":[{"type":"text","text":"The local "},{"type":"codeVoice","code":"SocketAddress"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/localAddress","url":"\/documentation\/niocore\/channel\/localaddress","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"localAddress","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/registerAlreadyConfigured0(promise:)":{"url":"\/documentation\/niocore\/channel\/registeralreadyconfigured0(promise:)","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/registerAlreadyConfigured0(promise:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerAlreadyConfigured0","kind":"identifier"},{"text":"(","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"role":"symbol","title":"registerAlreadyConfigured0(promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)","role":"symbol","abstract":[{"type":"text","text":"Configures a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" to speak either HTTP or HTTP\/2 according to what can be negotiated with the client."}],"title":"configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureCommonHTTPServerPipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ConnectionChannelConfigurator"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">)?, "},{"kind":"externalParam","text":"targetWindowSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/channel\/configurecommonhttpserverpipeline(h2connectionchannelconfigurator:targetwindowsize:_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2Pipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP20A7HandlerC","kind":"typeIdentifier","text":"NIOHTTP2Handler"},{"kind":"text","text":"."},{"preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO","kind":"typeIdentifier","text":"ParserMode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initialLocalSettings"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:8NIOHTTP212HTTP2SettingV","kind":"typeIdentifier","text":"HTTP2Setting"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","kind":"typeIdentifier","text":"ChannelPipeline"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","kind":"typeIdentifier","text":"Position"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inboundStreamStateInitializer"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":", "},{"preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","kind":"typeIdentifier","text":"HTTP2StreamID"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">)?) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:8NIOHTTP222HTTP2StreamMultiplexerC","kind":"typeIdentifier","text":"HTTP2StreamMultiplexer"},{"kind":"text","text":">"}],"title":"configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)","abstract":[{"type":"text","text":"Configures a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" to speak HTTP\/2."}],"kind":"symbol","role":"symbol","deprecated":true,"url":"\/documentation\/niocore\/channel\/configurehttp2pipeline(mode:initiallocalsettings:position:inboundstreamstateinitializer:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/syncOptions-17fda":{"type":"topic","url":"\/documentation\/niocore\/channel\/syncoptions-17fda","abstract":[{"type":"text","text":"Returns a view of the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" exposing synchronous versions of "},{"code":"setOption","type":"codeVoice"},{"type":"text","text":" and "},{"code":"getOption","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The default implementation returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementations must opt in to"},{"type":"text","text":" "},{"type":"text","text":"support this behavior."}],"required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syncOptions","kind":"identifier"},{"text":": ","kind":"text"},{"text":"NIOSynchronousChannelOptions","preciseIdentifier":"s:7NIOCore28NIOSynchronousChannelOptionsP","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","defaultImplementations":1,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/syncOptions-17fda","kind":"symbol","title":"syncOptions"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker":{"navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundInvoker"}],"title":"ChannelOutboundInvoker","url":"\/documentation\/niocore\/channeloutboundinvoker","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","abstract":[{"text":"Allows users to invoke an “outbound” operation related to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" that will flow through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" until","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"it will finally be executed by the the "},{"code":"ChannelCore","type":"codeVoice"},{"type":"text","text":" implementation."}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundInvoker"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/pipeline":{"type":"topic","abstract":[{"text":"The ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" which handles all I\/O events and requests associated with this ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/channel\/pipeline","kind":"symbol","required":true,"role":"symbol","title":"pipeline","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/pipeline","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pipeline","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/write(_:)":{"abstract":[{"type":"text","text":"Write data into the "},{"type":"codeVoice","code":"Channel"},{"text":", automatically wrapping with ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"write","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/channel\/write(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/write(_:)","title":"write(_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/closeFuture":{"required":true,"abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"closeFuture"},{"text":" will fire when the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" has been closed.","type":"text"}],"title":"closeFuture","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"closeFuture","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/closeFuture","role":"symbol","url":"\/documentation\/niocore\/channel\/closefuture"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/MulticastChannel":{"navigatorTitle":[{"text":"MulticastChannel","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/multicastchannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MulticastChannel","kind":"identifier"}],"title":"MulticastChannel","type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"MulticastChannel","type":"codeVoice"},{"type":"text","text":" is a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" that supports IP multicast operations: that is, a channel that can join multicast"},{"type":"text","text":" "},{"text":"groups.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/writeAndFlush(_:)-6zx58":{"title":"writeAndFlush(_:)","abstract":[{"type":"text","text":"Write and flush data into the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":", automatically wrapping with "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/niocore\/channel\/writeandflush(_:)-6zx58","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-6zx58","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeAndFlush"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/remoteAddress":{"title":"remoteAddress","url":"\/documentation\/niocore\/channel\/remoteaddress","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"remoteAddress","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/remoteAddress","kind":"symbol","abstract":[{"text":"The remote peer’s ","type":"text"},{"code":"SocketAddress","type":"codeVoice"},{"type":"text","text":"."}],"required":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureCommonHTTPServerPipeline","kind":"identifier"},{"text":"(","kind":"text"},{"text":"h2ConnectionChannelConfigurator","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">)?, (","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)","url":"\/documentation\/niocore\/channel\/configurecommonhttpserverpipeline(h2connectionchannelconfigurator:_:)","abstract":[{"type":"text","text":"Configures a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" to speak either HTTP or HTTP\/2 according to what can be negotiated with the client."}],"role":"symbol","title":"configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)"}}}