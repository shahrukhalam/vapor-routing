{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker"},"abstract":[{"text":"Fire inbound events related to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" until its end is reached or it’s consumed by a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"."}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInvoker"],"type":"inheritedBy","title":"Inherited By","kind":"relationships"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"],"type":"conformingTypes","title":"Conforming Types","kind":"relationships"}],"kind":"symbol","metadata":{"modules":[{"name":"NIOCore"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInboundInvoker","kind":"identifier"}],"externalID":"s:7NIOCore21ChannelInboundInvokerP","title":"ChannelInboundInvoker","roleHeading":"Protocol","symbolKind":"protocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundInvoker"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelActive()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelInactive()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelRead(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelReadComplete()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelRegistered()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelUnregistered()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelWritabilityChanged()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireErrorCaught(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireUserInboundEventTriggered(_:)"],"title":"Instance Methods"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInboundInvoker","kind":"identifier"}]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelinboundinvoker"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireChannelUnregistered()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelUnregistered()","abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" was unregistered from its "},{"code":"EventLoop","type":"codeVoice"},{"text":" which means no IO will be handled for a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" anymore.","type":"text"}],"kind":"symbol","title":"fireChannelUnregistered()","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelUnregistered","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/niocore\/channelinboundinvoker\/firechannelunregistered()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireErrorCaught(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireErrorCaught(_:)","abstract":[{"type":"text","text":"Called when an inbound operation "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" was caught."}],"kind":"symbol","title":"fireErrorCaught(_:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireErrorCaught","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/niocore\/channelinboundinvoker\/fireerrorcaught(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker":{"title":"ChannelInboundInvoker","url":"\/documentation\/niocore\/channelinboundinvoker","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker","type":"topic","navigatorTitle":[{"text":"ChannelInboundInvoker","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInboundInvoker","kind":"identifier"}],"abstract":[{"type":"text","text":"Fire inbound events related to a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" until its end is reached or it’s consumed by a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireChannelRegistered()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelRegistered()","abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"text":" was registered to its ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" and so IO will be processed.","type":"text"}],"kind":"symbol","title":"fireChannelRegistered()","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fireChannelRegistered"},{"kind":"text","text":"()"}],"role":"symbol","type":"topic","url":"\/documentation\/niocore\/channelinboundinvoker\/firechannelregistered()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireChannelWritabilityChanged()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelWritabilityChanged()","abstract":[{"type":"text","text":"Called when a "},{"type":"codeVoice","code":"Channel"},{"text":"’s writable state changes.","type":"text"}],"kind":"symbol","title":"fireChannelWritabilityChanged()","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelWritabilityChanged","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/niocore\/channelinboundinvoker\/firechannelwritabilitychanged()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireUserInboundEventTriggered(_:)":{"title":"fireUserInboundEventTriggered(_:)","url":"\/documentation\/niocore\/channelinboundinvoker\/fireuserinboundeventtriggered(_:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireUserInboundEventTriggered(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireUserInboundEventTriggered","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Any","kind":"keyword"},{"text":")","kind":"text"}],"required":true,"abstract":[{"text":"Trigger a custom user inbound event which will flow through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireChannelActive()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelActive()","abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"text":" becomes active.","type":"text"}],"kind":"symbol","title":"fireChannelActive()","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelActive","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/niocore\/channelinboundinvoker\/firechannelactive()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInvoker":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInvoker","kind":"identifier"}],"role":"symbol","title":"ChannelInvoker","url":"\/documentation\/niocore\/channelinvoker","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInvoker","abstract":[{"type":"text","text":"A protocol that signals that outbound and inbound events are triggered by this invoker."}],"navigatorTitle":[{"text":"ChannelInvoker","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireChannelReadComplete()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelReadComplete","kind":"identifier"},{"text":"()","kind":"text"}],"required":true,"url":"\/documentation\/niocore\/channelinboundinvoker\/firechannelreadcomplete()","type":"topic","title":"fireChannelReadComplete()","abstract":[{"text":"Called once there is no more data to read immediately on a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". Any new data received will be handled later.","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelReadComplete()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"title":"ChannelHandlerContext","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","kind":"symbol","url":"\/documentation\/niocore\/channelhandlercontext","abstract":[{"type":"text","text":"Every "},{"code":"ChannelHandler","type":"codeVoice"},{"text":" has – when added to a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" – a corresponding ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" which is","type":"text"},{"text":" ","type":"text"},{"text":"the way ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s can interact with other ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in the pipeline.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireChannelRead(_:)":{"url":"\/documentation\/niocore\/channelinboundinvoker\/firechannelread(_:)","role":"symbol","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelRead","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Called once there is some data read for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" that needs processing."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelRead(_:)","title":"fireChannelRead(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"url":"\/documentation\/niocore\/channelpipeline","kind":"symbol","abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","title":"ChannelPipeline","navigatorTitle":[{"text":"ChannelPipeline","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelPipeline","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker/fireChannelInactive()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker\/fireChannelInactive()","abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"text":" becomes inactive.","type":"text"}],"kind":"symbol","title":"fireChannelInactive()","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelInactive","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/niocore\/channelinboundinvoker\/firechannelinactive()"}}}