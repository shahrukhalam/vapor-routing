{"variants":[{"paths":["\/documentation\/niocore\/bytebuffer\/init(substring:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(substring:)"},"sections":[],"abstract":[{"text":"Create a fresh ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" containing the bytes of the ","type":"text"},{"code":"string","type":"codeVoice"},{"text":" encoded as UTF-8.","type":"text"}],"metadata":{"roleHeading":"Initializer","modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","role":"symbol","title":"init(substring:)","externalID":"s:7NIOCore10ByteBufferV9substringACSs_tcfc","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"substring","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":")"}]},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"substring"},{"text":" ","kind":"text"},{"text":"string","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This will allocate a new ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" with enough space to fit ","type":"text"},{"code":"string","type":"codeVoice"},{"text":" and potentially some extra space using","type":"text"},{"text":" ","type":"text"},{"text":"the default allocator.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"info: If you have access to a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":", ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocator"},{"text":" we","type":"text"},{"text":" ","type":"text"},{"text":"recommend using ","type":"text"},{"type":"codeVoice","code":"channel.allocator.buffer(substring:)"},{"text":". Or if you want to write multiple items into","type":"text"},{"text":" ","type":"text"},{"text":"the buffer use ","type":"text"},{"type":"codeVoice","code":"channel.allocator.buffer(capacity: ...)"},{"text":" to allocate a ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" of the right","type":"text"},{"text":" ","type":"text"},{"text":"size followed by a ","type":"text"},{"code":"writeSubstring","type":"codeVoice"},{"text":" instead of using this method. This allows SwiftNIO to do","type":"text"},{"text":" ","type":"text"},{"text":"accounting and optimisations of resources acquired for operations on a given ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" in the future.","type":"text"}]}]}]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol","url":"\/documentation\/niocore\/bytebuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init(substring:)":{"url":"\/documentation\/niocore\/bytebuffer\/init(substring:)","role":"symbol","title":"init(substring:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(substring:)","abstract":[{"type":"text","text":"Create a fresh "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" containing the bytes of the "},{"type":"codeVoice","code":"string"},{"text":" encoded as UTF-8.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"substring","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol"}}}