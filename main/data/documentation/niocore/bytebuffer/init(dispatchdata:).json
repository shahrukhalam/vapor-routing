{"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/niocore\/bytebuffer\/init(dispatchdata:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"init","roleHeading":"Initializer","extendedModule":"NIOCore","modules":[{"name":"NIOCore"}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dispatchData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchData","preciseIdentifier":"s:8Dispatch0A4DataV"},{"kind":"text","text":")"}],"externalID":"s:7NIOCore10ByteBufferV12dispatchDataAC8Dispatch0fE0V_tcfc","title":"init(dispatchData:)"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(dispatchData:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Create a fresh ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" containing the bytes contained in the given ","type":"text"},{"type":"codeVoice","code":"DispatchData"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dispatchData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A4DataV","text":"DispatchData"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This will allocate a new ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" with enough space to fit the bytes of the ","type":"text"},{"type":"codeVoice","code":"DispatchData"},{"text":" and potentially","type":"text"},{"text":" ","type":"text"},{"text":"some extra space using the default allocator.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"info: If you have access to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":", ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":", or ","type":"text"},{"code":"ByteBufferAllocator","type":"codeVoice"},{"text":" we","type":"text"},{"text":" ","type":"text"},{"text":"recommend using ","type":"text"},{"code":"channel.allocator.buffer(dispatchData:)","type":"codeVoice"},{"text":". Or if you want to write multiple items into","type":"text"},{"text":" ","type":"text"},{"text":"the buffer use ","type":"text"},{"code":"channel.allocator.buffer(capacity: ...)","type":"codeVoice"},{"text":" to allocate a ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" of the right","type":"text"},{"text":" ","type":"text"},{"text":"size followed by a ","type":"text"},{"code":"writeDispatchData","type":"codeVoice"},{"text":" instead of using this method. This allows SwiftNIO to do","type":"text"},{"text":" ","type":"text"},{"text":"accounting and optimisations of resources acquired for operations on a given ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" in the future.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init(dispatchData:)":{"url":"\/documentation\/niocore\/bytebuffer\/init(dispatchdata:)","abstract":[{"type":"text","text":"Create a fresh "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" containing the bytes contained in the given "},{"type":"codeVoice","code":"DispatchData"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(dispatchData:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dispatchData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchData","preciseIdentifier":"s:8Dispatch0A4DataV"},{"kind":"text","text":")"}],"title":"init(dispatchData:)","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol","url":"\/documentation\/niocore\/bytebuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"type":"topic"}}}