{"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"metadata":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","extendedModule":"NIOCore","externalID":"s:7NIOCore10ByteBufferVACycfc","roleHeading":"Initializer","symbolKind":"init","modules":[{"name":"NIOCore"}]},"abstract":[{"type":"text","text":"Return an empty "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" allocated with "},{"code":"ByteBufferAllocator()","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"Calling this constructor will not allocate because it will return a ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" that wraps a shared storage","type":"text"},{"text":" ","type":"text"},{"text":"object. As soon as you write to the constructed buffer however, you will incur an allocation because a","type":"text"},{"text":" ","type":"text"},{"text":"copy-on-write will happen.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"info: If you have access to a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":", "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":", or "},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":" it is"},{"type":"text","text":" "},{"type":"text","text":"recommended using "},{"type":"codeVoice","code":"channel.allocator.buffer(capacity: 0)"},{"type":"text","text":". This allows SwiftNIO to do"},{"type":"text","text":" "},{"type":"text","text":"accounting and optimisations of resources acquired for operations on a given "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" in the future."}]}]}],"type":"unorderedList"}]}],"variants":[{"paths":["\/documentation\/niocore\/bytebuffer\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init()"},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init()":{"type":"topic","title":"init()","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Return an empty "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" allocated with "},{"type":"codeVoice","code":"ByteBufferAllocator()"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/niocore\/bytebuffer\/init()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol","url":"\/documentation\/niocore\/bytebuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"type":"topic"}}}