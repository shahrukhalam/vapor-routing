{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubSequence","kind":"identifier"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:7NIOCore14CircularBufferV","text":"CircularBuffer","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/niocore\/markedcircularbuffer\/subsequence"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"symbolKind":"typealias","title":"MarkedCircularBuffer.SubSequence","roleHeading":"Type Alias","navigatorTitle":[{"kind":"identifier","text":"SubSequence"}],"extendedModule":"NIOCore","externalID":"s:7NIOCore20MarkedCircularBufferV11SubSequencea","modules":[{"name":"NIOCore"}],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubSequence"}]},"abstract":[{"type":"text","text":"Inherited from "},{"code":"Collection.SubSequence","type":"codeVoice"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MarkedCircularBuffer\/SubSequence","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MarkedCircularBuffer","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MarkedCircularBuffer\/Collection-Implementations"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/MarkedCircularBuffer/Collection-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MarkedCircularBuffer\/Collection-Implementations","url":"\/documentation\/niocore\/markedcircularbuffer\/collection-implementations","kind":"article","type":"topic","role":"collectionGroup","abstract":[],"title":"Collection Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/MarkedCircularBuffer":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MarkedCircularBuffer","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"MarkedCircularBuffer","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A circular buffer that allows one object at a time to be “marked” and easily identified and retrieved later.","type":"text"}],"title":"MarkedCircularBuffer","url":"\/documentation\/niocore\/markedcircularbuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MarkedCircularBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/MarkedCircularBuffer/SubSequence":{"url":"\/documentation\/niocore\/markedcircularbuffer\/subsequence","title":"MarkedCircularBuffer.SubSequence","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubSequence"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MarkedCircularBuffer\/SubSequence","role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SubSequence"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","title":"CircularBuffer","type":"topic","url":"\/documentation\/niocore\/circularbuffer","abstract":[{"type":"text","text":"An automatically expanding ring buffer implementation backed by a "},{"type":"codeVoice","code":"ContiguousArray"},{"type":"text","text":". Even though this implementation"},{"type":"text","text":" "},{"type":"text","text":"will automatically expand if more elements than "},{"type":"codeVoice","code":"initialCapacity"},{"text":" are stored, it’s advantageous to prevent","type":"text"},{"text":" ","type":"text"},{"text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"CircularBuffer"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CircularBuffer"}]}}}