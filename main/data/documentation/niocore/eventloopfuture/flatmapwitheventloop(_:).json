{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMapWithEventLoop"},{"kind":"text","text":"<"},{"text":"NewValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"callback","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"callback","content":[{"inlineContent":[{"text":"Function that will receive the value of this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" and return","type":"text"},{"text":" ","type":"text"},{"text":"a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"A future that will receive the eventual value.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This allows you to dynamically dispatch new asynchronous tasks as phases in a","type":"text"},{"text":" ","type":"text"},{"text":"longer series of processing steps. Note that you can use the results of the","type":"text"},{"text":" ","type":"text"},{"text":"current ","type":"text"},{"code":"EventLoopFuture<Value>","type":"codeVoice"},{"text":" when determining how to dispatch the next operation.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This works well when you have APIs that already know how to return ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":"s.","type":"text"},{"text":" ","type":"text"},{"text":"You can do something with the result of one and just return the next future:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let d1 = networkRequest(args).future()","let d2 = d1.flatMapWithEventLoop { t, eventLoop -> EventLoopFuture<NewValue> in","    eventLoop.makeSucceededFuture(t + 1)","}","d2.whenSuccess { u in","    NSLog(\"Result of second request: \\(u)\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: In a sense, the "},{"type":"codeVoice","code":"EventLoopFuture<NewValue>"},{"type":"text","text":" is returned before it’s created."}]}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"symbol","externalID":"s:7NIOCore15EventLoopFutureC011flatMapWithbC0yACyqd__GAEx_AA0bC0_ptclF","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMapWithEventLoop"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">(("},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"NIOCore"}],"title":"flatMapWithEventLoop(_:)","symbolKind":"method","extendedModule":"NIOCore"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/flatMapWithEventLoop(_:)"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"abstract":[{"text":"When the current ","type":"text"},{"code":"EventLoopFuture<Value>","type":"codeVoice"},{"text":" is fulfilled, run the provided callback,","type":"text"},{"text":" ","type":"text"},{"text":"which will provide a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" alongside the ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" associated with this future.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/flatmapwitheventloop(_:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/flatMapWithEventLoop(_:)":{"url":"\/documentation\/niocore\/eventloopfuture\/flatmapwitheventloop(_:)","title":"flatMapWithEventLoop(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flatMapWithEventLoop","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/flatMapWithEventLoop(_:)","abstract":[{"text":"When the current ","type":"text"},{"code":"EventLoopFuture<Value>","type":"codeVoice"},{"text":" is fulfilled, run the provided callback,","type":"text"},{"text":" ","type":"text"},{"text":"which will provide a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" alongside the "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" associated with this future."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until it’s closed."}],"url":"\/documentation\/niocore\/eventloop","type":"topic","title":"EventLoop","role":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","title":"EventLoopFuture"}}}