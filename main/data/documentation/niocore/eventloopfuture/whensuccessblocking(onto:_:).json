{"metadata":{"extendedModule":"NIOCore","externalID":"s:7NIOCore15EventLoopFutureC19whenSuccessBlocking4onto_y8Dispatch0I5QueueC_yxctF","symbolKind":"method","modules":[{"name":"NIOCore"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenSuccessBlocking"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onto"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"title":"whenSuccessBlocking(onto:_:)","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"sections":[],"abstract":[{"type":"text","text":"Adds an observer callback to this "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that is called when the"},{"type":"text","text":" "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" has a success result. The observer callback is permitted to block."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/whenSuccessBlocking(onto:_:)","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"whenSuccessBlocking","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onto","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"queue","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"DispatchQueue","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"callbackMayBlock","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"the "},{"type":"codeVoice","code":"DispatchQueue"},{"type":"text","text":" on which the blocking IO \/ task specified by "},{"type":"codeVoice","code":"callbackMayBlock"},{"type":"text","text":" is scheduled."}],"type":"paragraph"}],"name":"onto"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The callback that is called with the successful result of the "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"callbackMayBlock"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"An observer callback cannot return a value, meaning that this function cannot be chained","type":"text"},{"text":" ","type":"text"},{"text":"from. If you are attempting to create a computation pipeline, consider ","type":"text"},{"code":"map","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"flatMap","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"If you find yourself passing the results from this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" to a new ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" ","type":"text"},{"text":"in the body of this function, consider using ","type":"text"},{"code":"cascade","type":"codeVoice"},{"text":" instead.","type":"text"}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/niocore\/eventloopfuture\/whensuccessblocking(onto:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/whenSuccessBlocking(onto:_:)":{"title":"whenSuccessBlocking(onto:_:)","url":"\/documentation\/niocore\/eventloopfuture\/whensuccessblocking(onto:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"whenSuccessBlocking","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onto","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchQueue","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"text":", (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"abstract":[{"text":"Adds an observer callback to this ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" that is called when the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" has a success result. The observer callback is permitted to block.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/whenSuccessBlocking(onto:_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","title":"EventLoopFuture"}}}