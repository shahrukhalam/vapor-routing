{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#file"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value of the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" when it completes."}]}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"If the ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" resolves with a value, that value is returned from ","type":"text"},{"code":"wait()","type":"codeVoice"},{"text":". If","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" resolves with an error, that error will be thrown instead.","type":"text"},{"text":" ","type":"text"},{"code":"wait()","type":"codeVoice"},{"text":" will block whatever thread it is called on, so it must not be called on event loop","type":"text"},{"text":" ","type":"text"},{"text":"threads: it is primarily useful for testing, or for building interfaces between blocking","type":"text"},{"text":" ","type":"text"},{"text":"and non-blocking code.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The error value of the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" if it errors."}]}],"name":"Throws","style":"note","type":"aside"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Wait for the resolution of this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" by blocking the current thread until it"},{"type":"text","text":" "},{"type":"text","text":"resolves."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"roleHeading":"Instance Method","externalID":"s:7NIOCore15EventLoopFutureC4wait4file4linexs12StaticStringV_SutKF","role":"symbol","modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","title":"wait(file:line:)"},"variants":[{"paths":["\/documentation\/niocore\/eventloopfuture\/wait(file:line:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/wait(file:line:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/wait(file:line:)":{"kind":"symbol","url":"\/documentation\/niocore\/eventloopfuture\/wait(file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Wait for the resolution of this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" by blocking the current thread until it"},{"type":"text","text":" "},{"type":"text","text":"resolves."}],"title":"wait(file:line:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/wait(file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","title":"EventLoopFuture"}}}