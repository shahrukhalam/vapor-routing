{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/hop(to:)"},"abstract":[{"text":"Returns an ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that fires when this future completes, but executes its callbacks on the","type":"text"},{"text":" ","type":"text"},{"text":"target event loop instead of the original one.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"hop(to:)","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"extendedModule":"NIOCore","roleHeading":"Instance Method","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore15EventLoopFutureC3hop2toACyxGAA0bC0_p_tF"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"target","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"name":"to","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" that the returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" will run on.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"An ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" whose callbacks run on ","type":"text"},{"code":"target","type":"codeVoice"},{"text":" instead of the original loop.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"It is common to want to “hop” event loops when you arrange some work: for example, you’re closing one channel","type":"text"},{"text":" ","type":"text"},{"text":"from another, and want to hop back when the close completes. This method lets you spell that requirement","type":"text"},{"text":" ","type":"text"},{"text":"succinctly. It also contains an optimisation for the case when the loop you’re hopping ","type":"text"},{"inlineContent":[{"text":"from","type":"text"}],"type":"emphasis"},{"text":" is the same as","type":"text"},{"text":" ","type":"text"},{"text":"the one you’re hopping ","type":"text"},{"inlineContent":[{"text":"to","type":"text"}],"type":"emphasis"},{"text":", allowing you to avoid doing allocations in that case.","type":"text"}],"type":"paragraph"}]}],"sections":[],"variants":[{"paths":["\/documentation\/niocore\/eventloopfuture\/hop(to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until it’s closed."}],"url":"\/documentation\/niocore\/eventloop","type":"topic","title":"EventLoop","role":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/hop(to:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"hop(to:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/hop(to:)","abstract":[{"text":"Returns an ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" that fires when this future completes, but executes its callbacks on the","type":"text"},{"text":" ","type":"text"},{"text":"target event loop instead of the original one.","type":"text"}],"url":"\/documentation\/niocore\/eventloopfuture\/hop(to:)","role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","title":"EventLoopFuture"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"}}}