{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"whenFailureBlocking","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onto","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"queue","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"callbackMayBlock","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"onto","content":[{"inlineContent":[{"text":"the ","type":"text"},{"code":"DispatchQueue","type":"codeVoice"},{"text":" on which the blocking IO \/ task specified by ","type":"text"},{"code":"callbackMayBlock","type":"codeVoice"},{"text":" is scheduled.","type":"text"}],"type":"paragraph"}]},{"name":"callbackMayBlock","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The callback that is called with the failed result of the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"."}]}]}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"An observer callback cannot return a value, meaning that this function cannot be chained"},{"type":"text","text":" "},{"type":"text","text":"from. If you are attempting to create a computation pipeline, consider "},{"type":"codeVoice","code":"recover"},{"type":"text","text":" or "},{"type":"codeVoice","code":"flatMapError"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If you find yourself passing the results from this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" to a new "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" "},{"type":"text","text":"in the body of this function, consider using "},{"type":"codeVoice","code":"cascade"},{"type":"text","text":" instead."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/whenFailureBlocking(onto:_:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"kind":"symbol","metadata":{"extendedModule":"NIOCore","externalID":"s:7NIOCore15EventLoopFutureC19whenFailureBlocking4onto_y8Dispatch0I5QueueC_ys5Error_pctF","modules":[{"name":"NIOCore"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenFailureBlocking"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onto"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"role":"symbol","title":"whenFailureBlocking(onto:_:)","symbolKind":"method","roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Adds an observer callback to this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is called when the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" has a failure result. The observer callback is permitted to block."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/whenfailureblocking(onto:_:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/whenFailureBlocking(onto:_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenFailureBlocking"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onto"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"text":"Adds an observer callback to this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that is called when the","type":"text"},{"text":" ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" has a failure result. The observer callback is permitted to block.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/whenFailureBlocking(onto:_:)","kind":"symbol","type":"topic","title":"whenFailureBlocking(onto:_:)","url":"\/documentation\/niocore\/eventloopfuture\/whenfailureblocking(onto:_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","title":"EventLoopFuture"}}}