{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/map(_:)"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"When the current ","type":"text"},{"code":"EventLoopFuture<Value>","type":"codeVoice"},{"text":" is fulfilled, run the provided callback, which","type":"text"},{"text":" ","type":"text"},{"text":"performs a synchronous computation and returns a new value of type ","type":"text"},{"code":"NewValue","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/map(_:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"callback","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> (","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":")) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"callback","content":[{"inlineContent":[{"type":"text","text":"Function that will receive the value of this "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" and return"},{"type":"text","text":" "},{"type":"text","text":"a new value lifted into a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"A future that will receive the eventual value.","type":"text"}]}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"Operations performed in ","type":"text"},{"code":"map","type":"codeVoice"},{"text":" should not block, or they will block the entire event","type":"text"},{"text":" ","type":"text"},{"text":"loop. ","type":"text"},{"code":"map","type":"codeVoice"},{"text":" is intended for use when you have a data-driven function that performs","type":"text"},{"text":" ","type":"text"},{"text":"a simple data transformation that cannot error.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you have a data-driven function that can throw, you should use "},{"code":"flatMapThrowing","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"instead."}],"type":"paragraph"},{"code":["let future1 = eventually()","let future2 = future1.map { T -> U in","    ... stuff ...","    return u","}","let future3 = future2.map { U -> V in","    ... stuff ...","    return v","}"],"type":"codeListing","syntax":null}],"kind":"content"}],"metadata":{"modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method","role":"symbol","title":"map(_:)","externalID":"s:7NIOCore15EventLoopFutureC3mapyACyqd__Gqd__xclF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":")) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":">"}],"extendedModule":"NIOCore","symbolKind":"method"},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/map(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/map(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> (","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":")) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/niocore\/eventloopfuture\/map(_:)","abstract":[{"text":"When the current ","type":"text"},{"code":"EventLoopFuture<Value>","type":"codeVoice"},{"text":" is fulfilled, run the provided callback, which","type":"text"},{"text":" ","type":"text"},{"text":"performs a synchronous computation and returns a new value of type ","type":"text"},{"code":"NewValue","type":"codeVoice"},{"text":".","type":"text"}],"title":"map(_:)","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","title":"EventLoopFuture"}}}