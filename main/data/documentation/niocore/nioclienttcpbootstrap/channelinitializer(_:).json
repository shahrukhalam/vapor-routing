{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap\/channelInitializer(_:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/niocore\/nioclienttcpbootstrap\/channelinitializer(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Initialize the connected "},{"code":"SocketChannel","type":"codeVoice"},{"type":"text","text":" with "},{"code":"initializer","type":"codeVoice"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s to the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInitializer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"handler","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Channel","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">) -> ","kind":"text"},{"text":"NIOClientTCPBootstrap","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap","preciseIdentifier":"s:7NIOCore21NIOClientTCPBootstrapV"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"handler","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that initializes the provided "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The connected "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" will operate on "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" as inbound and "},{"code":"IOData","type":"codeVoice"},{"type":"text","text":" as outbound messages."}]},{"name":"Warning","style":"warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"handler"},{"text":" closure may be invoked ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"multiple times","type":"text"}]},{"text":" so it’s usually the right choice to instantiate","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s within ","type":"text"},{"type":"codeVoice","code":"handler"},{"text":". The reason ","type":"text"},{"type":"codeVoice","code":"handler"},{"text":" may be invoked multiple times is that to","type":"text"},{"text":" ","type":"text"},{"text":"successfully set up a connection multiple connections might be setup in the process. Assuming a","type":"text"},{"text":" ","type":"text"},{"text":"hostname that resolves to both IPv4 and IPv6 addresses, NIO will follow","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","type":"reference"},{"text":" and race both an IPv4 and an IPv6","type":"text"},{"text":" ","type":"text"},{"text":"connection. It is possible that both connections get fully established before the IPv4 connection","type":"text"},{"text":" ","type":"text"},{"text":"will be closed again because the IPv6 connection ‘won the race’. Therefore the ","type":"text"},{"code":"channelInitializer","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"might be called multiple times and it’s important not to share stateful "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s in more"},{"type":"text","text":" "},{"type":"text","text":"than one "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}]}]}]}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInitializer"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore21NIOClientTCPBootstrapV","kind":"typeIdentifier","text":"NIOClientTCPBootstrap"}],"modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method","symbolKind":"method","title":"channelInitializer(_:)","externalID":"s:7NIOCore21NIOClientTCPBootstrapV18channelInitializeryAcA15EventLoopFutureCyytGAA7Channel_pcF"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"title":"Channel","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrap/channelInitializer(_:)":{"kind":"symbol","role":"symbol","url":"\/documentation\/niocore\/nioclienttcpbootstrap\/channelinitializer(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInitializer"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore21NIOClientTCPBootstrapV","kind":"typeIdentifier","text":"NIOClientTCPBootstrap"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap\/channelInitializer(_:)","type":"topic","title":"channelInitializer(_:)","abstract":[{"type":"text","text":"Initialize the connected "},{"code":"SocketChannel","type":"codeVoice"},{"type":"text","text":" with "},{"code":"initializer","type":"codeVoice"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s to the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrap":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOClientTCPBootstrap","kind":"identifier"}],"role":"symbol","url":"\/documentation\/niocore\/nioclienttcpbootstrap","title":"NIOClientTCPBootstrap","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap","kind":"symbol","abstract":[{"type":"codeVoice","code":"NIOClientTCPBootstrap"},{"type":"text","text":" is a bootstrap that allows you to bootstrap client TCP connections using NIO on BSD Sockets,"},{"text":" ","type":"text"},{"text":"NIO Transport Services, or other ways.","type":"text"}],"navigatorTitle":[{"text":"NIOClientTCPBootstrap","kind":"identifier"}]},"https://en.wikipedia.org/wiki/Happy_Eyeballs":{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","url":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","titleInlineContent":[{"inlineContent":[{"type":"text","text":"Happy Eyeballs"}],"type":"emphasis"}],"type":"link","title":"Happy Eyeballs"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","title":"EventLoopFuture"}}}