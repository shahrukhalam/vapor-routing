{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/eventLoop"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/bind(to:file:line:)-1vmdv","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/bind(to:file:line:)-8dzuj","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/bind(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/close(mode:file:line:)-7hlgf","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/close(mode:file:line:)-db80","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/close(mode:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/connect(to:file:line:)-7fcj0","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/connect(to:file:line:)-7wcds","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/connect(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/flush()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/read()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/register(file:line:)-2ekw5","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/register(file:line:)-4tkmi","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/register(promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/triggerUserOutboundEvent(_:file:line:)-13y21","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/triggerUserOutboundEvent(_:file:line:)-5c6ri","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/triggerUserOutboundEvent(_:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/write(_:file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/write(_:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/writeAndFlush(_:file:line:)-4o0d3","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/writeAndFlush(_:file:line:)-90bdy","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/writeAndFlush(_:promise:)"],"title":"Instance Methods"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundInvoker","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"abstract":[{"text":"Allows users to invoke an “outbound” operation related to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" that will flow through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" until","type":"text"},{"text":" ","type":"text"},{"text":"it will finally be executed by the the ","type":"text"},{"code":"ChannelCore","type":"codeVoice"},{"text":" implementation.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInvoker","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel"],"type":"inheritedBy","kind":"relationships","title":"Inherited By"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"],"type":"conformingTypes","kind":"relationships","title":"Conforming Types"}],"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundInvoker"}],"symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundInvoker"}],"roleHeading":"Protocol","modules":[{"name":"NIOCore"}],"title":"ChannelOutboundInvoker","externalID":"s:7NIOCore22ChannelOutboundInvokerP","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channeloutboundinvoker"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/write(_:file:line:)":{"title":"write(_:file:line:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/channeloutboundinvoker\/write(_:file:line:)","type":"topic","abstract":[{"type":"text","text":"Write data to the remote peer."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/write(_:file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/bind(to:promise:)":{"url":"\/documentation\/niocore\/channeloutboundinvoker\/bind(to:promise:)","required":true,"abstract":[{"text":"Bind to a ","type":"text"},{"code":"SocketAddress","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/bind(to:promise:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"defaultImplementations":1,"title":"bind(to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"title":"ChannelHandlerContext","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","kind":"symbol","url":"\/documentation\/niocore\/channelhandlercontext","abstract":[{"type":"text","text":"Every "},{"code":"ChannelHandler","type":"codeVoice"},{"text":" has – when added to a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" – a corresponding ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" which is","type":"text"},{"text":" ","type":"text"},{"text":"the way ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s can interact with other ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in the pipeline.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"title":"EmbeddedChannel","role":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/connect(to:promise:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"url":"\/documentation\/niocore\/channeloutboundinvoker\/connect(to:promise:)","abstract":[{"type":"text","text":"Connect to a "},{"type":"codeVoice","code":"SocketAddress"},{"text":".","type":"text"}],"defaultImplementations":1,"kind":"symbol","title":"connect(to:promise:)","required":true,"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/connect(to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/bind(to:file:line:)-8dzuj":{"url":"\/documentation\/niocore\/channeloutboundinvoker\/bind(to:file:line:)-8dzuj","abstract":[{"text":"Bind to a ","type":"text"},{"code":"SocketAddress","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/bind(to:file:line:)-8dzuj","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"role":"symbol","title":"bind(to:file:line:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/register(promise:)":{"url":"\/documentation\/niocore\/channeloutboundinvoker\/register(promise:)","abstract":[{"type":"text","text":"Register on an "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" and so have all its IO handled."}],"role":"symbol","defaultImplementations":1,"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/register(promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"required":true,"title":"register(promise:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"url":"\/documentation\/niocore\/channelpipeline","kind":"symbol","abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","title":"ChannelPipeline","navigatorTitle":[{"text":"ChannelPipeline","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelPipeline","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/triggerUserOutboundEvent(_:promise:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"triggerUserOutboundEvent"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":">?)","kind":"text"}],"type":"topic","role":"symbol","defaultImplementations":1,"url":"\/documentation\/niocore\/channeloutboundinvoker\/triggeruseroutboundevent(_:promise:)","required":true,"title":"triggerUserOutboundEvent(_:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/triggerUserOutboundEvent(_:promise:)","abstract":[{"type":"text","text":"Trigger a custom user outbound event which will flow through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/connect(to:file:line:)-7wcds":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/connect(to:file:line:)-7wcds","title":"connect(to:file:line:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier","text":"SocketAddress"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/niocore\/channeloutboundinvoker\/connect(to:file:line:)-7wcds","abstract":[{"text":"Connect to a ","type":"text"},{"type":"codeVoice","code":"SocketAddress"},{"text":".","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/writeAndFlush(_:file:line:)-4o0d3":{"type":"topic","url":"\/documentation\/niocore\/channeloutboundinvoker\/writeandflush(_:file:line:)-4o0d3","abstract":[{"text":"Shortcut for calling ","type":"text"},{"code":"write","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"flush","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/writeAndFlush(_:file:line:)-4o0d3","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeAndFlush"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"title":"writeAndFlush(_:file:line:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/bind(to:file:line:)-1vmdv":{"abstract":[{"text":"Bind to a ","type":"text"},{"code":"SocketAddress","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/bind(to:file:line:)-1vmdv","title":"bind(to:file:line:)","url":"\/documentation\/niocore\/channeloutboundinvoker\/bind(to:file:line:)-1vmdv"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/close(mode:file:line:)-db80":{"kind":"symbol","role":"symbol","abstract":[{"text":"Close the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" and so the connection if one exists.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/close(mode:file:line:)-db80","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9CloseModeO","text":"CloseMode","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","title":"close(mode:file:line:)","url":"\/documentation\/niocore\/channeloutboundinvoker\/close(mode:file:line:)-db80"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker":{"navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundInvoker"}],"title":"ChannelOutboundInvoker","url":"\/documentation\/niocore\/channeloutboundinvoker","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","abstract":[{"text":"Allows users to invoke an “outbound” operation related to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" that will flow through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" until","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"it will finally be executed by the the "},{"code":"ChannelCore","type":"codeVoice"},{"type":"text","text":" implementation."}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundInvoker"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/connect(to:file:line:)-7fcj0":{"type":"topic","role":"symbol","title":"connect(to:file:line:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/connect(to:file:line:)-7fcj0","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/niocore\/channeloutboundinvoker\/connect(to:file:line:)-7fcj0","abstract":[{"type":"text","text":"Connect to a "},{"type":"codeVoice","code":"SocketAddress"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/writeAndFlush(_:file:line:)-90bdy":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeAndFlush"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"kind":"symbol","role":"symbol","title":"writeAndFlush(_:file:line:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/writeAndFlush(_:file:line:)-90bdy","abstract":[{"text":"Shortcut for calling ","type":"text"},{"code":"write","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"flush","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/channeloutboundinvoker\/writeandflush(_:file:line:)-90bdy","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/register(file:line:)-4tkmi":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"text":"Register on an ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" and so have all its IO handled.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/register(file:line:)-4tkmi","url":"\/documentation\/niocore\/channeloutboundinvoker\/register(file:line:)-4tkmi","type":"topic","role":"symbol","title":"register(file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/register(file:line:)-2ekw5":{"abstract":[{"text":"Register on an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" and so have all its IO handled.","type":"text"}],"role":"symbol","title":"register(file:line:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/register(file:line:)-2ekw5","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"kind":"symbol","type":"topic","url":"\/documentation\/niocore\/channeloutboundinvoker\/register(file:line:)-2ekw5"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/read()":{"abstract":[{"type":"text","text":"Signal that we want to read from the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" once there is data ready."}],"url":"\/documentation\/niocore\/channeloutboundinvoker\/read()","type":"topic","kind":"symbol","defaultImplementations":1,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"()"}],"required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/read()","title":"read()","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/triggerUserOutboundEvent(_:file:line:)-13y21":{"url":"\/documentation\/niocore\/channeloutboundinvoker\/triggeruseroutboundevent(_:file:line:)-13y21","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/triggerUserOutboundEvent(_:file:line:)-13y21","role":"symbol","title":"triggerUserOutboundEvent(_:file:line:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"triggerUserOutboundEvent"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"type":"text","text":"Trigger a custom user outbound event which will flow through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInvoker":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInvoker","kind":"identifier"}],"role":"symbol","title":"ChannelInvoker","url":"\/documentation\/niocore\/channelinvoker","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInvoker","abstract":[{"type":"text","text":"A protocol that signals that outbound and inbound events are triggered by this invoker."}],"navigatorTitle":[{"text":"ChannelInvoker","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/writeAndFlush(_:promise:)":{"required":true,"kind":"symbol","url":"\/documentation\/niocore\/channeloutboundinvoker\/writeandflush(_:promise:)","abstract":[{"type":"text","text":"Shortcut for calling "},{"code":"write","type":"codeVoice"},{"type":"text","text":" and "},{"code":"flush","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/writeAndFlush(_:promise:)","defaultImplementations":2,"title":"writeAndFlush(_:promise:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeAndFlush"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":", "},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/flush()":{"defaultImplementations":1,"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/flush()","role":"symbol","url":"\/documentation\/niocore\/channeloutboundinvoker\/flush()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flush","kind":"identifier"},{"text":"()","kind":"text"}],"title":"flush()","required":true,"abstract":[{"text":"Flush data that was previously written via ","type":"text"},{"code":"write","type":"codeVoice"},{"text":" to the remote peer.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/MulticastChannel":{"navigatorTitle":[{"text":"MulticastChannel","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/multicastchannel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MulticastChannel","kind":"identifier"}],"title":"MulticastChannel","type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"MulticastChannel","type":"codeVoice"},{"type":"text","text":" is a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" that supports IP multicast operations: that is, a channel that can join multicast"},{"type":"text","text":" "},{"text":"groups.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/close(mode:file:line:)-7hlgf":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9CloseModeO","text":"CloseMode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"text":"Close the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" and so the connection if one exists.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/close(mode:file:line:)-7hlgf","url":"\/documentation\/niocore\/channeloutboundinvoker\/close(mode:file:line:)-7hlgf","type":"topic","role":"symbol","title":"close(mode:file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/write(_:promise:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"kind":"symbol","title":"write(_:promise:)","url":"\/documentation\/niocore\/channeloutboundinvoker\/write(_:promise:)","defaultImplementations":2,"abstract":[{"text":"Write data to the remote peer.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/write(_:promise:)","required":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/triggerUserOutboundEvent(_:file:line:)-5c6ri":{"url":"\/documentation\/niocore\/channeloutboundinvoker\/triggeruseroutboundevent(_:file:line:)-5c6ri","abstract":[{"type":"text","text":"Trigger a custom user outbound event which will flow through the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/triggerUserOutboundEvent(_:file:line:)-5c6ri","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"triggerUserOutboundEvent"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","title":"triggerUserOutboundEvent(_:file:line:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/eventLoop":{"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" which is used by this "},{"type":"codeVoice","code":"ChannelOutboundInvoker"},{"type":"text","text":" for execution."}],"title":"eventLoop","url":"\/documentation\/niocore\/channeloutboundinvoker\/eventloop","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/eventLoop","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"role":"symbol","kind":"symbol","required":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/close(mode:promise:)":{"title":"close(mode:promise:)","role":"symbol","required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/close(mode:promise:)","url":"\/documentation\/niocore\/channeloutboundinvoker\/close(mode:promise:)","abstract":[{"type":"text","text":"Close the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" and so the connection if one exists."}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CloseMode","preciseIdentifier":"s:7NIOCore9CloseModeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"defaultImplementations":1},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"title":"Channel","role":"symbol"}}}