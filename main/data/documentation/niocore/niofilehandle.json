{"metadata":{"role":"symbol","title":"NIOFileHandle","modules":[{"name":"NIOCore"}],"navigatorTitle":[{"text":"NIOFileHandle","kind":"identifier"}],"roleHeading":"Class","symbolKind":"class","externalID":"s:7NIOCore13NIOFileHandleC","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOFileHandle","kind":"identifier"}]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Flags","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Mode"]},{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(descriptor:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:mode:flags:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/isOpen"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/close()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/duplicate()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/withUnsafeFileDescriptor(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/CustomStringConvertible-Implementations"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/FileDescriptor","doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP"]}],"sections":[],"variants":[{"paths":["\/documentation\/niocore\/niofilehandle"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOFileHandle"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"When creating a ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" it takes ownership of the underlying file descriptor. When a ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" is no longer","type":"text"},{"text":" ","type":"text"},{"text":"needed you must ","type":"text"},{"code":"close","type":"codeVoice"},{"text":" it or take back ownership of the file descriptor using ","type":"text"},{"code":"takeDescriptorOwnership","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"One underlying file descriptor should usually be managed by one ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" only.","type":"text"}]}],"style":"note"},{"type":"aside","name":"Warning","content":[{"inlineContent":[{"text":"Failing to manage the lifetime of a ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" correctly will result in undefined behaviour.","type":"text"}],"type":"paragraph"}],"style":"warning"},{"type":"aside","name":"Warning","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" objects are not thread-safe and are mutable. They also cannot be fully thread-safe as they refer to a global underlying file descriptor.","type":"text"}],"type":"paragraph"}],"style":"warning"}]}],"abstract":[{"type":"text","text":"A "},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":" is a handle to an open file."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle":{"title":"NIOFileHandle","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","url":"\/documentation\/niocore\/niofilehandle","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"NIOFileHandle"},{"text":" is a handle to an open file.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOFileHandle"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOFileHandle"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/Mode":{"title":"NIOFileHandle.Mode","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Mode","url":"\/documentation\/niocore\/niofilehandle\/mode","abstract":[{"type":"codeVoice","code":"Mode"},{"text":" represents file access modes.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mode"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Mode"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/withUnsafeFileDescriptor(_:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withUnsafeFileDescriptor","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"preciseIdentifier":"s:s4CInta","text":"CInt","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/withUnsafeFileDescriptor(_:)","title":"withUnsafeFileDescriptor(_:)","url":"\/documentation\/niocore\/niofilehandle\/withunsafefiledescriptor(_:)","abstract":[{"type":"text","text":"Will be called with the file descriptor if still open, if not it will"},{"type":"text","text":" "},{"text":"throw an ","type":"text"},{"code":"IOError","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/init(descriptor:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"descriptor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/niofilehandle\/init(descriptor:)","title":"init(descriptor:)","abstract":[{"type":"text","text":"Create a "},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" taking ownership of ","type":"text"},{"code":"descriptor","type":"codeVoice"},{"text":". You must call ","type":"text"},{"code":"NIOFileHandle.close","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"NIOFileHandle.takeDescriptorOwnership","type":"codeVoice"},{"text":" before","type":"text"},{"text":" ","type":"text"},{"text":"this object can be safely released.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(descriptor:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/duplicate()":{"title":"duplicate()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"duplicate","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13NIOFileHandleC","text":"NIOFileHandle","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/duplicate()","role":"symbol","abstract":[{"type":"text","text":"Duplicates this "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":". This means that a new "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" object with a new underlying file descriptor"},{"type":"text","text":" "},{"type":"text","text":"is returned. The caller takes ownership of the returned "},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" and is responsible for closing it.","type":"text"}],"url":"\/documentation\/niocore\/niofilehandle\/duplicate()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/Flags":{"type":"topic","abstract":[{"type":"codeVoice","code":"Flags"},{"text":" allows to specify additional flags to ","type":"text"},{"code":"Mode","type":"codeVoice"},{"text":", such as permission for file creation.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Flags","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Flags","navigatorTitle":[{"text":"Flags","kind":"identifier"}],"title":"NIOFileHandle.Flags","url":"\/documentation\/niocore\/niofilehandle\/flags","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/init(path:mode:flags:)":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13NIOFileHandleC","text":"NIOFileHandle"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7NIOCore13NIOFileHandleC4ModeV","text":"Mode","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"flags","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13NIOFileHandleC","text":"NIOFileHandle","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7NIOCore13NIOFileHandleC5FlagsV","text":"Flags","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/niocore\/niofilehandle\/init(path:mode:flags:)","abstract":[{"text":"Open a new ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":". This operation is blocking.","type":"text"}],"title":"init(path:mode:flags:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:mode:flags:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/FileDescriptor":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileDescriptor"}],"url":"\/documentation\/niocore\/filedescriptor","kind":"symbol","title":"FileDescriptor","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/FileDescriptor","role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"FileDescriptor"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/init(path:)":{"type":"topic","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:)","title":"init(path:)","abstract":[{"type":"text","text":"Open a new "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":". This operation is blocking."}],"kind":"symbol","url":"\/documentation\/niocore\/niofilehandle\/init(path:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/close()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/niofilehandle\/close()","title":"close()","abstract":[{"type":"text","text":"Close this "},{"code":"FileDescriptor","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/close()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/isOpen":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isOpen","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/niofilehandle\/isopen","title":"isOpen","abstract":[{"code":"true","type":"codeVoice"},{"text":" if this ","type":"text"},{"code":"FileDescriptor","type":"codeVoice"},{"text":" is open (which means it was not closed yet).","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/isOpen"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/takeDescriptorOwnership()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()","abstract":[{"type":"text","text":"Take the ownership of the underlying file descriptor. This is similar to "},{"type":"codeVoice","code":"close()"},{"text":" but the underlying file","type":"text"},{"text":" ","type":"text"},{"text":"descriptor remains open. The caller is responsible for closing the file descriptor by some other means.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"takeDescriptorOwnership","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"}],"url":"\/documentation\/niocore\/niofilehandle\/takedescriptorownership()","type":"topic","title":"takeDescriptorOwnership()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/CustomStringConvertible-Implementations":{"role":"collectionGroup","kind":"article","url":"\/documentation\/niocore\/niofilehandle\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/CustomStringConvertible-Implementations"}}}