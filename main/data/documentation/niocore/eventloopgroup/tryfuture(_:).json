{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tryFuture"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"work"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The potentially throwing closure to execute as a"},{"type":"text","text":" "},{"type":"text","text":"future. If the closure throws, a failed future is returned."}],"type":"paragraph"}],"name":"work"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method replaces this code:"}]},{"code":["return something.eventLoop.future().flatMapThrowing {"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"With this code:","type":"text"}]},{"code":["return something.eventLoop.tryFuture {"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"That’s pretty much it. It’s sugar."}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"title":"tryFuture(_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","modules":[{"name":"NIOCore"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tryFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"NIOCore","externalID":"s:7NIOCore14EventLoopGroupP8AsyncKitE9tryFutureyAA0bcH0Cyqd__Gqd__yKclF"},"variants":[{"paths":["\/documentation\/niocore\/eventloopgroup\/tryfuture(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/tryFuture(_:)"},"abstract":[{"type":"text","text":"An alternate name for this would be "},{"code":"future(catching:)","type":"codeVoice"},{"type":"text","text":", but with that"},{"type":"text","text":" "},{"type":"text","text":"name, trailing closure syntax just looks like "},{"code":"el.future { ... }","type":"codeVoice"},{"type":"text","text":", which"},{"type":"text","text":" "},{"type":"text","text":"does not indicate to readers of the code that it is the error-capturing"},{"type":"text","text":" "},{"type":"text","text":"version. Since such an indication is highly desirable, a slightly less"},{"type":"text","text":" "},{"type":"text","text":"idiomatic name is used instead."}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup/tryFuture(_:)":{"kind":"symbol","title":"tryFuture(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tryFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloopgroup\/tryfuture(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/tryFuture(_:)","abstract":[{"type":"text","text":"An alternate name for this would be "},{"code":"future(catching:)","type":"codeVoice"},{"type":"text","text":", but with that"},{"type":"text","text":" "},{"type":"text","text":"name, trailing closure syntax just looks like "},{"code":"el.future { ... }","type":"codeVoice"},{"type":"text","text":", which"},{"type":"text","text":" "},{"text":"does not indicate to readers of the code that it is the error-capturing","type":"text"},{"text":" ","type":"text"},{"text":"version. Since such an indication is highly desirable, a slightly less","type":"text"},{"text":" ","type":"text"},{"text":"idiomatic name is used instead.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","title":"EventLoopFuture"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","navigatorTitle":[{"text":"EventLoopGroup","kind":"identifier"}],"title":"EventLoopGroup","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroup","kind":"identifier"}],"url":"\/documentation\/niocore\/eventloopgroup","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Provides an endless stream of "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s to use."}]}}}