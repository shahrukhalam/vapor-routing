{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelCore"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrapData","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"data","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type = T.self) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"data","content":[{"inlineContent":[{"type":"text","text":"The "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":" to unwrap."}],"type":"paragraph"}]},{"name":"as","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type to extract from the "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}]}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"The content of the ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This method is intended for use when writing custom ","type":"text"},{"type":"codeVoice","code":"ChannelCore"},{"text":" implementations.","type":"text"},{"text":" ","type":"text"},{"text":"This can safely be called in methods like ","type":"text"},{"type":"codeVoice","code":"write0"},{"text":" to extract data from the ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":" ","type":"text"},{"text":"provided in those cases.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Note that if the unwrap fails, this will cause a runtime trap. "},{"code":"ChannelCore","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"implementations should be concrete about what types they support writing. If multiple"},{"type":"text","text":" "},{"type":"text","text":"types are supported, consider using a tagged union to store the type information like"},{"type":"text","text":" "},{"type":"text","text":"NIO’s own "},{"code":"IOData","type":"codeVoice"},{"type":"text","text":", which will minimise the amount of runtime type checking."}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelCore\/unwrapData(_:as:)"},"abstract":[{"type":"text","text":"Unwraps the given "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":" as a specific concrete type."}],"kind":"symbol","metadata":{"extendedModule":"NIOCore","roleHeading":"Instance Method","title":"unwrapData(_:as:)","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore11ChannelCorePAAE10unwrapData_2asqd__AA6NIOAnyV_qd__mtlF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrapData","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelcore\/unwrapdata(_:as:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","url":"\/documentation\/niocore\/nioany","type":"topic","title":"NIOAny","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOAny","kind":"identifier"}],"navigatorTitle":[{"text":"NIOAny","kind":"identifier"}],"abstract":[{"code":"NIOAny","type":"codeVoice"},{"text":" is an opaque container for values of ","type":"text"},{"inlineContent":[{"text":"any","type":"text"}],"type":"emphasis"},{"text":" type, similar to Swift’s builtin ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" type. Contrary to","type":"text"},{"text":" ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" the overhead of ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" depends on the the type of the wrapped value. Certain types that are important","type":"text"},{"text":" ","type":"text"},{"text":"for the performance of a SwiftNIO application like ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FileRegion","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"AddressEnvelope<ByteBuffer>","type":"codeVoice"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" just like ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" will contain them within an existential container.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelCore/unwrapData(_:as:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelCore\/unwrapData(_:as:)","abstract":[{"type":"text","text":"Unwraps the given "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":" as a specific concrete type."}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/niocore\/channelcore\/unwrapdata(_:as:)","title":"unwrapData(_:as:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrapData","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelCore":{"type":"topic","kind":"symbol","role":"symbol","title":"ChannelCore","url":"\/documentation\/niocore\/channelcore","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelCore"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelCore","abstract":[{"type":"text","text":"The core "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" methods that are for internal use of the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementation only."}],"navigatorTitle":[{"kind":"identifier","text":"ChannelCore"}]}}}