{"abstract":[{"text":"Called when a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"’s writable state changes.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelWritabilityChanged"},{"kind":"text","text":"()"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The writability state of a Channel depends on watermarks that can be set via ","type":"text"},{"type":"codeVoice","code":"Channel.setOption"},{"text":" and how much data","type":"text"},{"text":" ","type":"text"},{"text":"is still waiting to be transferred to the remote peer.","type":"text"},{"text":" ","type":"text"},{"text":"You should take care to enforce some kind of backpressure if the channel becomes unwritable which means ","type":"text"},{"type":"codeVoice","code":"Channel.isWritable"},{"text":" ","type":"text"},{"text":"will return ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" to ensure you do not consume too much memory due to queued writes. What exactly you should do here depends on the","type":"text"},{"text":" ","type":"text"},{"text":"protocol and other semantics. But for example you may want to stop writing to the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" until ","type":"text"},{"type":"codeVoice","code":"Channel.writable"},{"text":" becomes","type":"text"},{"text":" ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" again or stop reading at all.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelWritabilityChanged()"},"sections":[],"kind":"symbol","metadata":{"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelWritabilityChanged","kind":"identifier"},{"text":"()","kind":"text"}],"externalID":"s:7NIOCore15ChannelPipelineC04fireB18WritabilityChangedyyF","modules":[{"name":"NIOCore"}],"title":"fireChannelWritabilityChanged()","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelpipeline\/firechannelwritabilitychanged()"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"url":"\/documentation\/niocore\/channelpipeline","kind":"symbol","abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","title":"ChannelPipeline","navigatorTitle":[{"text":"ChannelPipeline","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelPipeline","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelWritabilityChanged()":{"role":"symbol","abstract":[{"type":"text","text":"Called when a "},{"type":"codeVoice","code":"Channel"},{"text":"’s writable state changes.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelWritabilityChanged()","type":"topic","title":"fireChannelWritabilityChanged()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelWritabilityChanged"},{"kind":"text","text":"()"}],"url":"\/documentation\/niocore\/channelpipeline\/firechannelwritabilitychanged()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"}}}