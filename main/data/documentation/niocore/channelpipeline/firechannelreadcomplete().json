{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelReadComplete","kind":"identifier"},{"text":"()","kind":"text"}]}]}],"variants":[{"paths":["\/documentation\/niocore\/channelpipeline\/firechannelreadcomplete()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","externalID":"s:7NIOCore15ChannelPipelineC04fireB12ReadCompleteyyF","role":"symbol","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelReadComplete"},{"kind":"text","text":"()"}],"modules":[{"name":"NIOCore"}],"title":"fireChannelReadComplete()"},"kind":"symbol","abstract":[{"type":"text","text":"Called once there is no more data to read immediately on a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":". Any new data received will be handled later."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelReadComplete()"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"url":"\/documentation\/niocore\/channelpipeline","kind":"symbol","abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","title":"ChannelPipeline","navigatorTitle":[{"text":"ChannelPipeline","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelPipeline","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelReadComplete()":{"role":"symbol","abstract":[{"type":"text","text":"Called once there is no more data to read immediately on a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". Any new data received will be handled later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelReadComplete()","type":"topic","title":"fireChannelReadComplete()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelReadComplete","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/firechannelreadcomplete()"}}}