{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/nioclienttcpbootstrapprotocol\/channelinitializer(_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInitializer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"handler","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that initializes the provided "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"handler"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"The connected ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" will operate on ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" as inbound and ","type":"text"},{"type":"codeVoice","code":"IOData"},{"text":" as outbound messages.","type":"text"}],"type":"paragraph"},{"name":"Warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"handler"},{"text":" closure may be invoked ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"multiple times"}]},{"text":" so it’s usually the right choice to instantiate","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s within ","type":"text"},{"type":"codeVoice","code":"handler"},{"text":". The reason ","type":"text"},{"type":"codeVoice","code":"handler"},{"text":" may be invoked multiple times is that to","type":"text"},{"text":" ","type":"text"},{"text":"successfully set up a connection multiple connections might be setup in the process. Assuming a","type":"text"},{"text":" ","type":"text"},{"text":"hostname that resolves to both IPv4 and IPv6 addresses, NIO will follow","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","type":"reference","isActive":true},{"text":" and race both an IPv4 and an IPv6","type":"text"},{"text":" ","type":"text"},{"text":"connection. It is possible that both connections get fully established before the IPv4 connection","type":"text"},{"text":" ","type":"text"},{"text":"will be closed again because the IPv6 connection ‘won the race’. Therefore the ","type":"text"},{"type":"codeVoice","code":"channelInitializer"},{"text":" ","type":"text"},{"text":"might be called multiple times and it’s important not to share stateful ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s in more","type":"text"},{"text":" ","type":"text"},{"text":"than one ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}]}],"style":"warning"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol\/channelInitializer(_:)"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInitializer"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"required":true,"modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method","role":"symbol","title":"channelInitializer(_:)","externalID":"s:7NIOCore29NIOClientTCPBootstrapProtocolP18channelInitializeryxAA15EventLoopFutureCyytGAA7Channel_pcF"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol"]]},"abstract":[{"text":"Initialize the connected ","type":"text"},{"code":"SocketChannel","type":"codeVoice"},{"text":" with ","type":"text"},{"code":"initializer","type":"codeVoice"},{"text":". The most common task in initializer is to add","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s to the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"references":{"https://en.wikipedia.org/wiki/Happy_Eyeballs":{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","title":"Happy Eyeballs","url":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","type":"link","titleInlineContent":[{"inlineContent":[{"text":"Happy Eyeballs","type":"text"}],"type":"emphasis"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrapProtocol/channelInitializer(_:)":{"abstract":[{"text":"Initialize the connected ","type":"text"},{"type":"codeVoice","code":"SocketChannel"},{"text":" with ","type":"text"},{"code":"initializer","type":"codeVoice"},{"text":". The most common task in initializer is to add","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s to the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"title":"channelInitializer(_:)","required":true,"url":"\/documentation\/niocore\/nioclienttcpbootstrapprotocol\/channelinitializer(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInitializer","kind":"identifier"},{"text":"((","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol\/channelInitializer(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"title":"Channel","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrapProtocol":{"url":"\/documentation\/niocore\/nioclienttcpbootstrapprotocol","kind":"symbol","title":"NIOClientTCPBootstrapProtocol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOClientTCPBootstrapProtocol"}],"role":"symbol","abstract":[{"code":"NIOClientTCPBootstrapProtocol","type":"codeVoice"},{"type":"text","text":" is implemented by various underlying transport mechanisms. Typically,"},{"type":"text","text":" "},{"type":"text","text":"this will be the BSD Sockets API implemented by "},{"code":"ClientBootstrap","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"NIOClientTCPBootstrapProtocol"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","title":"EventLoopFuture"}}}