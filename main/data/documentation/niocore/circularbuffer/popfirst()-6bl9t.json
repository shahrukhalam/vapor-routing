{"sections":[],"metadata":{"modules":[{"name":"NIOCore"}],"title":"popFirst()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"popFirst","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"externalID":"s:7NIOCore14CircularBufferV8popFirstxSgyF","role":"symbol","symbolKind":"method","extendedModule":"NIOCore","roleHeading":"Instance Method"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"popFirst","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The first element of the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":" if the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":" is not"},{"type":"text","text":" "},{"type":"text","text":"empty; otherwise, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Calling this method may invalidate all saved indices of this"},{"type":"text","text":" "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":". Do not rely on a previously stored index value after"},{"type":"text","text":" "},{"type":"text","text":"altering a "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":" with any operation that can change its length."}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"O(1)","type":"text"}]}],"style":"note","name":"Complexity","type":"aside"}],"kind":"content"}],"abstract":[{"type":"text","text":"Removes and returns the first element of the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":"."}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/popFirst()-6bl9t"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer"]]},"variants":[{"paths":["\/documentation\/niocore\/circularbuffer\/popfirst()-6bl9t"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/popFirst()-6bl9t":{"url":"\/documentation\/niocore\/circularbuffer\/popfirst()-6bl9t","abstract":[{"type":"text","text":"Removes and returns the first element of the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"popFirst","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","title":"popFirst()","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/popFirst()-6bl9t"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","title":"CircularBuffer","type":"topic","url":"\/documentation\/niocore\/circularbuffer","abstract":[{"type":"text","text":"An automatically expanding ring buffer implementation backed by a "},{"type":"codeVoice","code":"ContiguousArray"},{"type":"text","text":". Even though this implementation"},{"type":"text","text":" "},{"type":"text","text":"will automatically expand if more elements than "},{"type":"codeVoice","code":"initialCapacity"},{"text":" are stored, itâ€™s advantageous to prevent","type":"text"},{"text":" ","type":"text"},{"text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"CircularBuffer"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CircularBuffer"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"}}}