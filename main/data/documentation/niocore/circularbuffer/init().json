{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/RangeReplaceableCollection-Implementations"]]},"sections":[],"metadata":{"role":"symbol","modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"roleHeading":"Initializer","title":"init()","externalID":"s:7NIOCore14CircularBufferVACyxGycfc"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/init()"},"kind":"symbol","variants":[{"paths":["\/documentation\/niocore\/circularbuffer\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Allocates an empty buffer."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/init()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Allocates an empty buffer.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/niocore\/circularbuffer\/init()","kind":"symbol","title":"init()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","title":"CircularBuffer","type":"topic","url":"\/documentation\/niocore\/circularbuffer","abstract":[{"type":"text","text":"An automatically expanding ring buffer implementation backed by a "},{"type":"codeVoice","code":"ContiguousArray"},{"type":"text","text":". Even though this implementation"},{"type":"text","text":" "},{"type":"text","text":"will automatically expand if more elements than "},{"type":"codeVoice","code":"initialCapacity"},{"text":" are stored, itâ€™s advantageous to prevent","type":"text"},{"text":" ","type":"text"},{"text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"CircularBuffer"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CircularBuffer"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/RangeReplaceableCollection-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/RangeReplaceableCollection-Implementations","url":"\/documentation\/niocore\/circularbuffer\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[]}}}