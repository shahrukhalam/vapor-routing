{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloop"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP","text":"EventLoopGroup"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Usually multiple "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s share the same "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" for processing IO \/ tasks and so share the same processing "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"For a better understanding of how such an "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" works internally the following pseudo code may be helpful:"}]},{"type":"codeListing","syntax":null,"code":["while eventLoop.isOpen {","    \/\/\/ Block until there is something to process for 1...n Channels","    let readyChannels = blockUntilIoOrTasksAreReady()","    \/\/\/ Loop through all the Channels","    for channel in readyChannels {","        \/\/\/ Process IO and \/ or tasks for the Channel.","        \/\/\/ This may include things like:","        \/\/\/    - accept new connection","        \/\/\/    - connect to a remote host","        \/\/\/    - read from socket","        \/\/\/    - write to socket","        \/\/\/    - tasks that were submitted via EventLoop methods","        \/\/\/ and others.","        processIoAndTasks(channel)","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"Because an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" may be shared between multiple ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s it’s important to ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"NOT","type":"text"}]},{"text":" block while processing IO \/ tasks. This also includes long running computations which will have the same","type":"text"},{"text":" ","type":"text"},{"text":"effect as blocking in this case.","type":"text"}]}]}],"sections":[],"metadata":{"modules":[{"name":"NIOCore"}],"title":"EventLoop","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"externalID":"s:7NIOCore9EventLoopP","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}]},"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable"],"title":"Inherits From"},{"kind":"relationships","type":"conformingTypes","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop"],"title":"Conforming Types"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/inEventLoop"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertInEventLoop(file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertNotInEventLoop(file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/close()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/execute(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(deadline:file:line:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(in:file:line:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatSubmit(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-6gsl5","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-7tski","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeCompletedFuture(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeCompletedFuture(withResultOf:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makePromise(of:file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededVoidFuture()-4okco","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/performWithTask(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionInEventLoop(file:line:)-7ukrq","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionNotInEventLoop(file:line:)-4nrf2","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedTask(initialDelay:delay:notifying:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(deadline:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(in:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/submit(_:)-44luu"],"title":"Instance Methods"}],"abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"text":"s until it’s closed.","type":"text"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOPreconcurrencySendable":{"title":"NIOPreconcurrencySendable","type":"topic","role":"symbol","url":"\/documentation\/niocore\/niopreconcurrencysendable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"navigatorTitle":[{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","kind":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatSubmit(_:)":{"title":"flatSubmit(_:)","url":"\/documentation\/niocore\/eventloop\/flatsubmit(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatSubmit","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Submit "},{"type":"codeVoice","code":"task"},{"type":"text","text":" to be run on this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatSubmit(_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeCompletedFuture(withResultOf:)":{"abstract":[{"text":"Creates and returns a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that is marked as succeeded or failed with the value returned by ","type":"text"},{"code":"body","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeCompletedFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"withResultOf","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloop\/makecompletedfuture(withresultof:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeCompletedFuture(withResultOf:)","type":"topic","role":"symbol","title":"makeCompletedFuture(withResultOf:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeFailedFuture(_:file:line:)":{"url":"\/documentation\/niocore\/eventloop\/makefailedfuture(_:file:line:)","type":"topic","deprecated":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:file:line:)","abstract":[],"title":"makeFailedFuture(_:file:line:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeFailedFuture"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)":{"title":"scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)","url":"\/documentation\/niocore\/eventloop\/schedulerepeatedasynctask(initialdelay:delay:notifying:_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scheduleRepeatedAsyncTask","kind":"identifier"},{"text":"(","kind":"text"},{"text":"initialDelay","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier","text":"TimeAmount"},{"kind":"text","text":", "},{"kind":"externalParam","text":"delay"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier","text":"TimeAmount"},{"kind":"text","text":", "},{"kind":"externalParam","text":"notifying"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?, ("},{"preciseIdentifier":"s:7NIOCore12RepeatedTaskC","kind":"typeIdentifier","text":"RepeatedTask"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore12RepeatedTaskC","kind":"typeIdentifier","text":"RepeatedTask"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Schedule a repeated asynchronous task to be executed by the "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" with a fixed delay between the end and"},{"type":"text","text":" "},{"type":"text","text":"start of each task."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makePromise(of:file:line:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makePromise(of:file:line:)","title":"makePromise(of:file:line:)","kind":"symbol","url":"\/documentation\/niocore\/eventloop\/makepromise(of:file:line:)","abstract":[{"text":"Creates and returns a new ","type":"text"},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" that will be notified using this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" as execution "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":"."}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makePromise"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeSucceededFuture(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:)","title":"makeSucceededFuture(_:)","kind":"symbol","url":"\/documentation\/niocore\/eventloop\/makesucceededfuture(_:)","abstract":[{"text":"Creates and returns a new ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is already marked as success. Notifications will be done using this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" as execution "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":"."}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeSucceededFuture"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Success"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/close()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"type":"topic","kind":"symbol","url":"\/documentation\/niocore\/eventloop\/close()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/close()","title":"close()","role":"symbol","abstract":[{"text":"Close this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/preconditionNotInEventLoop(file:line:)-4nrf2":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionNotInEventLoop(file:line:)-4nrf2","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"preconditionNotInEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}],"title":"preconditionNotInEventLoop(file:line:)","defaultImplementations":1,"url":"\/documentation\/niocore\/eventloop\/preconditionnotineventloop(file:line:)-4nrf2","abstract":[{"type":"text","text":"Asserts that the current thread is "},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"type":"text","text":" the one tied to this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Otherwise, the process will be abnormally terminated as per the semantics of "},{"type":"codeVoice","code":"preconditionFailure(_:file:line:)"},{"type":"text","text":"."}],"required":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleRepeatedTask(initialDelay:delay:notifying:_:)":{"kind":"symbol","url":"\/documentation\/niocore\/eventloop\/schedulerepeatedtask(initialdelay:delay:notifying:_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedTask(initialDelay:delay:notifying:_:)","title":"scheduleRepeatedTask(initialDelay:delay:notifying:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scheduleRepeatedTask","kind":"identifier"},{"text":"(","kind":"text"},{"text":"initialDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"delay","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"notifying","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?, (","kind":"text"},{"preciseIdentifier":"s:7NIOCore12RepeatedTaskC","text":"RepeatedTask","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore12RepeatedTaskC","text":"RepeatedTask","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Schedule a repeated task to be executed by the "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" with a fixed delay between the end and start of each"},{"type":"text","text":" "},{"type":"text","text":"task."}],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleTask(deadline:_:)":{"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/niocore\/eventloop\/scheduletask(deadline:_:)","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scheduleTask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"deadline"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore11NIODeadlineV","kind":"typeIdentifier","text":"NIODeadline"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore9ScheduledV","kind":"typeIdentifier","text":"Scheduled"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"title":"scheduleTask(deadline:_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(deadline:_:)","abstract":[{"type":"text","text":"Schedule a "},{"type":"codeVoice","code":"task"},{"type":"text","text":" that is executed by this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" at the given time."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeSucceededVoidFuture()-4okco":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeSucceededVoidFuture"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol","defaultImplementations":1,"required":true,"url":"\/documentation\/niocore\/eventloop\/makesucceededvoidfuture()-4okco","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededVoidFuture()-4okco","title":"makeSucceededVoidFuture()","role":"symbol","abstract":[{"text":"Return a succeeded ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" future.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until it’s closed."}],"url":"\/documentation\/niocore\/eventloop","type":"topic","title":"EventLoop","role":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatten(_:)-7tski":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatten"},{"kind":"text","text":"(["},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">]) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol","url":"\/documentation\/niocore\/eventloop\/flatten(_:)-7tski","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-7tski","title":"flatten(_:)","role":"symbol","abstract":[{"text":"Returns a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that succeeds only when all the provided futures succeed,","type":"text"},{"text":" ","type":"text"},{"text":"ignoring the resolved values.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/performWithTask(_:)":{"url":"\/documentation\/niocore\/eventloop\/performwithtask(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/performWithTask(_:)","abstract":[{"text":"Run the ","type":"text"},{"type":"codeVoice","code":"async"},{"text":" function ","type":"text"},{"type":"codeVoice","code":"body"},{"text":" on this event loop and return its result as","type":"text"},{"text":" ","type":"text"},{"text":"an ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":".","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"performWithTask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"performWithTask(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/inEventLoop":{"type":"topic","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the current "},{"code":"NIOThread","type":"codeVoice"},{"type":"text","text":" is the same as the "},{"code":"NIOThread","type":"codeVoice"},{"type":"text","text":" that is tied to this "},{"code":"EventLoop","type":"codeVoice"},{"text":". ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/inEventLoop","role":"symbol","kind":"symbol","title":"inEventLoop","required":true,"url":"\/documentation\/niocore\/eventloop\/ineventloop","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inEventLoop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/submit(_:)-44luu":{"kind":"symbol","abstract":[{"text":"Submit a given task to be executed by the ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":". Once the execution is complete the returned "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" is notified."}],"defaultImplementations":1,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/submit(_:)-44luu","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"submit","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"submit(_:)","url":"\/documentation\/niocore\/eventloop\/submit(_:)-44luu","role":"symbol","required":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/preconditionInEventLoop(file:line:)-7ukrq":{"abstract":[{"type":"text","text":"Asserts that the current thread is the one tied to this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Otherwise, the process will be abnormally terminated as per the semantics of "},{"type":"codeVoice","code":"preconditionFailure(_:file:line:)"},{"type":"text","text":"."}],"required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionInEventLoop(file:line:)-7ukrq","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"preconditionInEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"title":"preconditionInEventLoop(file:line:)","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloop\/preconditionineventloop(file:line:)-7ukrq","defaultImplementations":1},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatten(_:)-6gsl5":{"abstract":[{"type":"text","text":"Returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that succeeds only when all the provided futures succeed."},{"type":"text","text":" "},{"type":"text","text":"The new "},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" contains an array of results, maintaining same ordering as the futures.","type":"text"}],"url":"\/documentation\/niocore\/eventloop\/flatten(_:)-6gsl5","type":"topic","title":"flatten(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatten","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">([","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">]) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<[","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"]>","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-6gsl5","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeCompletedFuture(_:)":{"type":"topic","abstract":[{"type":"text","text":"Creates and returns a new "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that is marked as succeeded or failed with the value held by "},{"code":"result","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeCompletedFuture(_:)","role":"symbol","kind":"symbol","title":"makeCompletedFuture(_:)","url":"\/documentation\/niocore\/eventloop\/makecompletedfuture(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeCompletedFuture"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Success"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","navigatorTitle":[{"text":"EventLoopGroup","kind":"identifier"}],"title":"EventLoopGroup","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroup","kind":"identifier"}],"url":"\/documentation\/niocore\/eventloopgroup","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Provides an endless stream of "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s to use."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/execute(_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/execute(_:)","url":"\/documentation\/niocore\/eventloop\/execute(_:)","kind":"symbol","required":true,"role":"symbol","title":"execute(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"abstract":[{"text":"Submit a given task to be executed by the ","type":"text"},{"code":"EventLoop","type":"codeVoice"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatScheduleTask(deadline:file:line:_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(deadline:file:line:_:)","url":"\/documentation\/niocore\/eventloop\/flatscheduletask(deadline:file:line:_:)","kind":"symbol","role":"symbol","title":"flatScheduleTask(deadline:file:line:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatScheduleTask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"deadline"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore11NIODeadlineV","kind":"typeIdentifier","text":"NIODeadline"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9ScheduledV","text":"Scheduled"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"text":"Schedule a ","type":"text"},{"code":"task","type":"codeVoice"},{"text":" that is executed by this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" at the given time.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleTask(in:_:)":{"abstract":[{"text":"Schedule a ","type":"text"},{"code":"task","type":"codeVoice"},{"text":" that is executed by this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" after the given amount of time.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scheduleTask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier","text":"TimeAmount"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9ScheduledV","text":"Scheduled"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/eventloop\/scheduletask(in:_:)","title":"scheduleTask(in:_:)","role":"symbol","required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(in:_:)","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeSucceededFuture(_:file:line:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeSucceededFuture"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Success"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/eventloop\/makesucceededfuture(_:file:line:)","role":"symbol","deprecated":true,"type":"topic","title":"makeSucceededFuture(_:file:line:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:file:line:)","kind":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeFailedFuture(_:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeFailedFuture"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/eventloop\/makefailedfuture(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:)","title":"makeFailedFuture(_:)","abstract":[{"text":"Creates and returns a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that is already marked as failed. Notifications will be done using this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" as execution ","type":"text"},{"code":"NIOThread","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/assertInEventLoop(file:line:)":{"abstract":[{"type":"text","text":"Asserts that the current thread is the one tied to this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Otherwise, if running in debug mode, the process will be abnormally terminated as per the semantics of"},{"type":"text","text":" "},{"type":"codeVoice","code":"preconditionFailure(_:file:line:)"},{"type":"text","text":". Never has any effect in release mode."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assertInEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"title":"assertInEventLoop(file:line:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertInEventLoop(file:line:)","kind":"symbol","url":"\/documentation\/niocore\/eventloop\/assertineventloop(file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/assertNotInEventLoop(file:line:)":{"abstract":[{"text":"Asserts that the current thread is ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"text":" the one tied to this ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, if running in debug mode, the process will be abnormally terminated as per the semantics of","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"preconditionFailure(_:file:line:)"},{"text":". Never has any effect in release mode.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"assertNotInEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"url":"\/documentation\/niocore\/eventloop\/assertnotineventloop(file:line:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertNotInEventLoop(file:line:)","title":"assertNotInEventLoop(file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatScheduleTask(in:file:line:_:)":{"title":"flatScheduleTask(in:file:line:_:)","type":"topic","url":"\/documentation\/niocore\/eventloop\/flatscheduletask(in:file:line:_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatScheduleTask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9ScheduledV","text":"Scheduled"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"text":"Schedule a ","type":"text"},{"code":"task","type":"codeVoice"},{"text":" that is executed by this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" after the given amount of time.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(in:file:line:_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedEventLoop":{"url":"\/documentation\/nioembedded\/embeddedeventloop","abstract":[{"text":"An ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" that is embedded in the current running context with no external","type":"text"},{"type":"text","text":" "},{"type":"text","text":"control."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"EmbeddedEventLoop","kind":"identifier"}],"navigatorTitle":[{"text":"EmbeddedEventLoop","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop","title":"EmbeddedEventLoop","kind":"symbol"}}}