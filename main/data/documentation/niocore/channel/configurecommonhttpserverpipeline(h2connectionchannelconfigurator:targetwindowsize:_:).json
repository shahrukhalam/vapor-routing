{"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)"},"abstract":[{"type":"text","text":"Configures a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" to speak either HTTP or HTTP\/2 according to what can be negotiated with the client."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channel\/configurecommonhttpserverpipeline(h2connectionchannelconfigurator:targetwindowsize:_:)"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureCommonHTTPServerPipeline","kind":"identifier"},{"text":"(","kind":"text"},{"text":"h2ConnectionChannelConfigurator","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Channel","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">)? = nil, ","kind":"text"},{"text":"targetWindowSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"configurator","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Channel","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An optional callback that will be invoked only","type":"text"},{"text":" ","type":"text"},{"text":"when the negotiated protocol is H2 to configure the connection channel.","type":"text"}]}],"name":"h2ConnectionChannelConfigurator"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The target size of the HTTP\/2 flow control window."}]}],"name":"targetWindowSize"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A callback that will be invoked after a protocol has been negotiated."},{"type":"text","text":" "},{"type":"text","text":"The callback only needs to add application-specific handlers and must return a future"},{"type":"text","text":" "},{"type":"text","text":"that completes when the channel has been fully mutated."}]}],"name":"configurator"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EventLoopFuture<Void>"},{"type":"text","text":" that completes when the channel is ready."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This helper takes care of configuring the server pipeline such that it negotiates whether to","type":"text"},{"text":" ","type":"text"},{"text":"use HTTP\/1.1 or HTTP\/2. Once the protocol to use for the channel has been negotiated, the","type":"text"},{"text":" ","type":"text"},{"text":"provided callback will configure the application-specific handlers in a protocol-agnostic way.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This function doesnâ€™t configure the TLS handler. Callers of this function need to add a TLS","type":"text"},{"text":" ","type":"text"},{"text":"handler appropriately configured to perform protocol negotiation.","type":"text"}],"type":"paragraph"}]}],"metadata":{"roleHeading":"Instance Method","role":"symbol","externalID":"s:7NIOCore7ChannelP8NIOHTTP2E33configureCommonHTTPServerPipeline012h2ConnectionB12Configurator16targetWindowSize_AA15EventLoopFutureCyytGAjaB_pcSg_SiAjaB_pctF","modules":[{"name":"NIOCore"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureCommonHTTPServerPipeline","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ConnectionChannelConfigurator"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">)?, "},{"kind":"externalParam","text":"targetWindowSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"title":"configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)","symbolKind":"method","extendedModule":"NIOCore"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"]]},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","title":"EventLoopFuture"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"title":"Channel","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)","role":"symbol","abstract":[{"type":"text","text":"Configures a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" to speak either HTTP or HTTP\/2 according to what can be negotiated with the client."}],"title":"configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureCommonHTTPServerPipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ConnectionChannelConfigurator"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">)?, "},{"kind":"externalParam","text":"targetWindowSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/channel\/configurecommonhttpserverpipeline(h2connectionchannelconfigurator:targetwindowsize:_:)"}}}