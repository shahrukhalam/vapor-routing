{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny\/init(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/nioany\/init(_:)"]}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"platforms":["Linux"]}],"kind":"declarations"}],"metadata":{"symbolKind":"init","modules":[{"name":"NIOCore"}],"roleHeading":"Initializer","externalID":"s:7NIOCore6NIOAnyVyACxclufc","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Wrap a value in a ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":". In most cases you should not create a ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" directly using this constructor.","type":"text"},{"text":" ","type":"text"},{"text":"The abstraction that accepts values of type ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" must also provide a mechanism to do the wrapping. An","type":"text"},{"text":" ","type":"text"},{"text":"example is a ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" which provides ","type":"text"},{"code":"self.wrapInboundOut(aValueOfTypeInboundOut)","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny/init(_:)":{"type":"topic","url":"\/documentation\/niocore\/nioany\/init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"title":"init(_:)","abstract":[{"text":"Wrap a value in a ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":". In most cases you should not create a ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" directly using this constructor.","type":"text"},{"text":" ","type":"text"},{"text":"The abstraction that accepts values of type ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":" must also provide a mechanism to do the wrapping. An","type":"text"},{"text":" ","type":"text"},{"text":"example is a ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" which provides ","type":"text"},{"code":"self.wrapInboundOut(aValueOfTypeInboundOut)","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny\/init(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","url":"\/documentation\/niocore\/nioany","type":"topic","title":"NIOAny","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOAny","kind":"identifier"}],"navigatorTitle":[{"text":"NIOAny","kind":"identifier"}],"abstract":[{"code":"NIOAny","type":"codeVoice"},{"text":" is an opaque container for values of ","type":"text"},{"inlineContent":[{"text":"any","type":"text"}],"type":"emphasis"},{"text":" type, similar to Swiftâ€™s builtin ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" type. Contrary to","type":"text"},{"text":" ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" the overhead of ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" depends on the the type of the wrapped value. Certain types that are important","type":"text"},{"text":" ","type":"text"},{"text":"for the performance of a SwiftNIO application like ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FileRegion","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"AddressEnvelope<ByteBuffer>","type":"codeVoice"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" just like ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" will contain them within an existential container.","type":"text"}]}}}