{"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/channelWritabilityChanged(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/handlerRemoved(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/read(context:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/OutboundOut"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/RemovableChannelHandler-Implementations"],"title":"Default Implementations","generated":true}],"kind":"symbol","variants":[{"paths":["\/documentation\/niocore\/backpressurehandler"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"modules":[{"name":"NIOCore"}],"symbolKind":"class","navigatorTitle":[{"text":"BackPressureHandler","kind":"identifier"}],"role":"symbol","roleHeading":"Class","title":"BackPressureHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BackPressureHandler","kind":"identifier"}],"externalID":"s:7NIOCore19BackPressureHandlerC"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"abstract":[{"type":"text","text":"ChannelHandler implementation which enforces back-pressure by stopping to read from the remote peer when it cannot write back fast enough."},{"type":"text","text":" "},{"type":"text","text":"It will start reading again once pending data was written."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackPressureHandler"}],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/RemovableChannelHandler-Implementations":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/RemovableChannelHandler-Implementations","title":"RemovableChannelHandler Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/niocore\/backpressurehandler\/removablechannelhandler-implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/OutboundIn":{"url":"\/documentation\/niocore\/backpressurehandler\/outboundin","kind":"symbol","title":"BackPressureHandler.OutboundIn","abstract":[{"type":"text","text":"The type of the outbound data which is wrapped in "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/OutboundIn"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/init()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/init()","url":"\/documentation\/niocore\/backpressurehandler\/init()","title":"init()","type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","title":"NIOCore","abstract":[],"url":"\/documentation\/niocore","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/OutboundOut":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/OutboundOut","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"title":"BackPressureHandler.OutboundOut","kind":"symbol","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"url":"\/documentation\/niocore\/backpressurehandler\/outboundout","abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/read(context:)":{"title":"read(context:)","role":"symbol","abstract":[{"type":"text","text":"Called to request that the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" perform a read when data is ready. The read operation will signal that we are ready to read more data."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/read(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"url":"\/documentation\/niocore\/backpressurehandler\/read(context:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}],"abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"ChannelOutboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"url":"\/documentation\/niocore\/channeloutboundhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"url":"\/documentation\/niocore\/channelinboundhandler","type":"topic","title":"ChannelInboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"role":"symbol","url":"\/documentation\/niocore\/removablechannelhandler","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"RemovableChannelHandler"},{"text":" is a ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" that can be dynamically removed from a ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" whilst","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is operating normally.","type":"text"},{"text":" ","type":"text"},{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is required to remove itself from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" (using","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"text":") as soon as possible.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"title":"RemovableChannelHandler","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/ChannelHandler-Implementations":{"kind":"article","abstract":[],"role":"collectionGroup","title":"ChannelHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/ChannelHandler-Implementations","url":"\/documentation\/niocore\/backpressurehandler\/channelhandler-implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/ChannelInboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/ChannelInboundHandler-Implementations","title":"ChannelInboundHandler Implementations","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/niocore\/backpressurehandler\/channelinboundhandler-implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/handlerRemoved(context:)":{"abstract":[{"type":"text","text":"Called when this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" is removed from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"type":"topic","title":"handlerRemoved(context:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}],"url":"\/documentation\/niocore\/backpressurehandler\/handlerremoved(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/handlerRemoved(context:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler":{"kind":"symbol","abstract":[{"type":"text","text":"ChannelHandler implementation which enforces back-pressure by stopping to read from the remote peer when it cannot write back fast enough."},{"type":"text","text":" "},{"type":"text","text":"It will start reading again once pending data was written."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler","type":"topic","title":"BackPressureHandler","url":"\/documentation\/niocore\/backpressurehandler","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BackPressureHandler"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackPressureHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/ChannelOutboundHandler-Implementations":{"url":"\/documentation\/niocore\/backpressurehandler\/channeloutboundhandler-implementations","abstract":[],"kind":"article","type":"topic","title":"ChannelOutboundHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/ChannelOutboundHandler-Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/InboundIn":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/backpressurehandler\/inboundin","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/InboundIn","title":"BackPressureHandler.InboundIn","abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"InboundIn"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/channelWritabilityChanged(context:)":{"url":"\/documentation\/niocore\/backpressurehandler\/channelwritabilitychanged(context:)","abstract":[{"type":"text","text":"The writability state of the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" has changed, either because it has buffered more data than the writability high water mark, or because the amount of buffered data has dropped below the writability low water mark."},{"type":"text","text":" "},{"type":"text","text":"You can check the state with "},{"code":"Channel.isWritable","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/channelWritabilityChanged(context:)","title":"channelWritabilityChanged(context:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelWritabilityChanged"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/InboundOut":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"url":"\/documentation\/niocore\/backpressurehandler\/inboundout","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"title":"BackPressureHandler.InboundOut","abstract":[{"text":"The type of the inbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" in the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/InboundOut","role":"symbol"}}}