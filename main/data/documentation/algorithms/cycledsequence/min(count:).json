{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"text":"Returns the smallest elements of this sequence.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence\/Sequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/cycledsequence\/min(count:)"]}],"metadata":{"title":"min(count:)","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"min"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:ST10AlgorithmsSL7ElementRpzrlE3min5countSayACGSi_tF::SYNTHESIZED::s:10Algorithms14CycledSequenceV","modules":[{"name":"Algorithms"}],"symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence\/min(count:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"min"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The number of elements to return. If "},{"type":"codeVoice","code":"count"},{"type":"text","text":" is greater"},{"type":"text","text":" "},{"type":"text","text":"than the number of elements in this sequence, all of the sequenceâ€™s"},{"type":"text","text":" "},{"type":"text","text":"elements are returned."}],"type":"paragraph"}],"name":"count"}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"An array of the smallest ","type":"text"},{"type":"codeVoice","code":"count"},{"text":" elements of this sequence.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example partially sorts an array of integers to retrieve its three"},{"type":"text","text":" "},{"type":"text","text":"smallest values:"}]},{"type":"codeListing","syntax":null,"code":["let numbers = [7, 1, 6, 2, 8, 3, 9]","let smallestThree = numbers.min(count: 3)","\/\/ [1, 2, 3]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to sort a sequence but only need to access its smallest"},{"type":"text","text":" "},{"type":"text","text":"elements, using this method can give you a performance boost over sorting"},{"type":"text","text":" "},{"type":"text","text":"the entire sequence. The order of equal elements is guaranteed to be"},{"type":"text","text":" "},{"type":"text","text":"preserved."}]},{"type":"aside","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"text":" log ","type":"text"},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"text":" + ","type":"text"},{"inlineContent":[{"text":"nk","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of the","type":"text"},{"text":" ","type":"text"},{"text":"sequence and ","type":"text"},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"text":" is ","type":"text"},{"code":"count","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"style":"note","name":"Complexity"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledSequence/Sequence-Implementations":{"type":"topic","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence\/Sequence-Implementations","abstract":[],"title":"Sequence Implementations","role":"collectionGroup","url":"\/documentation\/algorithms\/cycledsequence\/sequence-implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledSequence/min(count:)":{"role":"symbol","abstract":[{"text":"Returns the smallest elements of this sequence.","type":"text"}],"url":"\/documentation\/algorithms\/cycledsequence\/min(count:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"min"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence\/min(count:)","title":"min(count:)","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledSequence":{"abstract":[{"type":"text","text":"A collection wrapper that repeats the elements of a base collection."}],"url":"\/documentation\/algorithms\/cycledsequence","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CycledSequence"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CycledSequence"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence","title":"CycledSequence","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"}}}