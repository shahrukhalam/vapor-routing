{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/algorithms\/inclusivereductionssequence\/max(count:)-8ud4v"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"count","content":[{"inlineContent":[{"text":"The number of elements to return. If ","type":"text"},{"type":"codeVoice","code":"count"},{"text":" is greater","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"than the number of elements in this collection, all of the collectionâ€™s"},{"type":"text","text":" "},{"type":"text","text":"elements are returned."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"An array of the largest "},{"type":"codeVoice","code":"count"},{"type":"text","text":" elements of this collection."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This example partially sorts an array of integers to retrieve its three","type":"text"},{"text":" ","type":"text"},{"text":"largest values:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let numbers = [7, 1, 6, 2, 8, 3, 9]","let smallestThree = numbers.max(count: 3)","\/\/ [7, 8, 9]"],"type":"codeListing"},{"inlineContent":[{"text":"If you need to sort a collection but only need to access its largest","type":"text"},{"text":" ","type":"text"},{"text":"elements, using this method can give you a performance boost over sorting","type":"text"},{"text":" ","type":"text"},{"text":"the entire collection. The order of equal elements is guaranteed to be","type":"text"},{"text":" ","type":"text"},{"text":"preserved.","type":"text"}],"type":"paragraph"},{"name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"type":"text","text":" log "},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"type":"text","text":" + "},{"inlineContent":[{"type":"text","text":"nk"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the length of the"},{"type":"text","text":" "},{"type":"text","text":"collection and "},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"type":"text","text":" is "},{"code":"count","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"style":"note","type":"aside"}]}],"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"roleHeading":"Instance Method","modules":[{"name":"Algorithms"}],"extendedModule":"Swift","title":"max(count:)","externalID":"s:Sl10AlgorithmsSL7ElementRpzrlE3max5countSayACGSi_tF::SYNTHESIZED::s:10Algorithms27InclusiveReductionsSequenceV","symbolKind":"method"},"abstract":[{"type":"text","text":"Returns the largest elements of this collection."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InclusiveReductionsSequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InclusiveReductionsSequence\/Collection-Implementations"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InclusiveReductionsSequence\/max(count:)-8ud4v","interfaceLanguage":"swift"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/InclusiveReductionsSequence/max(count:)-8ud4v":{"abstract":[{"type":"text","text":"Returns the largest elements of this collection."}],"role":"symbol","kind":"symbol","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InclusiveReductionsSequence\/max(count:)-8ud4v","title":"max(count:)","url":"\/documentation\/algorithms\/inclusivereductionssequence\/max(count:)-8ud4v","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/InclusiveReductionsSequence":{"type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InclusiveReductionsSequence","title":"InclusiveReductionsSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InclusiveReductionsSequence"}],"url":"\/documentation\/algorithms\/inclusivereductionssequence","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"InclusiveReductionsSequence"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/InclusiveReductionsSequence/Collection-Implementations":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InclusiveReductionsSequence\/Collection-Implementations","abstract":[],"title":"Collection Implementations","url":"\/documentation\/algorithms\/inclusivereductionssequence\/collection-implementations","kind":"article","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"}}}