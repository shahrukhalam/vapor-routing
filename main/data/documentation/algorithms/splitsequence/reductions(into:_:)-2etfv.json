{"sections":[],"kind":"symbol","abstract":[{"text":"Returns an array containing the accumulated results of combining the","type":"text"},{"text":" ","type":"text"},{"text":"elements of the sequence using the given closure.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/splitsequence\/reductions(into:_:)-2etfv"]}],"metadata":{"role":"symbol","extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reductions","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"modules":[{"name":"Algorithms"}],"externalID":"s:ST10AlgorithmsE10reductions4into_Sayqd__Gqd___yqd__z_7ElementQztKXEtKlF::SYNTHESIZED::s:10Algorithms13SplitSequenceV","roleHeading":"Instance Method","title":"reductions(into:_:)","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitSequence\/reductions(into:_:)-2etfv"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitSequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitSequence\/Sequence-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reductions"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initial"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"initial","content":[{"type":"paragraph","inlineContent":[{"text":"The value to use as the initial value.","type":"text"}]}]},{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that combines the previously reduced result and","type":"text"},{"text":" ","type":"text"},{"text":"the next element in the receiving sequence.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An array of the initial value followed by the reduced elements."}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This can be seen as applying the reduce function to each element and","type":"text"},{"text":" ","type":"text"},{"text":"providing the initial value followed by these results as a sequence.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let runningTotal = [1, 2, 3, 4].reductions(into: 0, +)","print(runningTotal)","","\/\/ prints [0, 1, 3, 6, 10]"]},{"inlineContent":[{"text":"When ","type":"text"},{"code":"reductions(into:_:_)","type":"codeVoice"},{"text":" is called, the following steps occur:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"initial"},{"type":"text","text":" result is added to an array of results."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"transform"},{"type":"text","text":" closure is called with the "},{"type":"codeVoice","code":"initial"},{"type":"text","text":" result and the"},{"type":"text","text":" "},{"type":"text","text":"first element of the sequence, appending the result to the array."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The closure is called again repeatedly with the updated accumulating","type":"text"},{"text":" ","type":"text"},{"text":"result and each element of the sequence, adding each result to the","type":"text"},{"text":" ","type":"text"},{"text":"array.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When the sequence is exhausted, the results array is returned to the"},{"type":"text","text":" "},{"type":"text","text":"caller."}]}]}],"type":"orderedList"},{"inlineContent":[{"text":"If the sequence has no elements, ","type":"text"},{"code":"transform","type":"codeVoice"},{"text":" is never executed and","type":"text"},{"text":" ","type":"text"},{"text":"an array containing only the ","type":"text"},{"code":"initial","type":"codeVoice"},{"text":" result is returned.","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" is the length of the sequence."}],"type":"paragraph"}],"type":"aside","style":"note","name":"Complexity"}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitSequence":{"abstract":[{"text":"A sequence that lazily splits a base sequence into subsequences separated by","type":"text"},{"text":" ","type":"text"},{"text":"elements that satisfy the given ","type":"text"},{"type":"codeVoice","code":"whereSeparator"},{"text":" predicate.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"SplitSequence","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitSequence","kind":"symbol","title":"SplitSequence","url":"\/documentation\/algorithms\/splitsequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SplitSequence","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitSequence/reductions(into:_:)-2etfv":{"kind":"symbol","abstract":[{"text":"Returns an array containing the accumulated results of combining the","type":"text"},{"text":" ","type":"text"},{"text":"elements of the sequence using the given closure.","type":"text"}],"role":"symbol","title":"reductions(into:_:)","url":"\/documentation\/algorithms\/splitsequence\/reductions(into:_:)-2etfv","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reductions","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitSequence\/reductions(into:_:)-2etfv"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitSequence/Sequence-Implementations":{"kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitSequence\/Sequence-Implementations","title":"Sequence Implementations","type":"topic","url":"\/documentation\/algorithms\/splitsequence\/sequence-implementations"}}}