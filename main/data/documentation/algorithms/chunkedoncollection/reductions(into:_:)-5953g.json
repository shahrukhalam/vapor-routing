{"variants":[{"paths":["\/documentation\/algorithms\/chunkedoncollection\/reductions(into:_:)-5953g"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Returns an array containing the accumulated results of combining the"},{"type":"text","text":" "},{"type":"text","text":"elements of the sequence using the given closure."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedOnCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedOnCollection\/Sequence-Implementations"]]},"metadata":{"externalID":"s:ST10AlgorithmsE10reductions4into_Sayqd__Gqd___yqd__z_7ElementQztKXEtKlF::SYNTHESIZED::s:10Algorithms19ChunkedOnCollectionV","title":"reductions(into:_:)","role":"symbol","extendedModule":"Swift","roleHeading":"Instance Method","modules":[{"name":"Algorithms"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reductions"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reductions","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initial","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"platforms":["Linux"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The value to use as the initial value.","type":"text"}],"type":"paragraph"}],"name":"initial"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that combines the previously reduced result and","type":"text"},{"text":" ","type":"text"},{"text":"the next element in the receiving sequence.","type":"text"}]}],"name":"transform"}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"text":"An array of the initial value followed by the reduced elements.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This can be seen as applying the reduce function to each element and","type":"text"},{"text":" ","type":"text"},{"text":"providing the initial value followed by these results as a sequence.","type":"text"}]},{"type":"codeListing","code":["let runningTotal = [1, 2, 3, 4].reductions(into: 0, +)","print(runningTotal)","","\/\/ prints [0, 1, 3, 6, 10]"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"reductions(into:_:_)"},{"type":"text","text":" is called, the following steps occur:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"initial"},{"text":" result is added to an array of results.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"transform"},{"type":"text","text":" closure is called with the "},{"type":"codeVoice","code":"initial"},{"type":"text","text":" result and the"},{"type":"text","text":" "},{"type":"text","text":"first element of the sequence, appending the result to the array."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The closure is called again repeatedly with the updated accumulating","type":"text"},{"text":" ","type":"text"},{"text":"result and each element of the sequence, adding each result to the","type":"text"},{"text":" ","type":"text"},{"text":"array.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"When the sequence is exhausted, the results array is returned to the","type":"text"},{"text":" ","type":"text"},{"text":"caller.","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"text":"If the sequence has no elements, ","type":"text"},{"type":"codeVoice","code":"transform"},{"text":" is never executed and","type":"text"},{"text":" ","type":"text"},{"text":"an array containing only the ","type":"text"},{"type":"codeVoice","code":"initial"},{"text":" result is returned.","type":"text"}]},{"type":"aside","style":"note","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" is the length of the sequence."}]}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedOnCollection\/reductions(into:_:)-5953g","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedOnCollection/reductions(into:_:)-5953g":{"title":"reductions(into:_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns an array containing the accumulated results of combining the"},{"type":"text","text":" "},{"type":"text","text":"elements of the sequence using the given closure."}],"url":"\/documentation\/algorithms\/chunkedoncollection\/reductions(into:_:)-5953g","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedOnCollection\/reductions(into:_:)-5953g","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reductions"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedOnCollection":{"url":"\/documentation\/algorithms\/chunkedoncollection","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChunkedOnCollection"}],"navigatorTitle":[{"kind":"identifier","text":"ChunkedOnCollection"}],"kind":"symbol","abstract":[{"text":"A collection wrapper that breaks a collection into chunks based on a","type":"text"},{"text":" ","type":"text"},{"text":"predicate.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedOnCollection","type":"topic","title":"ChunkedOnCollection"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedOnCollection/Sequence-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedOnCollection\/Sequence-Implementations","role":"collectionGroup","kind":"article","type":"topic","title":"Sequence Implementations","abstract":[],"url":"\/documentation\/algorithms\/chunkedoncollection\/sequence-implementations"}}}