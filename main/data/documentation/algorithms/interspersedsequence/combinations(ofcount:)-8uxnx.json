{"abstract":[{"type":"text","text":"Returns a collection of combinations of this collection’s elements, with"},{"type":"text","text":" "},{"type":"text","text":"each combination having the specified number of elements."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InterspersedSequence\/combinations(ofCount:)-8uxnx"},"metadata":{"symbolKind":"method","externalID":"s:Sl10AlgorithmsE12combinations7ofCountAA20CombinationsSequenceVyxGqd___tSXRd__Si5BoundRtd__lF::SYNTHESIZED::s:10Algorithms20InterspersedSequenceV","title":"combinations(ofCount:)","modules":[{"name":"Algorithms"}],"roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CombinationsSequence","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"Swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InterspersedSequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InterspersedSequence\/Collection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combinations"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"ofCount"},{"kind":"text","text":" "},{"kind":"internalParam","text":"kRange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","text":"CombinationsSequence","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SX","text":"RangeExpression","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"kRange","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The range of numbers of elements to include in each"},{"type":"text","text":" "},{"type":"text","text":"combination."}]}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example prints the different combinations of 1 and 2 from an array of"},{"type":"text","text":" "},{"type":"text","text":"four colors:"}]},{"type":"codeListing","syntax":null,"code":["let colors = [\"fuchsia\", \"cyan\", \"mauve\", \"magenta\"]","for combo in colors.combinations(ofCount: 1...2) {","    print(combo.joined(separator: \", \"))","}","\/\/ fuchsia","\/\/ cyan","\/\/ mauve","\/\/ magenta","\/\/ fuchsia, cyan","\/\/ fuchsia, mauve","\/\/ fuchsia, magenta","\/\/ cyan, mauve","\/\/ cyan, magenta","\/\/ mauve, magenta"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The returned collection presents combinations in a consistent order, where"},{"type":"text","text":" "},{"type":"text","text":"the indices in each combination are in ascending lexicographical order."},{"type":"text","text":" "},{"type":"text","text":"That is, in the example above, the combinations in order are the elements"},{"type":"text","text":" "},{"type":"text","text":"at "},{"type":"codeVoice","code":"[0]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[1]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[2]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[3]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[0, 1]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[0, 2]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[0, 3]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[1, 2]"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"[1, 3]"},{"type":"text","text":", and finally "},{"type":"codeVoice","code":"[2, 3]"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"This example prints ","type":"text"},{"inlineContent":[{"type":"text","text":"all"}],"type":"emphasis"},{"text":" the combinations (including an empty array and","type":"text"},{"text":" ","type":"text"},{"text":"the original collection) from an array of numbers:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40]","for combo in numbers.combinations(ofCount: 0...) {","    print(combo)","}","\/\/ []","\/\/ [10]","\/\/ [20]","\/\/ [30]","\/\/ [40]","\/\/ [10, 20]","\/\/ [10, 30]","\/\/ [10, 40]","\/\/ [20, 30]","\/\/ [20, 40]","\/\/ [30, 40]","\/\/ [10, 20, 30]","\/\/ [10, 20, 40]","\/\/ [10, 30, 40]","\/\/ [20, 30, 40]","\/\/ [10, 20, 30, 40]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"kRange","type":"codeVoice"},{"type":"text","text":" is "},{"code":"0...0","type":"codeVoice"},{"type":"text","text":", the resulting sequence has exactly one element, an"},{"type":"text","text":" "},{"type":"text","text":"empty array. The given range is limited to "},{"code":"0...base.count","type":"codeVoice"},{"type":"text","text":". If the"},{"type":"text","text":" "},{"type":"text","text":"limited range is empty, the resulting sequence has no elements."}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"O(1) for random-access base collections. O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":") where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" ","type":"text"},{"text":"is the number of elements in the base collection, since","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"CombinationsSequence"},{"text":" accesses the ","type":"text"},{"type":"codeVoice","code":"count"},{"text":" of the base collection.","type":"text"}]}],"style":"note","name":"Complexity"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","variants":[{"paths":["\/documentation\/algorithms\/interspersedsequence\/combinations(ofcount:)-8uxnx"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/InterspersedSequence/combinations(ofCount:)-8uxnx":{"type":"topic","url":"\/documentation\/algorithms\/interspersedsequence\/combinations(ofcount:)-8uxnx","title":"combinations(ofCount:)","abstract":[{"type":"text","text":"Returns a collection of combinations of this collection’s elements, with"},{"type":"text","text":" "},{"type":"text","text":"each combination having the specified number of elements."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InterspersedSequence\/combinations(ofCount:)-8uxnx","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combinations"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"ofCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","text":"CombinationsSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CombinationsSequence":{"type":"topic","abstract":[{"type":"text","text":"A collection wrapper that generates combinations of a base collection."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","title":"CombinationsSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CombinationsSequence"}],"url":"\/documentation\/algorithms\/combinationssequence","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CombinationsSequence"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/InterspersedSequence/Collection-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InterspersedSequence\/Collection-Implementations","title":"Collection Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/algorithms\/interspersedsequence\/collection-implementations","abstract":[],"kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/InterspersedSequence":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InterspersedSequence"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/InterspersedSequence","title":"InterspersedSequence","role":"symbol","type":"topic","url":"\/documentation\/algorithms\/interspersedsequence","abstract":[{"text":"A sequence that presents the elements of a base sequence of elements with a","type":"text"},{"text":" ","type":"text"},{"text":"separator between each of those elements.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"InterspersedSequence"}]}}}