{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The number of elements to return. If "},{"code":"count","type":"codeVoice"},{"type":"text","text":" is greater"},{"type":"text","text":" "},{"type":"text","text":"than the number of elements in this sequence, all of the sequenceâ€™s"},{"type":"text","text":" "},{"type":"text","text":"elements are returned."}],"type":"paragraph"}],"name":"count"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An array of the largest "},{"type":"codeVoice","code":"count"},{"type":"text","text":" elements of this sequence."}]}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example partially sorts an array of integers to retrieve its three"},{"type":"text","text":" "},{"type":"text","text":"largest values:"}]},{"type":"codeListing","syntax":null,"code":["let numbers = [7, 1, 6, 2, 8, 3, 9]","let smallestThree = numbers.max(count: 3)","\/\/ [7, 8, 9]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to sort a sequence but only need to access its largest"},{"type":"text","text":" "},{"type":"text","text":"elements, using this method can give you a performance boost over sorting"},{"type":"text","text":" "},{"type":"text","text":"the entire sequence. The order of equal elements is guaranteed to be"},{"type":"text","text":" "},{"type":"text","text":"preserved."}]},{"style":"note","name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"type":"text","text":" log "},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"type":"text","text":" + "},{"inlineContent":[{"text":"nk","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the length of the"},{"type":"text","text":" "},{"type":"text","text":"sequence and "},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"type":"text","text":" is "},{"code":"count","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside"}],"kind":"content"}],"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Returns the largest elements of this sequence."}],"variants":[{"paths":["\/documentation\/algorithms\/splitcollection\/max(count:)-8wc88"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Algorithms"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"roleHeading":"Instance Method","externalID":"s:ST10AlgorithmsSL7ElementRpzrlE3max5countSayACGSi_tF::SYNTHESIZED::s:10Algorithms15SplitCollectionV","extendedModule":"Swift","role":"symbol","symbolKind":"method","title":"max(count:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/max(count:)-8wc88"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/Sequence-Implementations"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection/Sequence-Implementations":{"type":"topic","role":"collectionGroup","url":"\/documentation\/algorithms\/splitcollection\/sequence-implementations","title":"Sequence Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/Sequence-Implementations","kind":"article","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection":{"navigatorTitle":[{"kind":"identifier","text":"SplitCollection"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SplitCollection"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection","abstract":[{"type":"text","text":"A collection that lazily splits a base collection into subsequences"},{"type":"text","text":" "},{"type":"text","text":"separated by elements that satisfy the given "},{"code":"whereSeparator","type":"codeVoice"},{"type":"text","text":" predicate."}],"url":"\/documentation\/algorithms\/splitcollection","role":"symbol","type":"topic","title":"SplitCollection","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection/max(count:)-8wc88":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/max(count:)-8wc88","url":"\/documentation\/algorithms\/splitcollection\/max(count:)-8wc88","kind":"symbol","title":"max(count:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"abstract":[{"type":"text","text":"Returns the largest elements of this sequence."}],"role":"symbol"}}}