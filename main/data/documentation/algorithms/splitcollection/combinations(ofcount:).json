{"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/Collection-Implementations"]]},"metadata":{"extendedModule":"Swift","externalID":"s:Sl10AlgorithmsE12combinations7ofCountAA20CombinationsSequenceVyxGSi_tF::SYNTHESIZED::s:10Algorithms15SplitCollectionV","modules":[{"name":"Algorithms"}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","text":"CombinationsSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"combinations(ofCount:)","symbolKind":"method","role":"symbol"},"abstract":[{"type":"text","text":"Returns a collection of combinations of this collection’s elements, with"},{"type":"text","text":" "},{"type":"text","text":"each combination having the specified number of elements."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/combinations(ofCount:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combinations"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofCount"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CombinationsSequence","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"k","content":[{"inlineContent":[{"type":"text","text":"The number of elements to include in each combination."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This example prints the different combinations of three from an array of","type":"text"},{"text":" ","type":"text"},{"text":"four colors:","type":"text"}]},{"code":["let colors = [\"fuchsia\", \"cyan\", \"mauve\", \"magenta\"]","for combo in colors.combinations(ofCount: 3) {","    print(combo.joined(separator: \", \"))","}","\/\/ fuchsia, cyan, mauve","\/\/ fuchsia, cyan, magenta","\/\/ fuchsia, mauve, magenta","\/\/ cyan, mauve, magenta"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The returned collection presents combinations in a consistent order, where","type":"text"},{"text":" ","type":"text"},{"text":"the indices in each combination are in ascending lexicographical order.","type":"text"},{"text":" ","type":"text"},{"text":"That is, in the example above, the combinations in order are the elements","type":"text"},{"text":" ","type":"text"},{"text":"at ","type":"text"},{"code":"[0, 1, 2]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[0, 1, 3]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[0, 2, 3]","type":"codeVoice"},{"text":", and finally ","type":"text"},{"code":"[1, 2, 3]","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"k"},{"text":" is zero, the resulting sequence has exactly one element, an empty","type":"text"},{"text":" ","type":"text"},{"text":"array. If ","type":"text"},{"type":"codeVoice","code":"k"},{"text":" is greater than the number of elements in this sequence,","type":"text"},{"text":" ","type":"text"},{"text":"the resulting sequence has no elements.","type":"text"}]},{"style":"note","type":"aside","name":"Complexity","content":[{"inlineContent":[{"text":"O(1) for random-access base collections. O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":") where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" ","type":"text"},{"text":"is the number of elements in the base collection, since","type":"text"},{"text":" ","type":"text"},{"code":"CombinationsSequence","type":"codeVoice"},{"text":" accesses the ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" of the base collection.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/splitcollection\/combinations(ofcount:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection/combinations(ofCount:)":{"url":"\/documentation\/algorithms\/splitcollection\/combinations(ofcount:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","text":"CombinationsSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"combinations(ofCount:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/combinations(ofCount:)","abstract":[{"text":"Returns a collection of combinations of this collection’s elements, with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"each combination having the specified number of elements."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection":{"navigatorTitle":[{"kind":"identifier","text":"SplitCollection"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SplitCollection"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection","abstract":[{"type":"text","text":"A collection that lazily splits a base collection into subsequences"},{"type":"text","text":" "},{"type":"text","text":"separated by elements that satisfy the given "},{"code":"whereSeparator","type":"codeVoice"},{"type":"text","text":" predicate."}],"url":"\/documentation\/algorithms\/splitcollection","role":"symbol","type":"topic","title":"SplitCollection","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection/Collection-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/Collection-Implementations","abstract":[],"url":"\/documentation\/algorithms\/splitcollection\/collection-implementations","role":"collectionGroup","type":"topic","title":"Collection Implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CombinationsSequence":{"type":"topic","abstract":[{"type":"text","text":"A collection wrapper that generates combinations of a base collection."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","title":"CombinationsSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CombinationsSequence"}],"url":"\/documentation\/algorithms\/combinationssequence","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CombinationsSequence"}]}}}