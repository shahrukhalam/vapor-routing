{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingSequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingSequence\/Sequence-Implementations"]]},"abstract":[{"text":"Returns the largest elements of this sequence.","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The number of elements to return. If ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" is greater","type":"text"},{"text":" ","type":"text"},{"text":"than the number of elements in this sequence, all of the sequenceâ€™s","type":"text"},{"text":" ","type":"text"},{"text":"elements are returned.","type":"text"}]}],"name":"count"}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"An array of the largest "},{"code":"count","type":"codeVoice"},{"type":"text","text":" elements of this sequence."}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This example partially sorts an array of integers to retrieve its three","type":"text"},{"text":" ","type":"text"},{"text":"largest values:","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let numbers = [7, 1, 6, 2, 8, 3, 9]","let smallestThree = numbers.max(count: 3)","\/\/ [7, 8, 9]"]},{"inlineContent":[{"text":"If you need to sort a sequence but only need to access its largest","type":"text"},{"text":" ","type":"text"},{"text":"elements, using this method can give you a performance boost over sorting","type":"text"},{"text":" ","type":"text"},{"text":"the entire sequence. The order of equal elements is guaranteed to be","type":"text"},{"text":" ","type":"text"},{"text":"preserved.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"text":" log ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"text":" + ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"nk","type":"text"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is the length of the","type":"text"},{"text":" ","type":"text"},{"text":"sequence and ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"text":" is ","type":"text"},{"code":"count","type":"codeVoice"},{"text":".","type":"text"}]}],"style":"note","type":"aside","name":"Complexity"}],"kind":"content"}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/algorithms\/stridingsequence\/max(count:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingSequence\/max(count:)"},"metadata":{"roleHeading":"Instance Method","extendedModule":"Swift","symbolKind":"method","externalID":"s:ST10AlgorithmsSL7ElementRpzrlE3max5countSayACGSi_tF::SYNTHESIZED::s:10Algorithms16StridingSequenceV","modules":[{"name":"Algorithms"}],"title":"max(count:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]},"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}]},"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/StridingSequence/max(count:)":{"abstract":[{"text":"Returns the largest elements of this sequence.","type":"text"}],"url":"\/documentation\/algorithms\/stridingsequence\/max(count:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"symbol","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}]},"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingSequence\/max(count:)","title":"max(count:)"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/StridingSequence":{"kind":"symbol","role":"symbol","url":"\/documentation\/algorithms\/stridingsequence","navigatorTitle":[{"kind":"identifier","text":"StridingSequence"}],"abstract":[{"type":"text","text":"A wrapper that strides over a base sequence."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StridingSequence"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingSequence","title":"StridingSequence","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/StridingSequence/Sequence-Implementations":{"kind":"article","role":"collectionGroup","url":"\/documentation\/algorithms\/stridingsequence\/sequence-implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingSequence\/Sequence-Implementations","title":"Sequence Implementations","type":"topic"}}}