{"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/combinations(ofCount:)-4wszl"},"kind":"symbol","variants":[{"paths":["\/documentation\/algorithms\/chain2sequence\/combinations(ofcount:)-4wszl"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Returns a collection of combinations of this collection’s elements, with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"each combination having the specified number of elements."}],"metadata":{"extendedModule":"Swift","roleHeading":"Instance Method","externalID":"s:Sl10AlgorithmsE12combinations7ofCountAA20CombinationsSequenceVyxGqd___tSXRd__Si5BoundRtd__lF::SYNTHESIZED::s:10Algorithms14Chain2SequenceV","modules":[{"name":"Algorithms"}],"role":"symbol","title":"combinations(ofCount:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CombinationsSequence","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/Collection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"kRange","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","text":"CombinationsSequence","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SX","text":"RangeExpression","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"kRange","content":[{"type":"paragraph","inlineContent":[{"text":"The range of numbers of elements to include in each","type":"text"},{"text":" ","type":"text"},{"text":"combination.","type":"text"}]}]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This example prints the different combinations of 1 and 2 from an array of","type":"text"},{"text":" ","type":"text"},{"text":"four colors:","type":"text"}]},{"type":"codeListing","code":["let colors = [\"fuchsia\", \"cyan\", \"mauve\", \"magenta\"]","for combo in colors.combinations(ofCount: 1...2) {","    print(combo.joined(separator: \", \"))","}","\/\/ fuchsia","\/\/ cyan","\/\/ mauve","\/\/ magenta","\/\/ fuchsia, cyan","\/\/ fuchsia, mauve","\/\/ fuchsia, magenta","\/\/ cyan, mauve","\/\/ cyan, magenta","\/\/ mauve, magenta"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"The returned collection presents combinations in a consistent order, where"},{"type":"text","text":" "},{"type":"text","text":"the indices in each combination are in ascending lexicographical order."},{"type":"text","text":" "},{"type":"text","text":"That is, in the example above, the combinations in order are the elements"},{"type":"text","text":" "},{"type":"text","text":"at "},{"type":"codeVoice","code":"[0]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[1]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[2]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[3]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[0, 1]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[0, 2]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[0, 3]"},{"type":"text","text":", "},{"type":"codeVoice","code":"[1, 2]"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"[1, 3]"},{"type":"text","text":", and finally "},{"type":"codeVoice","code":"[2, 3]"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example prints "},{"type":"emphasis","inlineContent":[{"text":"all","type":"text"}]},{"type":"text","text":" the combinations (including an empty array and"},{"type":"text","text":" "},{"type":"text","text":"the original collection) from an array of numbers:"}]},{"type":"codeListing","code":["let numbers = [10, 20, 30, 40]","for combo in numbers.combinations(ofCount: 0...) {","    print(combo)","}","\/\/ []","\/\/ [10]","\/\/ [20]","\/\/ [30]","\/\/ [40]","\/\/ [10, 20]","\/\/ [10, 30]","\/\/ [10, 40]","\/\/ [20, 30]","\/\/ [20, 40]","\/\/ [30, 40]","\/\/ [10, 20, 30]","\/\/ [10, 20, 40]","\/\/ [10, 30, 40]","\/\/ [20, 30, 40]","\/\/ [10, 20, 30, 40]"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"kRange"},{"type":"text","text":" is "},{"type":"codeVoice","code":"0...0"},{"type":"text","text":", the resulting sequence has exactly one element, an"},{"type":"text","text":" "},{"type":"text","text":"empty array. The given range is limited to "},{"type":"codeVoice","code":"0...base.count"},{"type":"text","text":". If the"},{"type":"text","text":" "},{"type":"text","text":"limited range is empty, the resulting sequence has no elements."}]},{"type":"aside","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1) for random-access base collections. O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":") where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" "},{"type":"text","text":"is the number of elements in the base collection, since"},{"type":"text","text":" "},{"type":"codeVoice","code":"CombinationsSequence"},{"type":"text","text":" accesses the "},{"type":"codeVoice","code":"count"},{"type":"text","text":" of the base collection."}]}],"style":"note"}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/Chain2Sequence/Collection-Implementations":{"kind":"article","title":"Collection Implementations","abstract":[],"url":"\/documentation\/algorithms\/chain2sequence\/collection-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/Collection-Implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CombinationsSequence":{"type":"topic","abstract":[{"type":"text","text":"A collection wrapper that generates combinations of a base collection."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","title":"CombinationsSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CombinationsSequence"}],"url":"\/documentation\/algorithms\/combinationssequence","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CombinationsSequence"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/Chain2Sequence/combinations(ofCount:)-4wszl":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/combinations(ofCount:)-4wszl","kind":"symbol","url":"\/documentation\/algorithms\/chain2sequence\/combinations(ofcount:)-4wszl","abstract":[{"text":"Returns a collection of combinations of this collection’s elements, with","type":"text"},{"text":" ","type":"text"},{"text":"each combination having the specified number of elements.","type":"text"}],"title":"combinations(ofCount:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CombinationsSequence","kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/Chain2Sequence":{"abstract":[{"text":"A concatenation of two sequences with the same element type.","type":"text"}],"url":"\/documentation\/algorithms\/chain2sequence","kind":"symbol","navigatorTitle":[{"text":"Chain2Sequence","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Chain2Sequence","kind":"identifier"}],"title":"Chain2Sequence","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence","role":"symbol","type":"topic"}}}