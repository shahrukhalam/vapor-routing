{"kind":"symbol","metadata":{"roleHeading":"Instance Method","role":"symbol","title":"max(count:sortedBy:)","symbolKind":"method","modules":[{"name":"Algorithms"}],"extendedModule":"Swift","externalID":"s:ST10AlgorithmsE3max5count8sortedBySay7ElementQzGSi_SbAF_AFtKXEtKF::SYNTHESIZED::s:10Algorithms14Chain2SequenceV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"sortedBy","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/Sequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/chain2sequence\/max(count:sortedby:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/max(count:sortedBy:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Returns the largest elements of this sequence, as sorted by the given","type":"text"},{"text":" ","type":"text"},{"text":"predicate.","type":"text"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"sortedBy","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"areInIncreasingOrder","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The number of elements to return. If ","type":"text"},{"type":"codeVoice","code":"count"},{"text":" is greater than","type":"text"},{"text":" ","type":"text"},{"text":"the number of elements in this sequence, all of the sequenceâ€™s","type":"text"},{"text":" ","type":"text"},{"text":"elements are returned.","type":"text"}],"type":"paragraph"}],"name":"count"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A predicate that returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if its"},{"type":"text","text":" "},{"type":"text","text":"first argument should be ordered before its second argument;"},{"type":"text","text":" "},{"type":"text","text":"otherwise, "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"areInIncreasingOrder"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An array of the largest ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" elements of this sequence,","type":"text"},{"text":" ","type":"text"},{"text":"sorted according to ","type":"text"},{"code":"areInIncreasingOrder","type":"codeVoice"},{"text":".","type":"text"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This example partially sorts an array of integers to retrieve its three","type":"text"},{"text":" ","type":"text"},{"text":"largest values:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let numbers = [7, 1, 6, 2, 8, 3, 9]","let smallestThree = numbers.max(count: 3, sortedBy: <)","\/\/ [7, 8, 9]"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"If you need to sort a sequence but only need to access its largest"},{"type":"text","text":" "},{"type":"text","text":"elements, using this method can give you a performance boost over sorting"},{"type":"text","text":" "},{"type":"text","text":"the entire sequence. The order of equal elements is guaranteed to be"},{"type":"text","text":" "},{"type":"text","text":"preserved."}],"type":"paragraph"},{"name":"Complexity","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"text":" log ","type":"text"},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"text":" + ","type":"text"},{"inlineContent":[{"text":"nk","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of the","type":"text"},{"text":" ","type":"text"},{"text":"sequence and ","type":"text"},{"inlineContent":[{"text":"k","type":"text"}],"type":"emphasis"},{"text":" is ","type":"text"},{"code":"count","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/Chain2Sequence/Sequence-Implementations":{"role":"collectionGroup","url":"\/documentation\/algorithms\/chain2sequence\/sequence-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/Sequence-Implementations","kind":"article","abstract":[],"type":"topic","title":"Sequence Implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/Chain2Sequence/max(count:sortedBy:)":{"kind":"symbol","url":"\/documentation\/algorithms\/chain2sequence\/max(count:sortedby:)","type":"topic","role":"symbol","title":"max(count:sortedBy:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"sortedBy","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"abstract":[{"text":"Returns the largest elements of this sequence, as sorted by the given","type":"text"},{"text":" ","type":"text"},{"text":"predicate.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence\/max(count:sortedBy:)"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/Chain2Sequence":{"abstract":[{"text":"A concatenation of two sequences with the same element type.","type":"text"}],"url":"\/documentation\/algorithms\/chain2sequence","kind":"symbol","navigatorTitle":[{"text":"Chain2Sequence","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Chain2Sequence","kind":"identifier"}],"title":"Chain2Sequence","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Chain2Sequence","role":"symbol","type":"topic"}}}