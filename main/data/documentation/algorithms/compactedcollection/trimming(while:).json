{"metadata":{"modules":[{"name":"Algorithms"}],"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimming"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"title":"trimming(while:)","externalID":"s:SK10AlgorithmsE8trimming5while11SubSequenceQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:10Algorithms19CompactedCollectionV"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/BidirectionalCollection-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimming","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SubSequence"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure which determines if the element should be"},{"type":"text","text":" "},{"type":"text","text":"omitted from the resulting slice."}]}],"name":"predicate"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This example uses ","type":"text"},{"type":"codeVoice","code":"trimming(while:)"},{"text":" to get a substring without the white","type":"text"},{"text":" ","type":"text"},{"text":"space at the beginning and end of the string:","type":"text"}]},{"code":["let myString = \"  hello, world  \"","print(myString.trimming(while: \\.isWhitespace)) \/\/ \"hello, world\""],"syntax":null,"type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":" is the length of this collection."}]}],"type":"aside","name":"Complexity","style":"note"}]}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/trimming(while:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/algorithms\/compactedcollection\/trimming(while:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","abstract":[{"type":"text","text":"Returns a "},{"type":"codeVoice","code":"SubSequence"},{"type":"text","text":" formed by discarding all elements at the start and"},{"type":"text","text":" "},{"type":"text","text":"end of the collection which satisfy the given predicate."}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/CompactedCollection":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection","url":"\/documentation\/algorithms\/compactedcollection","type":"topic","title":"CompactedCollection","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CompactedCollection","kind":"identifier"}],"navigatorTitle":[{"text":"CompactedCollection","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":" that iterates over every non-nil element from the original","type":"text"},{"text":" ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CompactedCollection/trimming(while:)":{"abstract":[{"type":"text","text":"Returns a "},{"code":"SubSequence","type":"codeVoice"},{"type":"text","text":" formed by discarding all elements at the start and"},{"type":"text","text":" "},{"type":"text","text":"end of the collection which satisfy the given predicate."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/trimming(while:)","url":"\/documentation\/algorithms\/compactedcollection\/trimming(while:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimming"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"title":"trimming(while:)","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CompactedCollection/BidirectionalCollection-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","title":"BidirectionalCollection Implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/BidirectionalCollection-Implementations","url":"\/documentation\/algorithms\/compactedcollection\/bidirectionalcollection-implementations"}}}