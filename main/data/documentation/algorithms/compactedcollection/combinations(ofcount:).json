{"metadata":{"role":"symbol","roleHeading":"Instance Method","externalID":"s:Sl10AlgorithmsE12combinations7ofCountAA20CombinationsSequenceVyxGSi_tF::SYNTHESIZED::s:10Algorithms19CompactedCollectionV","title":"combinations(ofCount:)","extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","text":"CombinationsSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"Algorithms"}],"symbolKind":"method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/Collection-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"combinations"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofCount"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","text":"CombinationsSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"k","content":[{"type":"paragraph","inlineContent":[{"text":"The number of elements to include in each combination.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"This example prints the different combinations of three from an array of","type":"text"},{"text":" ","type":"text"},{"text":"four colors:","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let colors = [\"fuchsia\", \"cyan\", \"mauve\", \"magenta\"]","for combo in colors.combinations(ofCount: 3) {","    print(combo.joined(separator: \", \"))","}","\/\/ fuchsia, cyan, mauve","\/\/ fuchsia, cyan, magenta","\/\/ fuchsia, mauve, magenta","\/\/ cyan, mauve, magenta"]},{"inlineContent":[{"type":"text","text":"The returned collection presents combinations in a consistent order, where"},{"type":"text","text":" "},{"type":"text","text":"the indices in each combination are in ascending lexicographical order."},{"type":"text","text":" "},{"type":"text","text":"That is, in the example above, the combinations in order are the elements"},{"type":"text","text":" "},{"type":"text","text":"at "},{"code":"[0, 1, 2]","type":"codeVoice"},{"type":"text","text":", "},{"code":"[0, 1, 3]","type":"codeVoice"},{"type":"text","text":", "},{"code":"[0, 2, 3]","type":"codeVoice"},{"type":"text","text":", and finally "},{"code":"[1, 2, 3]","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"If ","type":"text"},{"code":"k","type":"codeVoice"},{"text":" is zero, the resulting sequence has exactly one element, an empty","type":"text"},{"text":" ","type":"text"},{"text":"array. If ","type":"text"},{"code":"k","type":"codeVoice"},{"text":" is greater than the number of elements in this sequence,","type":"text"},{"text":" ","type":"text"},{"text":"the resulting sequence has no elements.","type":"text"}],"type":"paragraph"},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"O(1) for random-access base collections. O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":") where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" "},{"type":"text","text":"is the number of elements in the base collection, since"},{"type":"text","text":" "},{"code":"CombinationsSequence","type":"codeVoice"},{"type":"text","text":" accesses the "},{"code":"count","type":"codeVoice"},{"type":"text","text":" of the base collection."}],"type":"paragraph"}],"name":"Complexity","type":"aside"}]}],"variants":[{"paths":["\/documentation\/algorithms\/compactedcollection\/combinations(ofcount:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/combinations(ofCount:)"},"sections":[],"abstract":[{"text":"Returns a collection of combinations of this collection’s elements, with","type":"text"},{"text":" ","type":"text"},{"text":"each combination having the specified number of elements.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/CombinationsSequence":{"type":"topic","abstract":[{"type":"text","text":"A collection wrapper that generates combinations of a base collection."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","title":"CombinationsSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CombinationsSequence"}],"url":"\/documentation\/algorithms\/combinationssequence","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CombinationsSequence"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CompactedCollection/Collection-Implementations":{"type":"topic","title":"Collection Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/Collection-Implementations","kind":"article","abstract":[],"url":"\/documentation\/algorithms\/compactedcollection\/collection-implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CompactedCollection":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection","url":"\/documentation\/algorithms\/compactedcollection","type":"topic","title":"CompactedCollection","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CompactedCollection","kind":"identifier"}],"navigatorTitle":[{"text":"CompactedCollection","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":" that iterates over every non-nil element from the original","type":"text"},{"text":" ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CompactedCollection/combinations(ofCount:)":{"url":"\/documentation\/algorithms\/compactedcollection\/combinations(ofcount:)","title":"combinations(ofCount:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","text":"CombinationsSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedCollection\/combinations(ofCount:)","role":"symbol","type":"topic","abstract":[{"text":"Returns a collection of combinations of this collection’s elements, with","type":"text"},{"text":" ","type":"text"},{"text":"each combination having the specified number of elements.","type":"text"}]}}}