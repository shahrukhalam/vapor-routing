{"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","externalID":"s:ST10AlgorithmsE10reductionsySayqd__Gqd___qd__qd___7ElementQztKXEtKlF::SYNTHESIZED::s:10Algorithms18StridingCollectionV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reductions","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"]"}],"title":"reductions(_:_:)","modules":[{"name":"Algorithms"}],"roleHeading":"Instance Method","extendedModule":"Swift","symbolKind":"method"},"abstract":[{"type":"text","text":"Returns an array containing the accumulated results of combining the"},{"type":"text","text":" "},{"type":"text","text":"elements of the sequence using the given closure."}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection\/reductions(_:_:)-7mj60"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection\/Sequence-Implementations"]]},"variants":[{"paths":["\/documentation\/algorithms\/stridingcollection\/reductions(_:_:)-7mj60"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reductions"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initial"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The value to use as the initial value."}],"type":"paragraph"}],"name":"initial"},{"content":[{"inlineContent":[{"text":"A closure that combines the previously reduced result and","type":"text"},{"text":" ","type":"text"},{"text":"the next element in the receiving sequence.","type":"text"}],"type":"paragraph"}],"name":"transform"}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"An array of the initial value followed by the reduced elements.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be seen as applying the reduce function to each element and"},{"type":"text","text":" "},{"type":"text","text":"providing the initial value followed by these results as a sequence."}]},{"type":"codeListing","syntax":null,"code":["let runningTotal = [1, 2, 3, 4].reductions(0, +)","print(runningTotal)","","\/\/ prints [0, 1, 3, 6, 10]"]},{"type":"paragraph","inlineContent":[{"text":"When ","type":"text"},{"code":"reductions(_:_:)","type":"codeVoice"},{"text":" is called, the following steps occur:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"initial"},{"type":"text","text":" result is added to an array of results."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"transform","type":"codeVoice"},{"type":"text","text":" closure is called with the "},{"code":"initial","type":"codeVoice"},{"type":"text","text":" result and the"},{"type":"text","text":" "},{"type":"text","text":"first element of the sequence, appending the result to the array."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The closure is called again repeatedly with the updated accumulating","type":"text"},{"text":" ","type":"text"},{"text":"result and each element of the sequence, adding each result to the","type":"text"},{"text":" ","type":"text"},{"text":"array.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"When the sequence is exhausted, the results array is returned to the"},{"type":"text","text":" "},{"type":"text","text":"caller."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the sequence has no elements, "},{"code":"transform","type":"codeVoice"},{"type":"text","text":" is never executed and"},{"type":"text","text":" "},{"type":"text","text":"an array containing only the "},{"code":"initial","type":"codeVoice"},{"type":"text","text":" result is returned."}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the sequence."}]}],"style":"note","name":"Complexity"}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/StridingCollection/reductions(_:_:)-7mj60":{"abstract":[{"text":"Returns an array containing the accumulated results of combining the","type":"text"},{"text":" ","type":"text"},{"text":"elements of the sequence using the given closure.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reductions","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic","url":"\/documentation\/algorithms\/stridingcollection\/reductions(_:_:)-7mj60","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection\/reductions(_:_:)-7mj60","role":"symbol","title":"reductions(_:_:)"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/StridingCollection/Sequence-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection\/Sequence-Implementations","abstract":[],"title":"Sequence Implementations","url":"\/documentation\/algorithms\/stridingcollection\/sequence-implementations","type":"topic","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/StridingCollection":{"abstract":[{"type":"text","text":"A wrapper that strides over a base collection."}],"url":"\/documentation\/algorithms\/stridingcollection","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"StridingCollection","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StridingCollection","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection","title":"StridingCollection","type":"topic"}}}