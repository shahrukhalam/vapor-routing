{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"symbol","externalID":"s:Sl10AlgorithmsE12combinations7ofCountAA20CombinationsSequenceVyxGSi_tF::SYNTHESIZED::s:10Algorithms18StridingCollectionV","title":"combinations(ofCount:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","kind":"typeIdentifier","text":"CombinationsSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"modules":[{"name":"Algorithms"}],"roleHeading":"Instance Method","extendedModule":"Swift","symbolKind":"method"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection\/combinations(ofCount:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a collection of combinations of this collection’s elements, with"},{"type":"text","text":" "},{"type":"text","text":"each combination having the specified number of elements."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combinations"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofCount"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","text":"CombinationsSequence","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of elements to include in each combination."}]}],"name":"k"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This example prints the different combinations of three from an array of"},{"type":"text","text":" "},{"type":"text","text":"four colors:"}],"type":"paragraph"},{"type":"codeListing","code":["let colors = [\"fuchsia\", \"cyan\", \"mauve\", \"magenta\"]","for combo in colors.combinations(ofCount: 3) {","    print(combo.joined(separator: \", \"))","}","\/\/ fuchsia, cyan, mauve","\/\/ fuchsia, cyan, magenta","\/\/ fuchsia, mauve, magenta","\/\/ cyan, mauve, magenta"],"syntax":null},{"inlineContent":[{"text":"The returned collection presents combinations in a consistent order, where","type":"text"},{"text":" ","type":"text"},{"text":"the indices in each combination are in ascending lexicographical order.","type":"text"},{"text":" ","type":"text"},{"text":"That is, in the example above, the combinations in order are the elements","type":"text"},{"text":" ","type":"text"},{"text":"at ","type":"text"},{"type":"codeVoice","code":"[0, 1, 2]"},{"text":", ","type":"text"},{"type":"codeVoice","code":"[0, 1, 3]"},{"text":", ","type":"text"},{"type":"codeVoice","code":"[0, 2, 3]"},{"text":", and finally ","type":"text"},{"type":"codeVoice","code":"[1, 2, 3]"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"k"},{"text":" is zero, the resulting sequence has exactly one element, an empty","type":"text"},{"text":" ","type":"text"},{"text":"array. If ","type":"text"},{"type":"codeVoice","code":"k"},{"text":" is greater than the number of elements in this sequence,","type":"text"},{"text":" ","type":"text"},{"text":"the resulting sequence has no elements.","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"O(1) for random-access base collections. O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":") where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" "},{"type":"text","text":"is the number of elements in the base collection, since"},{"type":"text","text":" "},{"type":"codeVoice","code":"CombinationsSequence"},{"type":"text","text":" accesses the "},{"type":"codeVoice","code":"count"},{"type":"text","text":" of the base collection."}],"type":"paragraph"}],"name":"Complexity","type":"aside","style":"note"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection\/Collection-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/stridingcollection\/combinations(ofcount:)"]}],"sections":[],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/StridingCollection/Collection-Implementations":{"title":"Collection Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/algorithms\/stridingcollection\/collection-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection\/Collection-Implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/StridingCollection/combinations(ofCount:)":{"role":"symbol","abstract":[{"type":"text","text":"Returns a collection of combinations of this collection’s elements, with"},{"type":"text","text":" "},{"type":"text","text":"each combination having the specified number of elements."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CombinationsSequence","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"combinations(ofCount:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection\/combinations(ofCount:)","type":"topic","url":"\/documentation\/algorithms\/stridingcollection\/combinations(ofcount:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/StridingCollection":{"abstract":[{"type":"text","text":"A wrapper that strides over a base collection."}],"url":"\/documentation\/algorithms\/stridingcollection","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"StridingCollection","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StridingCollection","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/StridingCollection","title":"StridingCollection","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CombinationsSequence":{"type":"topic","abstract":[{"type":"text","text":"A collection wrapper that generates combinations of a base collection."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","title":"CombinationsSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CombinationsSequence"}],"url":"\/documentation\/algorithms\/combinationssequence","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CombinationsSequence"}]}}}