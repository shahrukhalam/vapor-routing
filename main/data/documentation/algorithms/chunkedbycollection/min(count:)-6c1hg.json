{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"min","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"externalID":"s:Sl10AlgorithmsSL7ElementRpzrlE3min5countSayACGSi_tF::SYNTHESIZED::s:10Algorithms19ChunkedByCollectionV","modules":[{"name":"Algorithms"}],"extendedModule":"Swift","title":"min(count:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]},"symbolKind":"method","role":"symbol","roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Returns the smallest elements of this collection."}],"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/chunkedbycollection\/min(count:)-6c1hg"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/min(count:)-6c1hg","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/Collection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"min","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The number of elements to return. If "},{"code":"count","type":"codeVoice"},{"type":"text","text":" is greater"},{"type":"text","text":" "},{"type":"text","text":"than the number of elements in this collection, all of the collectionâ€™s"},{"type":"text","text":" "},{"type":"text","text":"elements are returned."}],"type":"paragraph"}],"name":"count"}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"An array of the smallest "},{"type":"codeVoice","code":"count"},{"type":"text","text":" elements of this collection."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This example partially sorts an array of integers to retrieve its three","type":"text"},{"text":" ","type":"text"},{"text":"smallest values:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let numbers = [7, 1, 6, 2, 8, 3, 9]","let smallestThree = numbers.min(count: 3)","\/\/ [1, 2, 3]"]},{"type":"paragraph","inlineContent":[{"text":"If you need to sort a collection but only need to access its smallest","type":"text"},{"text":" ","type":"text"},{"text":"elements, using this method can give you a performance boost over sorting","type":"text"},{"text":" ","type":"text"},{"text":"the entire collection. The order of equal elements is guaranteed to be","type":"text"},{"text":" ","type":"text"},{"text":"preserved.","type":"text"}]},{"type":"aside","name":"Complexity","style":"note","content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"type":"text","text":" log "},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"type":"text","text":" + "},{"type":"emphasis","inlineContent":[{"text":"nk","type":"text"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the"},{"type":"text","text":" "},{"type":"text","text":"collection and "},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"type":"text","text":" is "},{"code":"count","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedByCollection/min(count:)-6c1hg":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"Returns the smallest elements of this collection."}],"role":"symbol","url":"\/documentation\/algorithms\/chunkedbycollection\/min(count:)-6c1hg","title":"min(count:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/min(count:)-6c1hg","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"min"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedByCollection/Collection-Implementations":{"kind":"article","role":"collectionGroup","url":"\/documentation\/algorithms\/chunkedbycollection\/collection-implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/Collection-Implementations","title":"Collection Implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedByCollection":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChunkedByCollection"}],"title":"ChunkedByCollection","url":"\/documentation\/algorithms\/chunkedbycollection","kind":"symbol","abstract":[{"type":"text","text":"A collection wrapper that breaks a collection into chunks based on a"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChunkedByCollection"}]}}}