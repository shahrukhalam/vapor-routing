{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmingSuffix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"inlineContent":[{"type":"text","text":"A closure which determines if the element should be"},{"type":"text","text":" "},{"type":"text","text":"omitted from the resulting slice."}],"type":"paragraph"}]}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This example uses ","type":"text"},{"code":"trimmingSuffix(while:)","type":"codeVoice"},{"text":" to get a substring without the","type":"text"},{"text":" ","type":"text"},{"text":"white space at the end of the string:","type":"text"}]},{"code":["let myString = \"  hello, world  \"","print(myString.trimmingSuffix(while: \\.isWhitespace)) \/\/ \"  hello, world\""],"syntax":null,"type":"codeListing"},{"name":"Complexity","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" is the length of this collection.","type":"text"}]}],"type":"aside"}],"kind":"content"}],"sections":[],"metadata":{"role":"symbol","roleHeading":"Instance Method","extendedModule":"Swift","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmingSuffix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"modules":[{"name":"Algorithms"}],"externalID":"s:SK10AlgorithmsE14trimmingSuffix5while11SubSequenceQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:10Algorithms24WindowsOfCountCollectionV","title":"trimmingSuffix(while:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection\/trimmingSuffix(while:)"},"abstract":[{"text":"Returns a ","type":"text"},{"code":"SubSequence","type":"codeVoice"},{"text":" formed by discarding all elements at the end of","type":"text"},{"text":" ","type":"text"},{"text":"the collection which satisfy the given predicate.","type":"text"}],"variants":[{"paths":["\/documentation\/algorithms\/windowsofcountcollection\/trimmingsuffix(while:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection\/BidirectionalCollection-Implementations"]]},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/WindowsOfCountCollection":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WindowsOfCountCollection"}],"type":"topic","url":"\/documentation\/algorithms\/windowsofcountcollection","navigatorTitle":[{"kind":"identifier","text":"WindowsOfCountCollection"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection","abstract":[{"text":"A collection wrapper that presents a sliding window over the elements of","type":"text"},{"text":" ","type":"text"},{"text":"a collection.","type":"text"}],"title":"WindowsOfCountCollection"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/WindowsOfCountCollection/BidirectionalCollection-Implementations":{"kind":"article","title":"BidirectionalCollection Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection\/BidirectionalCollection-Implementations","abstract":[],"url":"\/documentation\/algorithms\/windowsofcountcollection\/bidirectionalcollection-implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/WindowsOfCountCollection/trimmingSuffix(while:)":{"kind":"symbol","title":"trimmingSuffix(while:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection\/trimmingSuffix(while:)","abstract":[{"text":"Returns a ","type":"text"},{"code":"SubSequence","type":"codeVoice"},{"text":" formed by discarding all elements at the end of","type":"text"},{"text":" ","type":"text"},{"text":"the collection which satisfy the given predicate.","type":"text"}],"url":"\/documentation\/algorithms\/windowsofcountcollection\/trimmingsuffix(while:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmingSuffix","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"type":"topic"}}}