{"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimming","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closure which determines if the element should be"},{"type":"text","text":" "},{"type":"text","text":"omitted from the resulting slice."}],"type":"paragraph"}],"name":"predicate"}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example uses "},{"type":"codeVoice","code":"trimming(while:)"},{"type":"text","text":" to get a substring without the white"},{"type":"text","text":" "},{"type":"text","text":"space at the beginning and end of the string:"}]},{"syntax":null,"type":"codeListing","code":["let myString = \"  hello, world  \"","print(myString.trimming(while: \\.isWhitespace)) \/\/ \"hello, world\""]},{"content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" is the length of this collection.","type":"text"}]}],"style":"note","name":"Complexity","type":"aside"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/trimming(while:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"Algorithms"}],"symbolKind":"method","extendedModule":"Swift","title":"trimming(while:)","externalID":"s:SK10AlgorithmsE8trimming5while11SubSequenceQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:10Algorithms21CycledTimesCollectionV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimming","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/BidirectionalCollection-Implementations"]]},"abstract":[{"type":"text","text":"Returns a "},{"type":"codeVoice","code":"SubSequence"},{"type":"text","text":" formed by discarding all elements at the start and"},{"type":"text","text":" "},{"type":"text","text":"end of the collection which satisfy the given predicate."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/cycledtimescollection\/trimming(while:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledTimesCollection/BidirectionalCollection-Implementations":{"role":"collectionGroup","type":"topic","abstract":[],"kind":"article","url":"\/documentation\/algorithms\/cycledtimescollection\/bidirectionalcollection-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/BidirectionalCollection-Implementations","title":"BidirectionalCollection Implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledTimesCollection/trimming(while:)":{"role":"symbol","type":"topic","abstract":[{"text":"Returns a ","type":"text"},{"type":"codeVoice","code":"SubSequence"},{"text":" formed by discarding all elements at the start and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"end of the collection which satisfy the given predicate."}],"kind":"symbol","url":"\/documentation\/algorithms\/cycledtimescollection\/trimming(while:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimming","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/trimming(while:)","title":"trimming(while:)"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"url":"\/documentation\/algorithms","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","type":"topic","title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledTimesCollection":{"url":"\/documentation\/algorithms\/cycledtimescollection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection","role":"symbol","abstract":[{"type":"text","text":"A collection wrapper that repeats the elements of a base collection for a"},{"type":"text","text":" "},{"type":"text","text":"finite number of times."}],"navigatorTitle":[{"text":"CycledTimesCollection","kind":"identifier"}],"kind":"symbol","title":"CycledTimesCollection","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CycledTimesCollection","kind":"identifier"}]}}}