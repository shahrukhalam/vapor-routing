{"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule","doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/ElementaryFunctions"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/realmodule\/elementaryfunctions\/expminusone(_:)"]}],"abstract":[{"text":"exp(x) - 1, computed in such a way as to maintain accuracy for small x.","type":"text"}],"metadata":{"role":"symbol","externalID":"s:10RealModule19ElementaryFunctionsP11expMinusOneyxxFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expMinusOne"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"expMinusOne(_:)","modules":[{"name":"RealModule"}],"roleHeading":"Type Method","symbolKind":"method","required":true},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expMinusOne"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"platforms":["Linux"]}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"When "},{"code":"x","type":"codeVoice"},{"type":"text","text":" is close to zero, the expression "},{"code":".exp(x) - 1","type":"codeVoice"},{"type":"text","text":" suffers from"},{"type":"text","text":" "},{"type":"text","text":"catastrophic cancellation and the result will not have full accuracy."},{"type":"text","text":" "},{"type":"text","text":"The "},{"code":".expMinusOne(x)","type":"codeVoice"},{"type":"text","text":" function gives you a means to address this problem."}],"type":"paragraph"},{"inlineContent":[{"text":"As an example, consider the expression ","type":"text"},{"code":"(x + 1)*exp(x) - 1","type":"codeVoice"},{"text":".  When ","type":"text"},{"code":"x","type":"codeVoice"},{"text":" ","type":"text"},{"text":"is smaller than ","type":"text"},{"code":".ulpOfOne","type":"codeVoice"},{"text":", this expression evaluates to ","type":"text"},{"code":"0.0","type":"codeVoice"},{"text":", when it","type":"text"},{"text":" ","type":"text"},{"text":"should actually round to ","type":"text"},{"code":"2*x","type":"codeVoice"},{"text":". We can get a full-accuracy result by","type":"text"},{"text":" ","type":"text"},{"text":"using the following instead:","type":"text"}],"type":"paragraph"},{"code":["let t = .expMinusOne(x)","return x*(t+1) + t       \/\/ x*exp(x) + (exp(x)-1) = (x+1)*exp(x) - 1"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"This re-written expression delivers an accurate result for all values"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"x"},{"type":"text","text":", not just for small values."}],"type":"paragraph"},{"anchor":"See-also","level":2,"text":"See also:","type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"exp()"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"exp2()","type":"codeVoice"},{"text":" (for types conforming to ","type":"text"},{"code":"RealFunctions","type":"codeVoice"},{"text":")","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"exp10()","type":"codeVoice"},{"text":" (for types conforming to ","type":"text"},{"code":"RealFunctions","type":"codeVoice"},{"text":")","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/ElementaryFunctions\/expMinusOne(_:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/RealModule/ElementaryFunctions/expMinusOne(_:)":{"url":"\/documentation\/realmodule\/elementaryfunctions\/expminusone(_:)","title":"expMinusOne(_:)","abstract":[{"text":"exp(x) - 1, computed in such a way as to maintain accuracy for small x.","type":"text"}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expMinusOne","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/ElementaryFunctions\/expMinusOne(_:)"},"doc://co.pointfree.VaporRouting/documentation/RealModule/ElementaryFunctions":{"navigatorTitle":[{"text":"ElementaryFunctions","kind":"identifier"}],"url":"\/documentation\/realmodule\/elementaryfunctions","title":"ElementaryFunctions","abstract":[{"text":"A type that has elementary functions available.","type":"text"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ElementaryFunctions","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/ElementaryFunctions"},"doc://co.pointfree.VaporRouting/documentation/RealModule":{"url":"\/documentation\/realmodule","title":"RealModule","abstract":[],"type":"topic","kind":"symbol","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule"}}}