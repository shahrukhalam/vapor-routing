{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/init(group:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/init(validatingGroup:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/bind(to:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/channelInitializer(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/channelOption(_:value:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connect(host:port:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connect(to:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connect(unixDomainSocketPath:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connectTimeout(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/protocolHandlers(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/resolver(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/withConnectedSocket(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/withConnectedSocket(descriptor:)"]}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol"],"kind":"relationships"}],"kind":"symbol","metadata":{"symbolKind":"class","title":"ClientBootstrap","role":"symbol","modules":[{"name":"NIOPosix"}],"externalID":"s:8NIOPosix15ClientBootstrapC","roleHeading":"Class","navigatorTitle":[{"text":"ClientBootstrap","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClientBootstrap","kind":"identifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/clientbootstrap"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClientBootstrap","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Usually you re-use a "},{"code":"ClientBootstrap","type":"codeVoice"},{"type":"text","text":" once you set it up and called "},{"code":"connect","type":"codeVoice"},{"type":"text","text":" multiple times on it."},{"type":"text","text":" "},{"type":"text","text":"This way you ensure that the same "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s will be shared across all your connections."}],"type":"paragraph"},{"inlineContent":[{"text":"Example:","type":"text"}],"type":"paragraph"},{"code":["    let group = MultiThreadedEventLoopGroup(numberOfThreads: 1)","    defer {","        try! group.syncShutdownGracefully()","    }","    let bootstrap = ClientBootstrap(group: group)","        \/\/ Enable SO_REUSEADDR.","        .channelOption(ChannelOptions.socketOption(.so_reuseaddr), value: 1)","        .channelInitializer { channel in","            \/\/ always instantiate the handler _within_ the closure as","            \/\/ it may be called multiple times (for example if the hostname","            \/\/ resolves to both IPv4 and IPv6 addresses, cf. Happy Eyeballs).","            channel.pipeline.addHandler(MyChannelHandler())","        }","    try! bootstrap.connect(host: \"example.org\", port: 12345).wait()","    \/* the Channel is now connected *\/"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"The connected "},{"code":"SocketChannel","type":"codeVoice"},{"type":"text","text":" will operate on "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" as inbound and on "},{"code":"IOData","type":"codeVoice"},{"type":"text","text":" as outbound messages."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ClientBootstrap"},{"type":"text","text":" is an easy way to bootstrap a "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":" when creating network clients."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/connect(to:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":">"}],"title":"connect(to:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connect(to:)","type":"topic","url":"\/documentation\/nioposix\/clientbootstrap\/connect(to:)","kind":"symbol","abstract":[{"type":"text","text":"Specify the "},{"type":"codeVoice","code":"address"},{"type":"text","text":" to connect to for the TCP "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" that will be established."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/connect(host:port:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connect(host:port:)","role":"symbol","url":"\/documentation\/nioposix\/clientbootstrap\/connect(host:port:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"host","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":">","kind":"text"}],"title":"connect(host:port:)","abstract":[{"type":"text","text":"Specify the "},{"code":"host","type":"codeVoice"},{"type":"text","text":" and "},{"code":"port","type":"codeVoice"},{"type":"text","text":" to connect to for the TCP "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" that will be established."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/channelOption(_:value:)":{"title":"channelOption(_:value:)","abstract":[{"text":"Specifies a ","type":"text"},{"type":"codeVoice","code":"ChannelOption"},{"type":"text","text":" to be applied to the "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":"."}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/channelOption(_:value:)","url":"\/documentation\/nioposix\/clientbootstrap\/channeloption(_:value:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap","type":"topic","url":"\/documentation\/nioposix\/clientbootstrap","navigatorTitle":[{"kind":"identifier","text":"ClientBootstrap"}],"abstract":[{"type":"text","text":"A "},{"code":"ClientBootstrap","type":"codeVoice"},{"type":"text","text":" is an easy way to bootstrap a "},{"code":"SocketChannel","type":"codeVoice"},{"type":"text","text":" when creating network clients."}],"kind":"symbol","role":"symbol","title":"ClientBootstrap","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClientBootstrap"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/connect(unixDomainSocketPath:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connect(unixDomainSocketPath:)","title":"connect(unixDomainSocketPath:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"unixDomainSocketPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":">"}],"abstract":[{"text":"Specify the ","type":"text"},{"code":"unixDomainSocket","type":"codeVoice"},{"text":" path to connect to for the UDS ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" that will be established.","type":"text"}],"url":"\/documentation\/nioposix\/clientbootstrap\/connect(unixdomainsocketpath:)","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"type":"topic","title":"NIOPosix","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","abstract":[],"kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/init(group:)":{"title":"init(group:)","kind":"symbol","url":"\/documentation\/nioposix\/clientbootstrap\/init(group:)","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"group","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore14EventLoopGroupP","text":"EventLoopGroup","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"ClientBootstrap"},{"type":"text","text":" on the "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" "},{"type":"codeVoice","code":"group"},{"type":"text","text":"."}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/init(group:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/connectTimeout(_:)":{"type":"topic","title":"connectTimeout(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connectTimeout(_:)","abstract":[{"text":"Specifies a timeout to apply to a connection attempt.","type":"text"}],"url":"\/documentation\/nioposix\/clientbootstrap\/connecttimeout(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connectTimeout"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"TimeAmount","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/bind(to:)":{"type":"topic","abstract":[{"text":"Bind the ","type":"text"},{"code":"SocketChannel","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"address","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/bind(to:)","title":"bind(to:)","kind":"symbol","role":"symbol","url":"\/documentation\/nioposix\/clientbootstrap\/bind(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ClientBootstrap","preciseIdentifier":"s:8NIOPosix15ClientBootstrapC"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrapProtocol":{"url":"\/documentation\/niocore\/nioclienttcpbootstrapprotocol","kind":"symbol","title":"NIOClientTCPBootstrapProtocol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOClientTCPBootstrapProtocol"}],"role":"symbol","abstract":[{"code":"NIOClientTCPBootstrapProtocol","type":"codeVoice"},{"type":"text","text":" is implemented by various underlying transport mechanisms. Typically,"},{"type":"text","text":" "},{"type":"text","text":"this will be the BSD Sockets API implemented by "},{"code":"ClientBootstrap","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"NIOClientTCPBootstrapProtocol"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/withConnectedSocket(_:)":{"title":"withConnectedSocket(_:)","kind":"symbol","abstract":[{"text":"Use the existing connected socket file descriptor.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withConnectedSocket","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NIOBSDSocket","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore12NIOBSDSocketO"},{"text":".","kind":"text"},{"text":"Handle","preciseIdentifier":"s:7NIOCore12NIOBSDSocketO6Handlea","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/nioposix\/clientbootstrap\/withconnectedsocket(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/withConnectedSocket(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/channelInitializer(_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/channelInitializer(_:)","role":"symbol","abstract":[{"type":"text","text":"Initialize the connected "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":" with "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"title":"channelInitializer(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInitializer"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/nioposix\/clientbootstrap\/channelinitializer(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/init(validatingGroup:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/init(validatingGroup:)","url":"\/documentation\/nioposix\/clientbootstrap\/init(validatinggroup:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"ClientBootstrap"},{"type":"text","text":" on the "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" "},{"type":"codeVoice","code":"group"},{"type":"text","text":", validating that "},{"type":"codeVoice","code":"group"},{"type":"text","text":" is compatible."}],"type":"topic","title":"init(validatingGroup:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"validatingGroup","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore14EventLoopGroupP","text":"EventLoopGroup","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/withConnectedSocket(descriptor:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/withConnectedSocket(descriptor:)","type":"topic","url":"\/documentation\/nioposix\/clientbootstrap\/withconnectedsocket(descriptor:)","abstract":[{"type":"text","text":"Use the existing connected socket file descriptor."}],"kind":"symbol","role":"symbol","deprecated":true,"title":"withConnectedSocket(descriptor:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withConnectedSocket"},{"kind":"text","text":"("},{"kind":"externalParam","text":"descriptor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4CInta","text":"CInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/protocolHandlers(_:)":{"role":"symbol","title":"protocolHandlers(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/protocolHandlers(_:)","url":"\/documentation\/nioposix\/clientbootstrap\/protocolhandlers(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"protocolHandlers","kind":"identifier"},{"text":"(() -> [","kind":"text"},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"Sets the protocol handlers that will be added to the front of the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" right after the","type":"text"},{"text":" ","type":"text"},{"code":"channelInitializer","type":"codeVoice"},{"text":" has been called.","type":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/resolver(_:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolver","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Resolver","preciseIdentifier":"s:8NIOPosix8ResolverP","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","title":"resolver(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/resolver(_:)","url":"\/documentation\/nioposix\/clientbootstrap\/resolver(_:)","abstract":[{"type":"text","text":"Specifies the "},{"type":"codeVoice","code":"Resolver"},{"type":"text","text":" to use or "},{"type":"codeVoice","code":"nil"},{"text":" if the default should be used.","type":"text"}]}}}