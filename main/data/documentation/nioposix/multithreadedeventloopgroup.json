{"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP","doc:\/\/co.pointfree.VaporRouting\/s8SendableP"],"type":"conformsTo"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/init(numberOfThreads:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/any()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/makeIterator()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/next()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/shutdownGracefully(queue:_:)"]},{"title":"Type Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/currentEventLoop"]},{"title":"Type Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/withCurrentThreadAsEventLoop(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/CustomStringConvertible-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/EventLoopGroup-Implementations"]}],"abstract":[{"text":"An ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":" which will create multiple ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":"s, each tied to its own ","type":"text"},{"code":"NIOThread","type":"codeVoice"},{"text":".","type":"text"}],"metadata":{"roleHeading":"Class","symbolKind":"class","title":"MultiThreadedEventLoopGroup","externalID":"s:8NIOPosix27MultiThreadedEventLoopGroupC","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"navigatorTitle":[{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"modules":[{"name":"NIOPosix"}],"role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/multithreadedeventloopgroup"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The effect of initializing a ","type":"text"},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"text":" is to spawn ","type":"text"},{"code":"numberOfThreads","type":"codeVoice"},{"text":" fresh threads which will","type":"text"},{"text":" ","type":"text"},{"text":"all run their own ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":". Those threads will not be shut down until ","type":"text"},{"code":"shutdownGracefully","type":"codeVoice"},{"text":" or","type":"text"},{"text":" ","type":"text"},{"code":"syncShutdownGracefully","type":"codeVoice"},{"text":" is called.","type":"text"}]},{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s good style to call "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup.shutdownGracefully"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup.syncShutdownGracefully"},{"type":"text","text":" when you no longer need this "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":". In"},{"type":"text","text":" "},{"type":"text","text":"many cases that is just before your program exits."}]}],"style":"note"},{"name":"Warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unit tests often spawn one "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" per unit test to force isolation between the"},{"type":"text","text":" "},{"type":"text","text":"tests. In those cases it’s important to shut the "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" down at the end of the"},{"type":"text","text":" "},{"type":"text","text":"test. A good place to start a "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" is the "},{"type":"codeVoice","code":"setUp"},{"type":"text","text":" method of your "},{"type":"codeVoice","code":"XCTestCase"},{"type":"text","text":" "},{"type":"text","text":"subclass, a good place to shut it down is the "},{"type":"codeVoice","code":"tearDown"},{"type":"text","text":" method."}]}],"style":"warning"}]}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup":{"type":"topic","navigatorTitle":[{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"title":"MultiThreadedEventLoopGroup","url":"\/documentation\/nioposix\/multithreadedeventloopgroup","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup","abstract":[{"text":"An ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":" which will create multiple ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":"s, each tied to its own ","type":"text"},{"type":"codeVoice","code":"NIOThread"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/currentEventLoop":{"abstract":[{"text":"Returns the ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" for the calling thread.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"currentEventLoop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/currentEventLoop","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/currenteventloop","title":"currentEventLoop","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/init(numberOfThreads:)":{"abstract":[{"text":"Creates a ","type":"text"},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"text":" instance which uses ","type":"text"},{"code":"numberOfThreads","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"numberOfThreads"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/init(numberOfThreads:)","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/init(numberofthreads:)","title":"init(numberOfThreads:)","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"type":"topic","title":"NIOPosix","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","abstract":[],"kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/shutdownGracefully(queue:_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/shutdownGracefully(queue:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shutdownGracefully","kind":"identifier"},{"text":"(","kind":"text"},{"text":"queue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"role":"symbol","type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/shutdowngracefully(queue:_:)","kind":"symbol","title":"shutdownGracefully(queue:_:)","abstract":[{"type":"text","text":"Shut this "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" down which causes the "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s and their associated threads to be"},{"type":"text","text":" "},{"type":"text","text":"shut down and release their resources."}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/withCurrentThreadAsEventLoop(_:)":{"abstract":[{"text":"Convert the calling thread into an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withCurrentThreadAsEventLoop"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/withCurrentThreadAsEventLoop(_:)","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/withcurrentthreadaseventloop(_:)","title":"withCurrentThreadAsEventLoop(_:)","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/EventLoopGroup-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/EventLoopGroup-Implementations","title":"EventLoopGroup Implementations","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/eventloopgroup-implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/any()":{"abstract":[{"text":"Returns the current ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" if we are on an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" of this ","type":"text"},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"text":" instance.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/any()","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/any()","title":"any()","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/next()":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"}],"url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/next()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/next()","title":"next()","abstract":[{"type":"text","text":"Returns the next "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" from this "},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","navigatorTitle":[{"text":"EventLoopGroup","kind":"identifier"}],"title":"EventLoopGroup","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroup","kind":"identifier"}],"url":"\/documentation\/niocore\/eventloopgroup","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Provides an endless stream of "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s to use."}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/makeIterator()":{"abstract":[{"text":"Returns an ","type":"text"},{"code":"EventLoopIterator","type":"codeVoice"},{"type":"text","text":" over the "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s in this "},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoopIterator","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore17EventLoopIteratorV"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/makeIterator()","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/makeiterator()","title":"makeIterator()","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP","title":"Swift.Sendable"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOPreconcurrencySendable":{"title":"NIOPreconcurrencySendable","type":"topic","role":"symbol","url":"\/documentation\/niocore\/niopreconcurrencysendable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"navigatorTitle":[{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","kind":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/CustomStringConvertible-Implementations":{"url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/customstringconvertible-implementations","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/CustomStringConvertible-Implementations","role":"collectionGroup","title":"CustomStringConvertible Implementations","kind":"article"}}}