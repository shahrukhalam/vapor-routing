{"sections":[],"metadata":{"symbolKind":"method","externalID":"s:8NIOPosix27MultiThreadedEventLoopGroupC3any7NIOCore0dE0_pyF","modules":[{"name":"NIOPosix"}],"roleHeading":"Instance Method","title":"any()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"() -> "},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"}],"role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/multithreadedeventloopgroup\/any()"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":".","type":"text"}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/any()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns the current "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" if we are on an "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" of this "},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"type":"text","text":" instance."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until itâ€™s closed."}],"url":"\/documentation\/niocore\/eventloop","type":"topic","title":"EventLoop","role":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"type":"topic","title":"NIOPosix","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","abstract":[],"kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/any()":{"abstract":[{"text":"Returns the current ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" if we are on an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" of this ","type":"text"},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"text":" instance.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/any()","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/any()","title":"any()","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup":{"type":"topic","navigatorTitle":[{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"title":"MultiThreadedEventLoopGroup","url":"\/documentation\/nioposix\/multithreadedeventloopgroup","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup","abstract":[{"text":"An ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":" which will create multiple ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":"s, each tied to its own ","type":"text"},{"type":"codeVoice","code":"NIOThread"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol"}}}