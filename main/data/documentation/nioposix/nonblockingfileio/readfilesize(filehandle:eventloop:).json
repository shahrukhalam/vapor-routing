{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"readFileSize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"fileHandle","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13NIOFileHandleC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","text":"NIOFileHandle","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"eventLoop","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","text":"EventLoop","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" to read from."}]}],"name":"fileHandle"},{"content":[{"inlineContent":[{"type":"text","text":"The "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" to create the returned "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" from."}],"type":"paragraph"}],"name":"eventLoop"}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" which is fulfilled if the write was successful or fails on error.","type":"text"}]}],"kind":"content"}],"kind":"symbol","sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readFileSize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fileHandle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOFileHandle","preciseIdentifier":"s:7NIOCore13NIOFileHandleC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":">"}],"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"NIOPosix"}],"externalID":"s:8NIOPosix17NonBlockingFileIOV04readD4Size10fileHandle9eventLoop7NIOCore05EventK6FutureCys5Int64VGAG07NIOFileI0C_AG0mK0_ptF","title":"readFileSize(fileHandle:eventLoop:)","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NonBlockingFileIO"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/nonblockingfileio\/readfilesize(filehandle:eventloop:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NonBlockingFileIO\/readFileSize(fileHandle:eventLoop:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns the length of the file associated with "},{"type":"codeVoice","code":"fileHandle"},{"type":"text","text":"."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"type":"topic","title":"NIOPosix","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","abstract":[],"kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NonBlockingFileIO/readFileSize(fileHandle:eventLoop:)":{"role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readFileSize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fileHandle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13NIOFileHandleC","text":"NIOFileHandle"},{"kind":"text","text":", "},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NonBlockingFileIO\/readFileSize(fileHandle:eventLoop:)","title":"readFileSize(fileHandle:eventLoop:)","url":"\/documentation\/nioposix\/nonblockingfileio\/readfilesize(filehandle:eventloop:)","abstract":[{"type":"text","text":"Returns the length of the file associated with "},{"type":"codeVoice","code":"fileHandle"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NonBlockingFileIO":{"navigatorTitle":[{"kind":"identifier","text":"NonBlockingFileIO"}],"title":"NonBlockingFileIO","url":"\/documentation\/nioposix\/nonblockingfileio","abstract":[{"code":"NonBlockingFileIO","type":"codeVoice"},{"text":" is a helper that allows you to read files without blocking the calling thread.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonBlockingFileIO"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NonBlockingFileIO","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle":{"title":"NIOFileHandle","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","url":"\/documentation\/niocore\/niofilehandle","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"NIOFileHandle"},{"text":" is a handle to an open file.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOFileHandle"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOFileHandle"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until itâ€™s closed."}],"url":"\/documentation\/niocore\/eventloop","type":"topic","title":"EventLoop","role":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","title":"EventLoopFuture"}}}