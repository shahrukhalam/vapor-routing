{"topicSections":[{"title":"Type Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseAnd(with:at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseOr(with:at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseXor(with:at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingDecrement(by:at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingIncrement(by:at:ordering:)"]}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage"]}],"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicIntegerStorage","kind":"identifier"}],"modules":[{"name":"Atomics"}],"externalID":"s:7Atomics20AtomicIntegerStorageP","roleHeading":"Protocol","title":"AtomicIntegerStorage","symbolKind":"protocol","role":"symbol","navigatorTitle":[{"text":"AtomicIntegerStorage","kind":"identifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/atomicintegerstorage"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"]]},"abstract":[{"type":"text","text":"The storage representation for an atomic integer value, providing"},{"type":"text","text":" "},{"type":"text","text":"pointer-based atomic operations."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicIntegerStorage"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"AtomicStorage","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage","preciseIdentifier":"s:7Atomics13AtomicStorageP"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a low-level implementation detail of atomic types; instead"},{"type":"text","text":" "},{"type":"text","text":"of directly handling conforming types, it is usually better to use"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"UnsafeAtomic"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ManagedAtomic"},{"type":"text","text":" generics â€“ these provide a"},{"type":"text","text":" "},{"type":"text","text":"more reliable interface while ensuring that the storage is"},{"type":"text","text":" "},{"type":"text","text":"correctly constructed and destroyed."}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenBitwiseOr(with:at:ordering:)":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicLoadThenBitwiseOr","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseOr(with:at:ordering:)","url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwiseor(with:at:ordering:)","title":"atomicLoadThenBitwiseOr(with:at:ordering:)","abstract":[{"type":"text","text":"Perform an atomic bitwise OR operation on the value referenced by"},{"text":" ","type":"text"},{"code":"pointer","type":"codeVoice"},{"text":" and return the original value, applying the specified memory","type":"text"},{"text":" ","type":"text"},{"text":"ordering.","type":"text"}],"required":true},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenWrappingDecrement(by:at:ordering:)":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicLoadThenWrappingDecrement","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingDecrement(by:at:ordering:)","url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenwrappingdecrement(by:at:ordering:)","title":"atomicLoadThenWrappingDecrement(by:at:ordering:)","abstract":[{"type":"text","text":"Perform an atomic wrapping decrement operation on the value referenced by"},{"text":" ","type":"text"},{"code":"pointer","type":"codeVoice"},{"text":" and return the original value, applying the specified memory","type":"text"},{"text":" ","type":"text"},{"text":"ordering.","type":"text"}],"required":true},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"url":"\/documentation\/atomics","kind":"symbol","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","title":"Atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenWrappingIncrement(by:at:ordering:)":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicLoadThenWrappingIncrement","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingIncrement(by:at:ordering:)","url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenwrappingincrement(by:at:ordering:)","title":"atomicLoadThenWrappingIncrement(by:at:ordering:)","abstract":[{"type":"text","text":"Perform an atomic wrapping increment operation on the value referenced by"},{"text":" ","type":"text"},{"code":"pointer","type":"codeVoice"},{"text":" and return the original value, applying the specified memory","type":"text"},{"text":" ","type":"text"},{"text":"ordering.","type":"text"}],"required":true},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage":{"abstract":[{"text":"The storage representation for an atomic integer value, providing","type":"text"},{"text":" ","type":"text"},{"text":"pointer-based atomic operations.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicIntegerStorage"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage","title":"AtomicIntegerStorage","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/atomics\/atomicintegerstorage","navigatorTitle":[{"kind":"identifier","text":"AtomicIntegerStorage"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenBitwiseXor(with:at:ordering:)":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicLoadThenBitwiseXor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseXor(with:at:ordering:)","url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwisexor(with:at:ordering:)","title":"atomicLoadThenBitwiseXor(with:at:ordering:)","abstract":[{"type":"text","text":"Perform an atomic bitwise XOR operation on the value referenced by"},{"text":" ","type":"text"},{"code":"pointer","type":"codeVoice"},{"text":" and return the original value, applying the specified memory","type":"text"},{"text":" ","type":"text"},{"text":"ordering.","type":"text"}],"required":true},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicStorage","kind":"identifier"}],"navigatorTitle":[{"text":"AtomicStorage","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage","url":"\/documentation\/atomics\/atomicstorage","title":"AtomicStorage","abstract":[{"type":"text","text":"The storage representation for an atomic value, providing pointer-based"},{"text":" ","type":"text"},{"text":"atomic operations. This is a low-level implementation detail of atomic","type":"text"},{"text":" ","type":"text"},{"text":"types; instead of directly handling conforming types, it is usually better","type":"text"},{"text":" ","type":"text"},{"text":"to use the ","type":"text"},{"code":"UnsafeAtomic","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ManagedAtomic","type":"codeVoice"},{"text":" generics â€“ these provide more","type":"text"},{"text":" ","type":"text"},{"text":"convenient and safer interfaces while also ensuring that the storage is","type":"text"},{"text":" ","type":"text"},{"text":"correctly constructed and destroyed.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenBitwiseAnd(with:at:ordering:)":{"abstract":[{"text":"Perform an atomic bitwise AND operation on the value referenced by","type":"text"},{"text":" ","type":"text"},{"code":"pointer","type":"codeVoice"},{"text":" and return the original value, applying the specified memory","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ordering."}],"required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseAnd(with:at:ordering:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicLoadThenBitwiseAnd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"title":"atomicLoadThenBitwiseAnd(with:at:ordering:)","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwiseand(with:at:ordering:)"}}}