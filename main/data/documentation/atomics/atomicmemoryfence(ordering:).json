{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/atomicMemoryFence(ordering:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Establishes a memory ordering without associating it with a"},{"type":"text","text":" "},{"type":"text","text":"particular atomic operation."}],"kind":"symbol","metadata":{"roleHeading":"Function","symbolKind":"func","externalID":"s:7Atomics17atomicMemoryFence8orderingyAA20AtomicUpdateOrderingV_tF","modules":[{"name":"Atomics"}],"title":"atomicMemoryFence(ordering:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"atomicMemoryFence","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":")"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicMemoryFence"},{"text":"(","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"A relaxed fence has no effect."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"An acquiring fence ties to any preceding atomic operation that"},{"type":"text","text":" "},{"type":"text","text":"reads a value, and synchronizes with any releasing operation whose"},{"type":"text","text":" "},{"type":"text","text":"value was read."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"A releasing fence ties to any subsequent atomic operation that"},{"type":"text","text":" "},{"type":"text","text":"modifies a value, and synchronizes with any acquiring operation"},{"type":"text","text":" "},{"type":"text","text":"that reads the result."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"An acquiring and releasing fence is a combination of an"},{"type":"text","text":" "},{"type":"text","text":"acquiring and a releasing fence."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"A sequentially consistent fence behaves like an acquiring and","type":"text"},{"text":" ","type":"text"},{"text":"releasing fence, and ensures that the fence itself is part of","type":"text"},{"text":" ","type":"text"},{"text":"the single, total ordering for all sequentially consistent","type":"text"},{"text":" ","type":"text"},{"text":"operations.","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation corresponds to "},{"code":"std::atomic_thread_fence","type":"codeVoice"},{"type":"text","text":" in C++."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atomics\/atomicmemoryfence(ordering:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics/atomicMemoryFence(ordering:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/atomicMemoryFence(ordering:)","abstract":[{"type":"text","text":"Establishes a memory ordering without associating it with a"},{"type":"text","text":" "},{"type":"text","text":"particular atomic operation."}],"kind":"symbol","title":"atomicMemoryFence(ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicMemoryFence","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","type":"topic","url":"\/documentation\/atomics\/atomicmemoryfence(ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"url":"\/documentation\/atomics","kind":"symbol","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","title":"Atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicUpdateOrdering":{"url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"abstract":[{"type":"text","text":"Specifies the memory ordering semantics of an atomic read-modify-write"},{"type":"text","text":" "},{"type":"text","text":"operation."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicUpdateOrdering","title":"AtomicUpdateOrdering"}}}