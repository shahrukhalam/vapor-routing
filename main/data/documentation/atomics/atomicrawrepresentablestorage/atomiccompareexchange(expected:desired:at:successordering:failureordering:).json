{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicRawRepresentableStorage"]]},"abstract":[{"text":"Perform an atomic compare and exchange operation on the value referenced","type":"text"},{"text":" ","type":"text"},{"text":"by ","type":"text"},{"code":"pointer","type":"codeVoice"},{"text":", applying the specified success\/failure memory orderings.","type":"text"}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicCompareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":" "},{"kind":"internalParam","text":"pointer"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7Atomics29AtomicRawRepresentableStorageV","kind":"typeIdentifier","text":"AtomicRawRepresentableStorage","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicRawRepresentableStorage"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicUpdateOrdering"},{"kind":"text","text":", "},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier","text":"AtomicLoadOrdering","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"expected","content":[{"inlineContent":[{"text":"The expected current value.","type":"text"}],"type":"paragraph"}]},{"name":"desired","content":[{"inlineContent":[{"text":"The desired new value.","type":"text"}],"type":"paragraph"}]},{"name":"pointer","content":[{"inlineContent":[{"text":"A memory location previously initialized with a value","type":"text"},{"text":" ","type":"text"},{"text":"returned by ","type":"text"},{"code":"prepareSelf(for:)","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"name":"successOrdering","content":[{"type":"paragraph","inlineContent":[{"text":"The memory ordering to apply if this","type":"text"},{"text":" ","type":"text"},{"text":"operation performs the exchange.","type":"text"}]}]},{"name":"failureOrdering","content":[{"inlineContent":[{"text":"The memory ordering to apply on this","type":"text"},{"text":" ","type":"text"},{"text":"operation does not perform the exchange.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A tuple ","type":"text"},{"type":"codeVoice","code":"(exchanged, original)"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"exchanged"},{"text":" is true if","type":"text"},{"text":" ","type":"text"},{"text":"the exchange was successful, and ","type":"text"},{"type":"codeVoice","code":"original"},{"text":" is the original value.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This operation performs the following algorithm as a single atomic","type":"text"},{"text":" ","type":"text"},{"text":"transaction:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"successOrdering"},{"text":" argument specifies the memory ordering to use when","type":"text"},{"text":" ","type":"text"},{"text":"the operation manages to update the current value, while ","type":"text"},{"type":"codeVoice","code":"failureOrdering"},{"text":" ","type":"text"},{"text":"will be used when the operation leaves the value intact.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method implements a “strong” compare and exchange operation"},{"type":"text","text":" "},{"type":"text","text":"that does not permit spurious failures."}]}],"kind":"content"}],"kind":"symbol","variants":[{"paths":["\/documentation\/atomics\/atomicrawrepresentablestorage\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7Atomics29AtomicRawRepresentableStorageV","text":"AtomicRawRepresentableStorage","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:7Atomics29AtomicRawRepresentableStorageV21atomicCompareExchange8expected7desired2at15successOrdering07failureM0Sb9exchanged_x8originaltx_xSpyACyxGGAA0b6UpdateM0VAA0b4LoadM0VtFZ","modules":[{"name":"Atomics"}],"roleHeading":"Type Method","title":"atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","symbolKind":"method","role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicRawRepresentableStorage\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicLoadOrdering"}],"kind":"symbol","url":"\/documentation\/atomics\/atomicloadordering","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering","type":"topic","title":"AtomicLoadOrdering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicUpdateOrdering":{"url":"\/documentation\/atomics\/atomicupdateordering","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"abstract":[{"type":"text","text":"Specifies the memory ordering semantics of an atomic read-modify-write"},{"type":"text","text":" "},{"type":"text","text":"operation."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicUpdateOrdering","title":"AtomicUpdateOrdering"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicRawRepresentableStorage":{"type":"topic","abstract":[{"type":"text","text":"The default atomic storage representation for an atomic "},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":" "},{"type":"text","text":"type whose "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/atomics\/atomicrawrepresentablestorage","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicRawRepresentableStorage","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicRawRepresentableStorage","navigatorTitle":[{"text":"AtomicRawRepresentableStorage","kind":"identifier"}],"role":"symbol","title":"AtomicRawRepresentableStorage"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicRawRepresentableStorage/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the value referenced"},{"type":"text","text":" "},{"type":"text","text":"by "},{"type":"codeVoice","code":"pointer"},{"type":"text","text":", applying the specified success\/failure memory orderings."}],"type":"topic","title":"atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","kind":"symbol","url":"\/documentation\/atomics\/atomicrawrepresentablestorage\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicCompareExchange"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7Atomics29AtomicRawRepresentableStorageV","text":"AtomicRawRepresentableStorage","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicRawRepresentableStorage\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"url":"\/documentation\/atomics","kind":"symbol","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","title":"Atomics"}}}