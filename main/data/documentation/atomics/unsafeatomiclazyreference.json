{"kind":"symbol","topicSections":[{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage"]},{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/init(at:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/destroy()","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/load()","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/storeIfNilThenLoad(_:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Value"]},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/create()"],"title":"Type Methods"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"type":"text","text":"An unsafe reference type holding a lazily initializable atomic"},{"type":"text","text":" "},{"type":"text","text":"strong reference, requiring manual memory management of the"},{"type":"text","text":" "},{"type":"text","text":"underlying storage representation."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/unsafeatomiclazyreference"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeAtomicLazyReference","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Instance","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Instance","kind":"typeIdentifier"},{"text":" : AnyObject","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"These values can be set (initialized) exactly once, but read many","type":"text"},{"text":" ","type":"text"},{"text":"times.","type":"text"}]}],"kind":"content"}],"metadata":{"externalID":"s:7Atomics25UnsafeAtomicLazyReferenceV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeAtomicLazyReference"}],"navigatorTitle":[{"kind":"identifier","text":"UnsafeAtomicLazyReference"}],"symbolKind":"struct","modules":[{"name":"Atomics"}],"title":"UnsafeAtomicLazyReference","role":"symbol","roleHeading":"Structure"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"]]},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/s8SendableP"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference/destroy()":{"type":"topic","abstract":[{"type":"text","text":"Disposes of the current value of the storage location corresponding to"},{"type":"text","text":" "},{"type":"text","text":"this unsafe atomic lazy reference, then deinitializes and deallocates the"},{"type":"text","text":" "},{"type":"text","text":"storage."}],"title":"destroy()","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"destroy","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"UnsafeAtomicLazyReference","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Instance","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Value","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV5Valuea","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/destroy()","url":"\/documentation\/atomics\/unsafeatomiclazyreference\/destroy()"},"doc://co.pointfree.VaporRouting/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP","type":"unresolvable"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference/Storage":{"navigatorTitle":[{"kind":"identifier","text":"Storage"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage","type":"topic","title":"UnsafeAtomicLazyReference.Storage","abstract":[{"type":"text","text":"The storage representation for an atomic lazy reference value."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Storage"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference","url":"\/documentation\/atomics\/unsafeatomiclazyreference","title":"UnsafeAtomicLazyReference","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeAtomicLazyReference"}],"role":"symbol","navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"text":" ","type":"text"},{"text":"strong reference, requiring manual memory management of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"underlying storage representation."}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference/create()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/create()","title":"create()","role":"symbol","abstract":[{"text":"Create a new ","type":"text"},{"code":"UnsafeAtomicLazyReference","type":"codeVoice"},{"type":"text","text":" value by dynamically allocating"},{"type":"text","text":" "},{"type":"text","text":"storage for it."}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/create()","kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"UnsafeAtomicLazyReference","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Instance","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference/init(at:)":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Initialize an unsafe atomic lazy reference that uses the supplied memory"},{"type":"text","text":" "},{"type":"text","text":"location for storage. The storage location must already be initialized to"},{"type":"text","text":" "},{"type":"text","text":"represent a valid atomic value."}],"title":"init(at:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/init(at:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeAtomicLazyReference","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Instance"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Storage","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV7StorageV"},{"kind":"text","text":">)"}],"type":"topic","url":"\/documentation\/atomics\/unsafeatomiclazyreference\/init(at:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference/storeIfNilThenLoad(_:)":{"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storeifnilthenload(_:)","role":"symbol","abstract":[{"type":"text","text":"Atomically initializes this reference if its current value is nil, then"},{"type":"text","text":" "},{"type":"text","text":"returns the initialized value. If this reference is already initialized,"},{"type":"text","text":" "},{"type":"text","text":"then "},{"type":"codeVoice","code":"storeIfNilThenLoad(_:)"},{"text":" discards its supplied argument and returns","type":"text"},{"text":" ","type":"text"},{"text":"the current value without updating it.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"storeIfNilThenLoad"},{"kind":"text","text":"("},{"text":"Instance","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Instance","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/storeIfNilThenLoad(_:)","title":"storeIfNilThenLoad(_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"url":"\/documentation\/atomics","kind":"symbol","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","title":"Atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference/Value":{"type":"topic","abstract":[{"type":"text","text":"The value logically stored in an atomic lazy reference value."}],"title":"UnsafeAtomicLazyReference.Value","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Value","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Value","url":"\/documentation\/atomics\/unsafeatomiclazyreference\/value"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference/load()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/load()","url":"\/documentation\/atomics\/unsafeatomiclazyreference\/load()","title":"load()","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Instance"},{"kind":"text","text":"?"}],"role":"symbol","abstract":[{"text":"Atomically loads and returns the current value of this reference.","type":"text"}]}}}