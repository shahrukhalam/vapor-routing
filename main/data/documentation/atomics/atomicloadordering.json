{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@frozen"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicLoadOrdering"}],"platforms":["Linux"],"languages":["swift"]}]}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP","doc:\/\/co.pointfree.VaporRouting\/SQ","doc:\/\/co.pointfree.VaporRouting\/SH","doc:\/\/co.pointfree.VaporRouting\/s8SendableP"],"type":"conformsTo"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"title":"Type Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/acquiring","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/relaxed","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/sequentiallyConsistent"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/CustomStringConvertible-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/Equatable-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/Hashable-Implementations"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"]]},"variants":[{"paths":["\/documentation\/atomics\/atomicloadordering"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"symbolKind":"struct","modules":[{"name":"Atomics"}],"externalID":"s:7Atomics18AtomicLoadOrderingV","title":"AtomicLoadOrdering","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicLoadOrdering"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}]},"abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/s8SendableP":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicLoadOrdering"}],"kind":"symbol","url":"\/documentation\/atomics\/atomicloadordering","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering","type":"topic","title":"AtomicLoadOrdering","abstract":[{"text":"Specifies the memory ordering semantics of an atomic load operation.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicLoadOrdering"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering/CustomStringConvertible-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/CustomStringConvertible-Implementations","url":"\/documentation\/atomics\/atomicloadordering\/customstringconvertible-implementations","type":"topic","title":"CustomStringConvertible Implementations","abstract":[],"role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/s23CustomStringConvertibleP":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering/Equatable-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/Equatable-Implementations","url":"\/documentation\/atomics\/atomicloadordering\/equatable-implementations","type":"topic","title":"Equatable Implementations","abstract":[],"role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering/Hashable-Implementations":{"kind":"article","url":"\/documentation\/atomics\/atomicloadordering\/hashable-implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/Hashable-Implementations","type":"topic","title":"Hashable Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/SH":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://co.pointfree.VaporRouting/SQ":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering/acquiring":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/acquiring","url":"\/documentation\/atomics\/atomicloadordering\/acquiring","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"acquiring"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier","text":"AtomicLoadOrdering"}],"title":"acquiring","abstract":[{"text":"An acquiring load synchronizes with a releasing operation whose","type":"text"},{"text":" ","type":"text"},{"text":"value its reads. It ensures that the releasing and acquiring","type":"text"},{"text":" ","type":"text"},{"text":"threads agree that all subsequent variable accesses on the","type":"text"},{"text":" ","type":"text"},{"text":"acquiring thread happen after the atomic operation itself.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"url":"\/documentation\/atomics","kind":"symbol","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","title":"Atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering/relaxed":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/relaxed","url":"\/documentation\/atomics\/atomicloadordering\/relaxed","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"relaxed"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier","text":"AtomicLoadOrdering"}],"title":"relaxed","abstract":[{"text":"Guarantees the atomicity of the specific operation on which it is applied,","type":"text"},{"text":" ","type":"text"},{"text":"but imposes no ordering constraints on any other variable accesses.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicLoadOrdering/sequentiallyConsistent":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicLoadOrdering\/sequentiallyConsistent","url":"\/documentation\/atomics\/atomicloadordering\/sequentiallyconsistent","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"sequentiallyConsistent"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier","text":"AtomicLoadOrdering"}],"title":"sequentiallyConsistent","abstract":[{"text":"A sequentially consistent load performs an acquiring load and","type":"text"},{"text":" ","type":"text"},{"text":"also guarantees that it and all other sequentially consistent","type":"text"},{"text":" ","type":"text"},{"text":"atomic operations (loads, stores, updates) appear to be executed","type":"text"},{"text":" ","type":"text"},{"text":"in a single, total sequential ordering.","type":"text"}],"role":"symbol","kind":"symbol"}}}