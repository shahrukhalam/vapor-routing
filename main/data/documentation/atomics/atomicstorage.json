{"sections":[],"kind":"symbol","topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/Value"]},{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/init(_:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/dispose()"]},{"title":"Type Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/atomicCompareExchange(expected:desired:at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/atomicExchange(_:at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/atomicLoad(at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/atomicStore(_:at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)"]}],"abstract":[{"type":"text","text":"The storage representation for an atomic value, providing pointer-based"},{"type":"text","text":" "},{"type":"text","text":"atomic operations. This is a low-level implementation detail of atomic"},{"type":"text","text":" "},{"type":"text","text":"types; instead of directly handling conforming types, it is usually better"},{"type":"text","text":" "},{"type":"text","text":"to use the "},{"code":"UnsafeAtomic","type":"codeVoice"},{"type":"text","text":" or "},{"code":"ManagedAtomic","type":"codeVoice"},{"type":"text","text":" generics – these provide more"},{"type":"text","text":" "},{"type":"text","text":"convenient and safer interfaces while also ensuring that the storage is"},{"type":"text","text":" "},{"type":"text","text":"correctly constructed and destroyed."}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"AtomicStorage"}],"modules":[{"name":"Atomics"}],"symbolKind":"protocol","title":"AtomicStorage","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicStorage"}],"roleHeading":"Protocol","externalID":"s:7Atomics13AtomicStorageP","role":"symbol"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/atomics\/atomicstorage"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicStorage"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Logically, atomic storage representations are neither value- nor reference","type":"text"},{"text":" ","type":"text"},{"text":"types: they should be treated as non-copiable values with a custom","type":"text"},{"text":" ","type":"text"},{"text":"destructor. Such constructs cannot currently be modeled directly in Swift,","type":"text"},{"text":" ","type":"text"},{"text":"so types conforming to this protocol must be handled carefully to prevent","type":"text"},{"text":" ","type":"text"},{"text":"accidental copying. For example, it usually isn’t safe to pass around atomic","type":"text"},{"text":" ","type":"text"},{"text":"storage representations as function arguments or return values. Instead,","type":"text"},{"text":" ","type":"text"},{"text":"they are usually addressed through unsafe pointers.","type":"text"}]}],"kind":"content"}],"relationshipsSections":[{"title":"Inherited By","kind":"relationships","type":"inheritedBy","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage"]},{"title":"Conforming Types","kind":"relationships","type":"conformingTypes","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicRawRepresentableStorage"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage/init(_:)":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/init(_:)","url":"\/documentation\/atomics\/atomicstorage\/init(_:)","kind":"symbol","title":"init(_:)","abstract":[{"type":"text","text":"Encode the supplied value into its atomic storage representation."}],"type":"topic","required":true},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage/atomicExchange(_:at:ordering:)":{"title":"atomicExchange(_:at:ordering:)","abstract":[{"text":"Atomically sets the value referenced by ","type":"text"},{"type":"codeVoice","code":"pointer"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"desired"},{"text":" and returns","type":"text"},{"text":" ","type":"text"},{"text":"the original value, applying the specified memory ordering.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/atomicExchange(_:at:ordering:)","type":"topic","role":"symbol","kind":"symbol","required":true,"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/atomics\/atomicstorage\/atomicexchange(_:at:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage":{"abstract":[{"text":"The storage representation for an atomic integer value, providing","type":"text"},{"text":" ","type":"text"},{"text":"pointer-based atomic operations.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicIntegerStorage"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage","title":"AtomicIntegerStorage","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/atomics\/atomicintegerstorage","navigatorTitle":[{"kind":"identifier","text":"AtomicIntegerStorage"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicCompareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":", "},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"abstract":[{"text":"Perform an atomic compare and exchange operation on the value referenced","type":"text"},{"text":" ","type":"text"},{"text":"by ","type":"text"},{"code":"pointer","type":"codeVoice"},{"text":", applying the specified success\/failure memory orderings.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","url":"\/documentation\/atomics\/atomicstorage\/atomiccompareexchange(expected:desired:at:successordering:failureordering:)","title":"atomicCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","role":"symbol","kind":"symbol","required":true},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicStorage","kind":"identifier"}],"navigatorTitle":[{"text":"AtomicStorage","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage","url":"\/documentation\/atomics\/atomicstorage","title":"AtomicStorage","abstract":[{"type":"text","text":"The storage representation for an atomic value, providing pointer-based"},{"text":" ","type":"text"},{"text":"atomic operations. This is a low-level implementation detail of atomic","type":"text"},{"text":" ","type":"text"},{"text":"types; instead of directly handling conforming types, it is usually better","type":"text"},{"text":" ","type":"text"},{"text":"to use the ","type":"text"},{"code":"UnsafeAtomic","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ManagedAtomic","type":"codeVoice"},{"text":" generics – these provide more","type":"text"},{"text":" ","type":"text"},{"text":"convenient and safer interfaces while also ensuring that the storage is","type":"text"},{"text":" ","type":"text"},{"text":"correctly constructed and destroyed.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage/Value":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}],"required":true,"url":"\/documentation\/atomics\/atomicstorage\/value","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/Value","role":"symbol","title":"Value","abstract":[{"text":"The type whose values this storage representation is representing.","type":"text"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage/atomicStore(_:at:ordering:)":{"title":"atomicStore(_:at:ordering:)","url":"\/documentation\/atomics\/atomicstorage\/atomicstore(_:at:ordering:)","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicStore","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicStoreOrdering","preciseIdentifier":"s:7Atomics19AtomicStoreOrderingV"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"text":"Atomically sets the value referenced by ","type":"text"},{"type":"codeVoice","code":"pointer"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"desired"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"applying the specified memory ordering.","type":"text"}],"required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/atomicStore(_:at:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)":{"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicWeakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/atomics\/atomicstorage\/atomicweakcompareexchange(expected:desired:at:successordering:failureordering:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","abstract":[{"type":"text","text":"Perform an atomic weak compare and exchange operation on the value"},{"type":"text","text":" "},{"type":"text","text":"referenced by "},{"code":"pointer","type":"codeVoice"},{"text":", applying the specified success\/failure memory","type":"text"},{"text":" ","type":"text"},{"text":"orderings. This compare-exchange variant is allowed to spuriously fail; it","type":"text"},{"text":" ","type":"text"},{"text":"is designed to be called in a loop until it indicates a successful","type":"text"},{"text":" ","type":"text"},{"text":"exchange has happened.","type":"text"}],"title":"atomicWeakCompareExchange(expected:desired:at:successOrdering:failureOrdering:)","required":true},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage/atomicCompareExchange(expected:desired:at:ordering:)":{"role":"symbol","title":"atomicCompareExchange(expected:desired:at:ordering:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/atomicCompareExchange(expected:desired:at:ordering:)","required":true,"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicCompareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"url":"\/documentation\/atomics\/atomicstorage\/atomiccompareexchange(expected:desired:at:ordering:)","abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the value referenced"},{"type":"text","text":" "},{"type":"text","text":"by "},{"type":"codeVoice","code":"pointer"},{"type":"text","text":", applying the specified memory ordering."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"url":"\/documentation\/atomics","kind":"symbol","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","title":"Atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicRawRepresentableStorage":{"type":"topic","abstract":[{"type":"text","text":"The default atomic storage representation for an atomic "},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":" "},{"type":"text","text":"type whose "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/atomics\/atomicrawrepresentablestorage","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicRawRepresentableStorage","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicRawRepresentableStorage","navigatorTitle":[{"text":"AtomicRawRepresentableStorage","kind":"identifier"}],"role":"symbol","title":"AtomicRawRepresentableStorage"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage/atomicLoad(at:ordering:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier","text":"AtomicLoadOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"text":"Atomically loads and returns the value referenced by the given pointer,","type":"text"},{"text":" ","type":"text"},{"text":"applying the specified memory ordering.","type":"text"}],"type":"topic","title":"atomicLoad(at:ordering:)","role":"symbol","url":"\/documentation\/atomics\/atomicstorage\/atomicload(at:ordering:)","required":true,"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/atomicLoad(at:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage/dispose()":{"title":"dispose()","type":"topic","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dispose","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/atomics\/atomicstorage\/dispose()","abstract":[{"text":"Prepare this atomic storage value for deinitialization, extracting the","type":"text"},{"text":" ","type":"text"},{"text":"logical value it represents. This invalidates this atomic storage; you","type":"text"},{"text":" ","type":"text"},{"text":"must not perform any operations on it after this call (except for","type":"text"},{"text":" ","type":"text"},{"text":"deinitialization).","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/dispose()","role":"symbol"}}}