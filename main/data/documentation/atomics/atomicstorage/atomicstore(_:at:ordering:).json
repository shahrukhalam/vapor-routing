{"abstract":[{"type":"text","text":"Atomically sets the value referenced by "},{"code":"pointer","type":"codeVoice"},{"type":"text","text":" to "},{"code":"desired","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"applying the specified memory ordering."}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/atomicstorage\/atomicstore(_:at:ordering:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/atomicStore(_:at:ordering:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicStore"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":" "},{"kind":"internalParam","text":"pointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicStoreOrdering","preciseIdentifier":"s:7Atomics19AtomicStoreOrderingV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStoreOrdering"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"parameters":[{"name":"desired","content":[{"inlineContent":[{"type":"text","text":"The desired new value."}],"type":"paragraph"}]},{"name":"pointer","content":[{"type":"paragraph","inlineContent":[{"text":"A memory location previously initialized with a value","type":"text"},{"text":" ","type":"text"},{"text":"returned by ","type":"text"},{"code":"prepareAtomicRepresentation(for:)","type":"codeVoice"},{"text":".","type":"text"}]}]},{"name":"ordering","content":[{"inlineContent":[{"type":"text","text":"The memory ordering to apply on this operation."}],"type":"paragraph"}]}],"kind":"parameters"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage"]]},"metadata":{"title":"atomicStore(_:at:ordering:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicStore","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicStoreOrdering","preciseIdentifier":"s:7Atomics19AtomicStoreOrderingV"},{"kind":"text","text":")"}],"role":"symbol","required":true,"modules":[{"name":"Atomics"}],"externalID":"s:7Atomics13AtomicStorageP11atomicStore_2at8orderingy5ValueQzn_SpyxGAA0bE8OrderingVtFZ","symbolKind":"method","roleHeading":"Type Method"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics":{"url":"\/documentation\/atomics","kind":"symbol","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","title":"Atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStoreOrdering":{"url":"\/documentation\/atomics\/atomicstoreordering","role":"symbol","title":"AtomicStoreOrdering","navigatorTitle":[{"text":"AtomicStoreOrdering","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStoreOrdering","type":"topic","abstract":[{"text":"Specifies the memory ordering semantics of an atomic store operation.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicStoreOrdering","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage/atomicStore(_:at:ordering:)":{"title":"atomicStore(_:at:ordering:)","url":"\/documentation\/atomics\/atomicstorage\/atomicstore(_:at:ordering:)","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicStore","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","kind":"typeIdentifier","preciseIdentifier":"s:Sp"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicStoreOrdering","preciseIdentifier":"s:7Atomics19AtomicStoreOrderingV"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"text":"Atomically sets the value referenced by ","type":"text"},{"type":"codeVoice","code":"pointer"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"desired"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"applying the specified memory ordering.","type":"text"}],"required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/atomicStore(_:at:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicStorage","kind":"identifier"}],"navigatorTitle":[{"text":"AtomicStorage","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage","url":"\/documentation\/atomics\/atomicstorage","title":"AtomicStorage","abstract":[{"type":"text","text":"The storage representation for an atomic value, providing pointer-based"},{"text":" ","type":"text"},{"text":"atomic operations. This is a low-level implementation detail of atomic","type":"text"},{"text":" ","type":"text"},{"text":"types; instead of directly handling conforming types, it is usually better","type":"text"},{"text":" ","type":"text"},{"text":"to use the ","type":"text"},{"code":"UnsafeAtomic","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ManagedAtomic","type":"codeVoice"},{"text":" generics â€“ these provide more","type":"text"},{"text":" ","type":"text"},{"text":"convenient and safer interfaces while also ensuring that the storage is","type":"text"},{"text":" ","type":"text"},{"text":"correctly constructed and destroyed.","type":"text"}]}}}