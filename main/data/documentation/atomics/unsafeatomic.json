{"variants":[{"paths":["\/documentation\/atomics\/unsafeatomic"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/s8SendableP"],"kind":"relationships"}],"abstract":[{"type":"text","text":"An unsafe reference type holding an atomic value, requiring manual memory"},{"type":"text","text":" "},{"type":"text","text":"management of the underlying storage representation."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/init(at:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/bitwiseAndThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/bitwiseOrThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/bitwiseXorThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/destroy()","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/exchange(_:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/load(ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseAnd(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseOr(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseXor(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalAnd(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalOr(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalXor(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingDecrement(by:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingIncrement(by:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/logicalAndThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/logicalOrThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/logicalXorThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/store(_:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrement(by:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrementThenLoad(by:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrement(by:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrementThenLoad(by:ordering:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/Storage"]},{"title":"Type Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/create(_:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeAtomic","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AtomicValue","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicValue","preciseIdentifier":"s:7Atomics11AtomicValueP"}]}],"kind":"declarations"}],"kind":"symbol","sections":[],"metadata":{"role":"symbol","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeAtomic","kind":"identifier"}],"title":"UnsafeAtomic","roleHeading":"Structure","externalID":"s:7Atomics12UnsafeAtomicV","navigatorTitle":[{"text":"UnsafeAtomic","kind":"identifier"}],"modules":[{"name":"Atomics"}]},"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/bitwiseOrThenLoad(with:ordering:)":{"title":"bitwiseOrThenLoad(with:ordering:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/bitwiseorthenload(with:ordering:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/bitwiseOrThenLoad(with:ordering:)","role":"symbol","abstract":[{"text":"Perform an atomic bitwise OR operation and return the new value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bitwiseOrThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenWrappingDecrement(by:ordering:)":{"abstract":[{"type":"text","text":"Perform an atomic wrapping subtract operation and return the original value, applying"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenWrappingDecrement","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/loadthenwrappingdecrement(by:ordering:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingDecrement(by:ordering:)","title":"loadThenWrappingDecrement(by:ordering:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/bitwiseAndThenLoad(with:ordering:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/bitwiseAndThenLoad(with:ordering:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","type":"topic","url":"\/documentation\/atomics\/unsafeatomic\/bitwiseandthenload(with:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bitwiseAndThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"abstract":[{"text":"Perform an atomic bitwise AND operation and return the new value, applying","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"role":"symbol","title":"bitwiseAndThenLoad(with:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/wrappingIncrementThenLoad(by:ordering:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrementThenLoad(by:ordering:)","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}]},"title":"wrappingIncrementThenLoad(by:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/wrappingincrementthenload(by:ordering:)","abstract":[{"text":"Perform an atomic wrapping add operation and return the new value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappingIncrementThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/bitwiseXorThenLoad(with:ordering:)":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Perform an atomic bitwise XOR operation and return the new value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/bitwiseXorThenLoad(with:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/bitwisexorthenload(with:ordering:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bitwiseXorThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"title":"bitwiseXorThenLoad(with:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenLogicalXor(with:ordering:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenLogicalXor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalXor(with:ordering:)","type":"topic","abstract":[{"type":"text","text":"Perform an atomic logical XOR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"url":"\/documentation\/atomics\/unsafeatomic\/loadthenlogicalxor(with:ordering:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Bool"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"loadThenLogicalXor(with:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/init(at:)":{"abstract":[{"text":"Initialize an unsafe atomic value that uses the supplied memory location","type":"text"},{"text":" ","type":"text"},{"text":"for storage. The storage location must already be initialized to","type":"text"},{"text":" ","type":"text"},{"text":"represent a valid atomic value.","type":"text"}],"title":"init(at:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/init(at:)","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/init(at:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics12UnsafeAtomicV","text":"UnsafeAtomic"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Storage"},{"kind":"text","text":">)"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic":{"title":"UnsafeAtomic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnsafeAtomic"}],"url":"\/documentation\/atomics\/unsafeatomic","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic","role":"symbol","abstract":[{"text":"An unsafe reference type holding an atomic value, requiring manual memory","type":"text"},{"text":" ","type":"text"},{"text":"management of the underlying storage representation.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeAtomic"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"Perform an atomic weak compare and exchange operation on the current","type":"text"},{"text":" ","type":"text"},{"text":"value, applying the specified success\/failure memory orderings. This","type":"text"},{"text":" ","type":"text"},{"text":"compare-exchange variant is allowed to spuriously fail; it is designed to","type":"text"},{"text":" ","type":"text"},{"text":"be called in a loop until it indicates a successful exchange has happened.","type":"text"}],"kind":"symbol","type":"topic","title":"weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","url":"\/documentation\/atomics\/unsafeatomic\/weakcompareexchange(expected:desired:successordering:failureordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"weakCompareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"failureOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenLogicalAnd(with:ordering:)":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"Perform an atomic logical AND operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"kind":"symbol","type":"topic","title":"loadThenLogicalAnd(with:ordering:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalAnd(with:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/loadthenlogicaland(with:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenLogicalAnd","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/destroy()":{"url":"\/documentation\/atomics\/unsafeatomic\/destroy()","title":"destroy()","abstract":[{"text":"Disposes of the current value of the storage location corresponding to","type":"text"},{"text":" ","type":"text"},{"text":"this unsafe atomic value, then deinitializes and deallocates the storage.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/destroy()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"destroy","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/wrappingDecrementThenLoad(by:ordering:)":{"role":"symbol","type":"topic","url":"\/documentation\/atomics\/unsafeatomic\/wrappingdecrementthenload(by:ordering:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}]},"title":"wrappingDecrementThenLoad(by:ordering:)","abstract":[{"type":"text","text":"Perform an atomic wrapping subtract operation and return the new value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrementThenLoad(by:ordering:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappingDecrementThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/wrappingDecrement(by:ordering:)":{"abstract":[{"type":"text","text":"Perform an atomic wrapping decrement operation applying the"},{"type":"text","text":" "},{"type":"text","text":"specified memory ordering."}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappingDecrement","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/atomics\/unsafeatomic\/wrappingdecrement(by:ordering:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrement(by:ordering:)","role":"symbol","kind":"symbol","title":"wrappingDecrement(by:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenWrappingIncrement(by:ordering:)":{"abstract":[{"text":"Perform an atomic wrapping add operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"loadThenWrappingIncrement","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"type":"topic","title":"loadThenWrappingIncrement(by:ordering:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingIncrement(by:ordering:)","kind":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/loadthenwrappingincrement(by:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenBitwiseAnd(with:ordering:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseAnd(with:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/loadthenbitwiseand(with:ordering:)","title":"loadThenBitwiseAnd(with:ordering:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadThenBitwiseAnd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"text":"Perform an atomic bitwise AND operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/compareExchange(expected:desired:successOrdering:failureOrdering:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","url":"\/documentation\/atomics\/unsafeatomic\/compareexchange(expected:desired:successordering:failureordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"successOrdering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","kind":"typeIdentifier","text":"AtomicLoadOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":"."}]},"type":"topic","abstract":[{"type":"text","text":"Perform an atomic compare and exchange operation on the current value,"},{"type":"text","text":" "},{"type":"text","text":"applying the specified success\/failure memory orderings."}],"title":"compareExchange(expected:desired:successOrdering:failureOrdering:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/logicalOrThenLoad(with:ordering:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"logicalOrThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"url":"\/documentation\/atomics\/unsafeatomic\/logicalorthenload(with:ordering:)","kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"Perform an atomic logical OR operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the specified memory ordering."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/logicalOrThenLoad(with:ordering:)","title":"logicalOrThenLoad(with:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/compareExchange(expected:desired:ordering:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/compareexchange(expected:desired:ordering:)","type":"topic","role":"symbol","title":"compareExchange(expected:desired:ordering:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> (exchanged","kind":"text"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", original","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Perform an atomic compare and exchange operation on the current value,","type":"text"},{"text":" ","type":"text"},{"text":"applying the specified memory ordering.","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/logicalAndThenLoad(with:ordering:)":{"url":"\/documentation\/atomics\/unsafeatomic\/logicalandthenload(with:ordering:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"logicalAndThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/logicalAndThenLoad(with:ordering:)","abstract":[{"text":"Perform an atomic logical AND operation and return the original value, applying","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"title":"logicalAndThenLoad(with:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/exchange(_:ordering:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"url":"\/documentation\/atomics\/unsafeatomic\/exchange(_:ordering:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/exchange(_:ordering:)","title":"exchange(_:ordering:)","role":"symbol","abstract":[{"type":"text","text":"Atomically sets the current value to "},{"type":"codeVoice","code":"desired"},{"type":"text","text":" and returns the original"},{"type":"text","text":" "},{"type":"text","text":"value, applying the specified memory ordering."}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AtomicValue","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenBitwiseOr(with:ordering:)":{"role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/loadthenbitwiseor(with:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseOr(with:ordering:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"loadThenBitwiseOr(with:ordering:)","abstract":[{"type":"text","text":"Perform an atomic bitwise OR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadThenBitwiseOr"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/create(_:)":{"abstract":[{"text":"Create a new ","type":"text"},{"type":"codeVoice","code":"UnsafeAtomic"},{"text":" value with the supplied initial value by","type":"text"},{"text":" ","type":"text"},{"text":"dynamically allocating storage for it.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"create"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicV","kind":"typeIdentifier","text":"UnsafeAtomic"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/create(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/create(_:)","title":"create(_:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenBitwiseXor(with:ordering:)":{"url":"\/documentation\/atomics\/unsafeatomic\/loadthenbitwisexor(with:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseXor(with:ordering:)","title":"loadThenBitwiseXor(with:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenBitwiseXor","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Perform an atomic bitwise XOR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}]},"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicValue":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicValue"}],"url":"\/documentation\/atomics\/atomicvalue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicValue"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicValue","type":"topic","title":"AtomicValue","abstract":[{"type":"text","text":"A type that supports atomic operations through a separate atomic storage"},{"type":"text","text":" "},{"type":"text","text":"representation."}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/load(ordering:)":{"title":"load(ordering:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/load(ordering:)","abstract":[{"type":"text","text":"Atomically loads and returns the current value, applying the specified"},{"type":"text","text":" "},{"type":"text","text":"memory ordering."}],"kind":"symbol","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/atomics\/unsafeatomic\/load(ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"kind":"text","text":"("},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP","title":"Swift.Sendable"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenLogicalOr(with:ordering:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalOr(with:ordering:)","role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/loadthenlogicalor(with:ordering:)","abstract":[{"type":"text","text":"Perform an atomic logical OR operation and return the original value, applying"},{"type":"text","text":" "},{"text":"the specified memory ordering.","type":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}]},"title":"loadThenLogicalOr(with:ordering:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenLogicalOr","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/store(_:ordering:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/store(_:ordering:)","type":"topic","title":"store(_:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"store"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics19AtomicStoreOrderingV","kind":"typeIdentifier","text":"AtomicStoreOrdering"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Atomically sets the current value to "},{"code":"desired","type":"codeVoice"},{"type":"text","text":", applying the specified"},{"type":"text","text":" "},{"type":"text","text":"memory ordering."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":"."}]},"url":"\/documentation\/atomics\/unsafeatomic\/store(_:ordering:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/logicalXorThenLoad(with:ordering:)":{"title":"logicalXorThenLoad(with:ordering:)","abstract":[{"type":"text","text":"Perform an atomic logical XOR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"logicalXorThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/logicalXorThenLoad(with:ordering:)","kind":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/logicalxorthenload(with:ordering:)","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/Storage":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Storage"}],"navigatorTitle":[{"text":"Storage","kind":"identifier"}],"abstract":[],"title":"UnsafeAtomic.Storage","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/Storage","type":"topic","role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/storage","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"url":"\/documentation\/atomics","kind":"symbol","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","title":"Atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/wrappingIncrement(by:ordering:)":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappingIncrement"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrement(by:ordering:)","title":"wrappingIncrement(by:ordering:)","abstract":[{"text":"Perform an atomic wrapping increment operation applying the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"specified memory ordering."}],"conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/atomics\/unsafeatomic\/wrappingincrement(by:ordering:)"}}}