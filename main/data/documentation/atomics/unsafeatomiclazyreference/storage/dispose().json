{"metadata":{"modules":[{"name":"Atomics"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispose"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV","kind":"typeIdentifier","text":"UnsafeAtomicLazyReference"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Instance"},{"kind":"text","text":">."},{"preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV5Valuea","kind":"typeIdentifier","text":"Value"}],"externalID":"s:7Atomics25UnsafeAtomicLazyReferenceV7StorageV7disposexSgyF","roleHeading":"Instance Method","role":"symbol","title":"dispose()","symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispose"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"UnsafeAtomicLazyReference","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Instance"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV5Valuea","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Value"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This call prevents resource leaks when destroying the storage"},{"type":"text","text":" "},{"type":"text","text":"representation of certain "},{"code":"AtomicValue","type":"codeVoice"},{"text":" types. (In particular, ones","type":"text"},{"text":" ","type":"text"},{"text":"that model strong references.)","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Note: This is not an atomic operation. Logically, it implements a","type":"text"},{"text":" ","type":"text"},{"text":"custom destructor for the underlying non-copiable value.","type":"text"}]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage\/dispose()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Prepare this atomic storage value for deinitialization, extracting the"},{"type":"text","text":" "},{"type":"text","text":"logical value it represents. This invalidates this atomic storage; you"},{"type":"text","text":" "},{"type":"text","text":"must not perform any operations on it after this call (except for"},{"type":"text","text":" "},{"type":"text","text":"deinitialization)."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/unsafeatomiclazyreference\/storage\/dispose()"]}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference/Storage":{"navigatorTitle":[{"kind":"identifier","text":"Storage"}],"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage","type":"topic","title":"UnsafeAtomicLazyReference.Storage","abstract":[{"type":"text","text":"The storage representation for an atomic lazy reference value."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Storage"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"url":"\/documentation\/atomics","kind":"symbol","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","title":"Atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference/Value":{"type":"topic","abstract":[{"type":"text","text":"The value logically stored in an atomic lazy reference value."}],"title":"UnsafeAtomicLazyReference.Value","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Value","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Value","url":"\/documentation\/atomics\/unsafeatomiclazyreference\/value"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference/Storage/dispose()":{"url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage\/dispose()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage\/dispose()","type":"topic","title":"dispose()","abstract":[{"type":"text","text":"Prepare this atomic storage value for deinitialization, extracting the"},{"type":"text","text":" "},{"type":"text","text":"logical value it represents. This invalidates this atomic storage; you"},{"type":"text","text":" "},{"type":"text","text":"must not perform any operations on it after this call (except for"},{"type":"text","text":" "},{"type":"text","text":"deinitialization)."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispose"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV","kind":"typeIdentifier","text":"UnsafeAtomicLazyReference"},{"kind":"text","text":"<"},{"text":"Instance","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV5Valuea"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference","url":"\/documentation\/atomics\/unsafeatomiclazyreference","title":"UnsafeAtomicLazyReference","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeAtomicLazyReference"}],"role":"symbol","navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"text":" ","type":"text"},{"text":"strong reference, requiring manual memory management of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"underlying storage representation."}]}}}