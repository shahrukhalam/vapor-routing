{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp2\/niohttp2handler"]}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/s28CustomDebugStringConvertibleP","doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP"],"kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTP2Handler","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" takes a series of bytes and turns them into a sequence of "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2Frame","type":"reference","isActive":true},{"type":"text","text":" objects."},{"type":"text","text":" "},{"type":"text","text":"This type allows implementing a single "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" that runs a complete HTTP\/2 connection, and"},{"type":"text","text":" "},{"type":"text","text":"doesnâ€™t deal with managing stream state."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Most users should combine this with a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer"},{"type":"text","text":" to get an easier programming model."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler","interfaceLanguage":"swift"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/init(mode:initialSettings:headerBlockValidation:contentLengthValidation:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/init(mode:initialSettings:headerBlockValidation:contentLengthValidation:maximumSequentialEmptyDataFrames:maximumBufferedControlFrames:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelActive(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelInactive(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelReadComplete(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelWritabilityChanged(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/flush(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/handlerAdded(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/handlerRemoved(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/OutboundOut"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ParserMode","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ValidationState"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/CustomDebugStringConvertible-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/CustomStringConvertible-Implementations"],"generated":true}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler","isActive":true},{"type":"text","text":" implements the HTTP\/2 protocol for a single connection."}],"metadata":{"symbolKind":"class","modules":[{"name":"NIOHTTP2"}],"role":"symbol","title":"NIOHTTP2Handler","externalID":"s:8NIOHTTP20A7HandlerC","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTP2Handler"}],"navigatorTitle":[{"kind":"identifier","text":"NIOHTTP2Handler"}],"roleHeading":"Class"},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/flush(context:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/flush(context:)","abstract":[{"type":"text","text":"Called to request that the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" flush all pending writes. The flush operation will try to flush out all previous written messages"},{"type":"text","text":" "},{"type":"text","text":"that are pending."}],"url":"\/documentation\/niohttp2\/niohttp2handler\/flush(context:)","title":"flush(context:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flush"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/OutboundOut":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"title":"NIOHTTP2Handler.OutboundOut","url":"\/documentation\/niohttp2\/niohttp2handler\/outboundout","abstract":[{"type":"text","text":"The type of the outbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/OutboundOut","kind":"symbol","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2Frame":{"role":"symbol","title":"HTTP2Frame","type":"topic","abstract":[{"type":"text","text":"A representation of a single HTTP\/2 frame."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2Frame","kind":"symbol","url":"\/documentation\/niohttp2\/http2frame","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2Frame"}],"navigatorTitle":[{"kind":"identifier","text":"HTTP2Frame"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/ChannelInboundHandler-Implementations":{"type":"topic","url":"\/documentation\/niohttp2\/niohttp2handler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","kind":"article","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ChannelInboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/InboundOut":{"abstract":[{"text":"The type of the inbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/InboundOut","title":"NIOHTTP2Handler.InboundOut","kind":"symbol","url":"\/documentation\/niohttp2\/niohttp2handler\/inboundout"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"url":"\/documentation\/niocore\/channelinboundhandler","type":"topic","title":"ChannelInboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/handlerRemoved(context:)":{"role":"symbol","abstract":[{"text":"Called when this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" is removed from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niohttp2\/niohttp2handler\/handlerremoved(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","title":"handlerRemoved(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/handlerRemoved(context:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/init(mode:initialSettings:headerBlockValidation:contentLengthValidation:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/init(mode:initialSettings:headerBlockValidation:contentLengthValidation:)","role":"symbol","kind":"symbol","abstract":[{"text":"Constructs a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler","type":"reference"},{"text":".","type":"text"}],"fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOHTTP2Handler","preciseIdentifier":"s:8NIOHTTP20A7HandlerC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ParserMode","preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"initialSettings","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTP2Settings","preciseIdentifier":"s:8NIOHTTP213HTTP2Settingsa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"headerBlockValidation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOHTTP2Handler","preciseIdentifier":"s:8NIOHTTP20A7HandlerC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ValidationState","preciseIdentifier":"s:8NIOHTTP20A7HandlerC15ValidationStateO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"contentLengthValidation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOHTTP2Handler","preciseIdentifier":"s:8NIOHTTP20A7HandlerC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ValidationState","preciseIdentifier":"s:8NIOHTTP20A7HandlerC15ValidationStateO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/niohttp2\/niohttp2handler\/init(mode:initialsettings:headerblockvalidation:contentlengthvalidation:)","title":"init(mode:initialSettings:headerBlockValidation:contentLengthValidation:)"},"doc://co.pointfree.VaporRouting/s23CustomStringConvertibleP":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/write(context:data:promise:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/write(context:data:promise:)","title":"write(context:data:promise:)","kind":"symbol","abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.flush"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"type":"text","text":" is called."}],"type":"topic","url":"\/documentation\/niohttp2\/niohttp2handler\/write(context:data:promise:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2StreamMultiplexer":{"kind":"symbol","abstract":[{"type":"text","text":"A channel handler that creates a child channel for each HTTP\/2 stream."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer","type":"topic","title":"HTTP2StreamMultiplexer","url":"\/documentation\/niohttp2\/http2streammultiplexer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTP2StreamMultiplexer"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2StreamMultiplexer"}]},"doc://co.pointfree.VaporRouting/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/s28CustomDebugStringConvertibleP","type":"unresolvable","title":"Swift.CustomDebugStringConvertible"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/OutboundIn":{"abstract":[{"text":"The type of the outbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/OutboundIn","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"url":"\/documentation\/niohttp2\/niohttp2handler\/outboundin","title":"NIOHTTP2Handler.OutboundIn"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}],"abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"ChannelOutboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"url":"\/documentation\/niocore\/channeloutboundhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/channelInactive(context:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInactive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelInactive(context:)","role":"symbol","abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has become inactive and is no longer able to send and receive data`."}],"type":"topic","title":"channelInactive(context:)","url":"\/documentation\/niohttp2\/niohttp2handler\/channelinactive(context:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/init(mode:initialSettings:headerBlockValidation:contentLengthValidation:maximumSequentialEmptyDataFrames:maximumBufferedControlFrames:)":{"role":"symbol","type":"topic","url":"\/documentation\/niohttp2\/niohttp2handler\/init(mode:initialsettings:headerblockvalidation:contentlengthvalidation:maximumsequentialemptydataframes:maximumbufferedcontrolframes:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOHTTP2Handler","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP20A7HandlerC"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO","kind":"typeIdentifier","text":"ParserMode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initialSettings"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP213HTTP2Settingsa","kind":"typeIdentifier","text":"HTTP2Settings"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headerBlockValidation"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP20A7HandlerC","kind":"typeIdentifier","text":"NIOHTTP2Handler"},{"kind":"text","text":"."},{"preciseIdentifier":"s:8NIOHTTP20A7HandlerC15ValidationStateO","kind":"typeIdentifier","text":"ValidationState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"contentLengthValidation"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP20A7HandlerC","kind":"typeIdentifier","text":"NIOHTTP2Handler"},{"kind":"text","text":"."},{"preciseIdentifier":"s:8NIOHTTP20A7HandlerC15ValidationStateO","kind":"typeIdentifier","text":"ValidationState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maximumSequentialEmptyDataFrames"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maximumBufferedControlFrames"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/init(mode:initialSettings:headerBlockValidation:contentLengthValidation:maximumSequentialEmptyDataFrames:maximumBufferedControlFrames:)","title":"init(mode:initialSettings:headerBlockValidation:contentLengthValidation:maximumSequentialEmptyDataFrames:maximumBufferedControlFrames:)","kind":"symbol","abstract":[{"text":"Constructs a ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler","isActive":true,"type":"reference"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/CustomStringConvertible-Implementations":{"kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/CustomStringConvertible-Implementations","type":"topic","url":"\/documentation\/niohttp2\/niohttp2handler\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/InboundIn":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/InboundIn","type":"topic","url":"\/documentation\/niohttp2\/niohttp2handler\/inboundin","abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"role":"symbol","title":"NIOHTTP2Handler.InboundIn","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/CustomDebugStringConvertible-Implementations":{"url":"\/documentation\/niohttp2\/niohttp2handler\/customdebugstringconvertible-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/CustomDebugStringConvertible-Implementations","kind":"article","type":"topic","title":"CustomDebugStringConvertible Implementations","abstract":[],"role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler":{"navigatorTitle":[{"kind":"identifier","text":"NIOHTTP2Handler"}],"url":"\/documentation\/niohttp2\/niohttp2handler","title":"NIOHTTP2Handler","abstract":[{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler","type":"reference"},{"text":" implements the HTTP\/2 protocol for a single connection.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTP2Handler"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/channelReadComplete(context:)":{"title":"channelReadComplete(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelReadComplete(context:)","type":"topic","role":"symbol","abstract":[{"text":"Called when the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" has completed its current read loop, either because no more data is available to read from the transport at this time, or because the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" needs to yield to the event loop to process other I\/O events for other ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s.","type":"text"},{"text":" ","type":"text"},{"text":"If ","type":"text"},{"code":"ChannelOptions.autoRead","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" no further read attempt will be made until ","type":"text"},{"code":"ChannelHandlerContext.read","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"Channel.read","type":"codeVoice"},{"text":" is explicitly called.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelReadComplete","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}],"url":"\/documentation\/niohttp2\/niohttp2handler\/channelreadcomplete(context:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/ChannelOutboundHandler-Implementations":{"role":"collectionGroup","url":"\/documentation\/niohttp2\/niohttp2handler\/channeloutboundhandler-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ChannelOutboundHandler-Implementations","title":"ChannelOutboundHandler Implementations","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/ValidationState":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ValidationState","url":"\/documentation\/niohttp2\/niohttp2handler\/validationstate","kind":"symbol","abstract":[{"text":"Whether a given operation has validation enabled or not.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ValidationState"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidationState"}],"title":"NIOHTTP2Handler.ValidationState","role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/ParserMode":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/ParserMode","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParserMode"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserMode"}],"role":"symbol","abstract":[{"type":"text","text":"The mode for this parser to operate in: client or server."}],"title":"NIOHTTP2Handler.ParserMode","url":"\/documentation\/niohttp2\/niohttp2handler\/parsermode"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2":{"url":"\/documentation\/niohttp2","kind":"symbol","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","title":"NIOHTTP2"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/channelRead(context:data:)":{"abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelRead(context:data:)","url":"\/documentation\/niohttp2\/niohttp2handler\/channelread(context:data:)","title":"channelRead(context:data:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/handlerAdded(context:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/handlerAdded(context:)","kind":"symbol","title":"handlerAdded(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerAdded"},{"kind":"text","text":"("},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/niohttp2\/niohttp2handler\/handleradded(context:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Called when this "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" is added to the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/channelWritabilityChanged(context:)":{"role":"symbol","abstract":[{"text":"The writability state of the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" has changed, either because it has buffered more data than the writability high water mark, or because the amount of buffered data has dropped below the writability low water mark.","type":"text"},{"text":" ","type":"text"},{"text":"You can check the state with ","type":"text"},{"code":"Channel.isWritable","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelWritabilityChanged"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelWritabilityChanged(context:)","url":"\/documentation\/niohttp2\/niohttp2handler\/channelwritabilitychanged(context:)","title":"channelWritabilityChanged(context:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/NIOHTTP2Handler/channelActive(context:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelActive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/NIOHTTP2Handler\/channelActive(context:)","url":"\/documentation\/niohttp2\/niohttp2handler\/channelactive(context:)","title":"channelActive(context:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has become active, and is able to send and receive data."}],"kind":"symbol"}}}