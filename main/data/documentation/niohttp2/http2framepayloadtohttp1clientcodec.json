{"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec"},"metadata":{"roleHeading":"Class","navigatorTitle":[{"text":"HTTP2FramePayloadToHTTP1ClientCodec","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2FramePayloadToHTTP1ClientCodec","kind":"identifier"}],"externalID":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC","title":"HTTP2FramePayloadToHTTP1ClientCodec","symbolKind":"class","role":"symbol","modules":[{"name":"NIOHTTP2"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2FramePayloadToHTTP1ClientCodec","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This channel handler should be used alongside the "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer","type":"reference"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"help provide a HTTP\/1.1-like abstraction on top of a HTTP\/2 multiplexed"},{"type":"text","text":" "},{"type":"text","text":"connection."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This handler uses "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2Frame\/FramePayload"},{"type":"text","text":" as its HTTP\/2 currency type."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,","type":"text"},{"text":" ","type":"text"},{"text":"and vice versa, for use on the client side.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/init(httpProtocol:normalizeHTTPHeaders:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/write(context:data:promise:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/OutboundOut"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/HTTPProtocol"],"title":"Enumerations"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/ChannelOutboundHandler-Implementations"],"title":"Default Implementations","generated":true}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2":{"url":"\/documentation\/niohttp2","kind":"symbol","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","title":"NIOHTTP2"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/InboundOut":{"role":"symbol","abstract":[{"text":"The type of the inbound data which will be forwarded to the next ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"InboundOut","kind":"identifier"}],"title":"HTTP2FramePayloadToHTTP1ClientCodec.InboundOut","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/inboundout","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundOut","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/InboundOut","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"url":"\/documentation\/niocore\/channelinboundhandler","type":"topic","title":"ChannelInboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/write(context:data:promise:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/write(context:data:promise:)","role":"symbol","title":"write(context:data:promise:)","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/write(context:data:promise:)","kind":"symbol","abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"text":" ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":". Those are then ready to be flushed to the actual ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" when","type":"text"},{"text":" ","type":"text"},{"code":"Channel.flush","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ChannelHandlerContext.flush","type":"codeVoice"},{"text":" is called.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"url":"\/documentation\/niocore\/channelhandler","title":"ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/InboundIn":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/InboundIn","role":"symbol","title":"HTTP2FramePayloadToHTTP1ClientCodec.InboundIn","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/inboundin","kind":"symbol","abstract":[{"text":"The type of the inbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}],"abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"ChannelOutboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"url":"\/documentation\/niocore\/channeloutboundhandler"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2Frame/FramePayload":{"role":"symbol","title":"HTTP2Frame.FramePayload","type":"topic","abstract":[{"type":"text","text":"Frame-type-specific payload data."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2Frame\/FramePayload","kind":"symbol","url":"\/documentation\/niohttp2\/http2frame\/framepayload","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"FramePayload"}],"navigatorTitle":[{"kind":"identifier","text":"FramePayload"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/ChannelOutboundHandler-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/ChannelOutboundHandler-Implementations","abstract":[],"url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/channeloutboundhandler-implementations","kind":"article","type":"topic","title":"ChannelOutboundHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec":{"kind":"symbol","abstract":[{"type":"text","text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,"},{"type":"text","text":" "},{"type":"text","text":"and vice versa, for use on the client side."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec","type":"topic","title":"HTTP2FramePayloadToHTTP1ClientCodec","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTP2FramePayloadToHTTP1ClientCodec"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2FramePayloadToHTTP1ClientCodec"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/ChannelInboundHandler-Implementations":{"title":"ChannelInboundHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/ChannelInboundHandler-Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/channelinboundhandler-implementations","type":"topic","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/ChannelHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/ChannelHandler-Implementations","role":"collectionGroup","title":"ChannelHandler Implementations","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/channelhandler-implementations","kind":"article","abstract":[],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/OutboundIn":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/OutboundIn","role":"symbol","title":"HTTP2FramePayloadToHTTP1ClientCodec.OutboundIn","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/outboundin","kind":"symbol","abstract":[{"text":"The type of the outbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/channelRead(context:data:)":{"role":"symbol","abstract":[{"text":"Called when some data has been read from the remote peer.","type":"text"}],"url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/channelread(context:data:)","type":"topic","title":"channelRead(context:data:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/channelRead(context:data:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/OutboundOut":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/OutboundOut","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"OutboundOut"}],"title":"HTTP2FramePayloadToHTTP1ClientCodec.OutboundOut","type":"topic","abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundOut"}],"url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/outboundout"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/HTTPProtocol":{"url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/httpprotocol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPProtocol","kind":"identifier"}],"abstract":[{"text":"The HTTP protocol scheme being used on this connection.","type":"text"}],"title":"HTTP2FramePayloadToHTTP1ClientCodec.HTTPProtocol","navigatorTitle":[{"text":"HTTPProtocol","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/HTTPProtocol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2StreamMultiplexer":{"kind":"symbol","abstract":[{"type":"text","text":"A channel handler that creates a child channel for each HTTP\/2 stream."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer","type":"topic","title":"HTTP2StreamMultiplexer","url":"\/documentation\/niohttp2\/http2streammultiplexer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTP2StreamMultiplexer"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2StreamMultiplexer"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/init(httpProtocol:normalizeHTTPHeaders:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/init(httpProtocol:normalizeHTTPHeaders:)","kind":"symbol","title":"init(httpProtocol:normalizeHTTPHeaders:)","type":"topic","abstract":[{"text":"Initializes a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec","type":"reference"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"httpProtocol"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC","kind":"typeIdentifier","text":"HTTP2FramePayloadToHTTP1ClientCodec"},{"kind":"text","text":"."},{"preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC12HTTPProtocolO","kind":"typeIdentifier","text":"HTTPProtocol"},{"kind":"text","text":", "},{"kind":"externalParam","text":"normalizeHTTPHeaders"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/init(httpprotocol:normalizehttpheaders:)"}}}