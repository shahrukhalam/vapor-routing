{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","symbolKind":"class","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"externalID":"s:11NIOEmbedded15EmbeddedChannelC","modules":[{"name":"NIOEmbedded"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"title":"EmbeddedChannel"},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable"]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioembedded\/embeddedchannel"]}],"sections":[],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError"]},{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handler:loop:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handlers:loop:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/allocator","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/closeFuture","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/embeddedEventLoop","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/eventLoop","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isActive","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isWritable","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/localAddress","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/parent","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/pipeline","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/remoteAddress"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/bind(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/connect(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish(acceptAlreadyClosed:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/getOption(_:)-6dgj0","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readInbound(as:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readOutbound(as:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/setOption(_:value:)-5j5cw","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/throwIfErrorCaught()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeInbound(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeOutbound(_:)"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/BufferState","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/ChannelOutboundInvoker-Implementations"]}],"abstract":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" is in unit tests when you want to feed the inbound events","type":"text"},{"text":" ","type":"text"},{"text":"and check the outbound events manually.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"languages":["swift"]}]},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Please remember to call ","type":"text"},{"code":"finish()","type":"codeVoice"},{"text":" when you are no longer using this","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"To feed events through an ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" use","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel.writeInbound","type":"codeVoice"},{"text":" which accepts data of any type. It will then","type":"text"},{"text":" ","type":"text"},{"text":"forward that data through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" and the subsequent","type":"text"},{"text":" ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" will receive it through the usual ","type":"text"},{"code":"channelRead","type":"codeVoice"},{"text":" ","type":"text"},{"text":"event. The user is responsible for making sure the first","type":"text"},{"text":" ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" expects data of that type.","type":"text"}]},{"type":"paragraph","inlineContent":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" automatically collects arriving outbound data and makes it","type":"text"},{"text":" ","type":"text"},{"text":"available one-by-one through ","type":"text"},{"code":"readOutbound","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is currently only compatible with","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedEventLoop","type":"codeVoice"},{"text":"s and cannot be used with ","type":"text"},{"code":"SelectableEventLoop","type":"codeVoice"},{"text":"s from","type":"text"},{"text":" ","type":"text"},{"text":"for example ","type":"text"},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"text":".","type":"text"}]}]},{"type":"aside","style":"warning","name":"Warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unlike other "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s, "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"text":"is not thread-safe","type":"text"}]},{"type":"text","text":". This"},{"type":"text","text":" "},{"type":"text","text":"is because it is intended to be run in the thread that instantiated it. Users are"},{"type":"text","text":" "},{"type":"text","text":"responsible for ensuring they never call into an "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" in an"},{"type":"text","text":" "},{"type":"text","text":"unsynchronized fashion. "},{"type":"codeVoice","code":"EmbeddedEventLoop"},{"type":"text","text":"s notes also apply as"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" uses an "},{"type":"codeVoice","code":"EmbeddedEventLoop"},{"type":"text","text":" as its "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."}]}]}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/setOption(_:value:)-5j5cw":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/setOption(_:value:)-5j5cw","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"role":"symbol","kind":"symbol","type":"topic","title":"setOption(_:value:)","abstract":[],"url":"\/documentation\/nioembedded\/embeddedchannel\/setoption(_:value:)-5j5cw"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker":{"navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundInvoker"}],"title":"ChannelOutboundInvoker","url":"\/documentation\/niocore\/channeloutboundinvoker","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","abstract":[{"text":"Allows users to invoke an “outbound” operation related to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" that will flow through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" until","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"it will finally be executed by the the "},{"code":"ChannelCore","type":"codeVoice"},{"type":"text","text":" implementation."}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundInvoker"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/pipeline":{"url":"\/documentation\/nioembedded\/embeddedchannel\/pipeline","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/pipeline","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"pipeline"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"}],"role":"symbol","title":"pipeline","type":"topic","kind":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/finish(acceptAlreadyClosed:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"finish","kind":"identifier"},{"text":"(","kind":"text"},{"text":"acceptAlreadyClosed","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC","text":"EmbeddedChannel"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC13LeftOverStateO","text":"LeftOverState"}],"type":"topic","title":"finish(acceptAlreadyClosed:)","role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/finish(acceptalreadyclosed:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish(acceptAlreadyClosed:)","abstract":[{"text":"Synchronously closes the ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/init(handler:loop:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handler:loop:)","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"loop","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC","text":"EmbeddedEventLoop","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol","type":"topic","title":"init(handler:loop:)","abstract":[{"text":"Create a new instance.","type":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/init(handler:loop:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/getOption(_:)-6dgj0":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/getOption(_:)-6dgj0","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","kind":"symbol","type":"topic","title":"getOption(_:)","abstract":[],"url":"\/documentation\/nioembedded\/embeddedchannel\/getoption(_:)-6dgj0"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/writeInbound(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeInbound(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeInbound","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC","text":"EmbeddedChannel","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC11BufferStateO","text":"BufferState","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","type":"topic","title":"writeInbound(_:)","abstract":[],"url":"\/documentation\/nioembedded\/embeddedchannel\/writeinbound(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/embeddedEventLoop":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/embeddedEventLoop","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"embeddedEventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EmbeddedEventLoop","kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC"}],"role":"symbol","kind":"symbol","type":"topic","title":"embeddedEventLoop","abstract":[{"text":"Returns the ","type":"text"},{"code":"EmbeddedEventLoop","type":"codeVoice"},{"text":" that this ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" uses. This will return the same instance as","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel.eventLoop","type":"codeVoice"},{"text":" but as the concrete ","type":"text"},{"code":"EmbeddedEventLoop","type":"codeVoice"},{"text":" rather than as ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" existential.","type":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/embeddedeventloop"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/connect(to:promise:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/connect(to:promise:)","abstract":[{"type":"text","text":"Fires the (outbound) "},{"type":"codeVoice","code":"connect"},{"type":"text","text":" event through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". If the event hits the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" "},{"type":"text","text":"which happens when it travels the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" all the way to the front, this will also set the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"remoteAddress"},{"type":"text","text":"."}],"url":"\/documentation\/nioembedded\/embeddedchannel\/connect(to:promise:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"kind":"symbol","title":"connect(to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/isWritable":{"type":"topic","title":"isWritable","abstract":[],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isWritable","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/iswritable","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isWritable"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOPreconcurrencySendable":{"title":"NIOPreconcurrencySendable","type":"topic","role":"symbol","url":"\/documentation\/niocore\/niopreconcurrencysendable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"navigatorTitle":[{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","kind":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/throwIfErrorCaught()":{"type":"topic","title":"throwIfErrorCaught()","abstract":[{"text":"This method will throw the error that is stored in the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" if any.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throwIfErrorCaught","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/throwiferrorcaught()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/throwIfErrorCaught()"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"title":"EmbeddedChannel","role":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/finish()":{"type":"topic","title":"finish()","abstract":[{"text":"Synchronously closes the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"finish","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC","text":"EmbeddedChannel","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC13LeftOverStateO","text":"LeftOverState","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/finish()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish()"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/localAddress":{"type":"topic","title":"localAddress","abstract":[],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"localAddress","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/localaddress","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/localAddress"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LeftOverState","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"LeftOverState","kind":"identifier"}],"title":"EmbeddedChannel.LeftOverState","role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState","abstract":[{"type":"codeVoice","code":"LeftOverState"},{"text":" represents any left-over inbound, outbound, and pending outbound events that hit the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" and were not consumed when ","type":"text"},{"type":"codeVoice","code":"finish"},{"type":"text","text":" was called on the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/closeFuture":{"type":"topic","title":"closeFuture","abstract":[],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"closeFuture","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/closefuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/closeFuture"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/bind(to:promise:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/bind(to:promise:)","abstract":[{"type":"text","text":"Fires the (outbound) "},{"type":"codeVoice","code":"bind"},{"type":"text","text":" event through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". If the event hits the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" which"},{"type":"text","text":" "},{"type":"text","text":"happens when it travels the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" all the way to the front, this will also set the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"localAddress"},{"text":".","type":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/bind(to:promise:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"kind":"symbol","title":"bind(to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/Channel-Implementations":{"kind":"article","title":"Channel Implementations","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations","url":"\/documentation\/nioembedded\/embeddedchannel\/channel-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/writeOutbound(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"EmbeddedChannel","kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC"},{"text":".","kind":"text"},{"text":"BufferState","kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC11BufferStateO"}],"type":"topic","title":"writeOutbound(_:)","kind":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeOutbound(_:)","role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/writeoutbound(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"title":"Channel","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/SynchronousOptions":{"kind":"symbol","abstract":[],"type":"topic","navigatorTitle":[{"text":"SynchronousOptions","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SynchronousOptions"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions","title":"EmbeddedChannel.SynchronousOptions","url":"\/documentation\/nioembedded\/embeddedchannel\/synchronousoptions"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"type":"topic","abstract":[],"url":"\/documentation\/nioembedded","title":"NIOEmbedded","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/isActive":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isActive","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/isactive","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isActive","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is ‘active’."}],"title":"isActive","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/readInbound(as:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"readInbound","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/readinbound(as:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readInbound(as:)","abstract":[{"type":"text","text":"If available, this method reads one element of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" out of the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"’s inbound buffer. If the"},{"text":" ","type":"text"},{"text":"first element was of a different type than requested, ","type":"text"},{"code":"EmbeddedChannel.WrongTypeError","type":"codeVoice"},{"text":" will be thrown, if there","type":"text"},{"text":" ","type":"text"},{"text":"are no elements in the outbound buffer, ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" will be returned.","type":"text"}],"title":"readInbound(as:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/ChannelOutboundInvoker-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/nioembedded\/embeddedchannel\/channeloutboundinvoker-implementations","title":"ChannelOutboundInvoker Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/ChannelOutboundInvoker-Implementations","kind":"article","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/readOutbound(as:)":{"url":"\/documentation\/nioembedded\/embeddedchannel\/readoutbound(as:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readOutbound(as:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"readOutbound(as:)","role":"symbol","abstract":[{"type":"text","text":"If available, this method reads one element of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" out of the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"’s outbound buffer. If the"},{"type":"text","text":" "},{"type":"text","text":"first element was of a different type than requested, "},{"type":"codeVoice","code":"EmbeddedChannel.WrongTypeError"},{"type":"text","text":" will be thrown, if there"},{"type":"text","text":" "},{"type":"text","text":"are no elements in the outbound buffer, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" will be returned."}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/remoteAddress":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"remoteAddress","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[],"kind":"symbol","title":"remoteAddress","role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/remoteaddress","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/remoteAddress","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/WrongTypeError":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"WrongTypeError"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/wrongtypeerror","role":"symbol","title":"EmbeddedChannel.WrongTypeError","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WrongTypeError"}],"abstract":[{"code":"WrongTypeError","type":"codeVoice"},{"text":" is throws if you use ","type":"text"},{"code":"readInbound","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"readOutbound","type":"codeVoice"},{"text":" and request a certain type but the first","type":"text"},{"text":" ","type":"text"},{"text":"item in the respective buffer is of a different type.","type":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/BufferState":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"BufferState"}],"navigatorTitle":[{"kind":"identifier","text":"BufferState"}],"type":"topic","title":"EmbeddedChannel.BufferState","kind":"symbol","abstract":[{"code":"BufferState","type":"codeVoice"},{"text":" represents the state of either the inbound, or the outbound ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" buffer. These","type":"text"},{"text":" ","type":"text"},{"text":"buffers contain data that travelled the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" all the way."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/BufferState","role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/bufferstate"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/allocator":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"allocator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator"}],"kind":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/allocator","title":"allocator","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/allocator","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/init(handlers:loop:)":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handlers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"loop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC","text":"EmbeddedEventLoop"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/init(handlers:loop:)","title":"init(handlers:loop:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handlers:loop:)","abstract":[{"type":"text","text":"Create a new instance."}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/parent":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/parent","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"parent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":"?"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/parent","abstract":[{"type":"codeVoice","code":"nil"},{"type":"text","text":" because "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"s don’t have parents."}],"title":"parent","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/eventLoop":{"abstract":[],"title":"eventLoop","url":"\/documentation\/nioembedded\/embeddedchannel\/eventloop","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/eventLoop","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol"}}}