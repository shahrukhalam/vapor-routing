{"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/close(mode:promise:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/ChannelOutboundInvoker-Implementations"]]},"abstract":[{"text":"Close the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" and so the connection if one exists.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"symbol","title":"close(mode:promise:)","roleHeading":"Instance Method","externalID":"s:7NIOCore7ChannelPAAE5close4mode7promiseyAA9CloseModeO_AA16EventLoopPromiseVyytGSgtF::SYNTHESIZED::s:11NIOEmbedded15EmbeddedChannelC","modules":[{"name":"NIOEmbedded"}],"extendedModule":"NIOCore","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CloseMode","preciseIdentifier":"s:7NIOCore9CloseModeO"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CloseMode","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CloseMode","preciseIdentifier":"s:7NIOCore9CloseModeO"},{"text":" = .all, ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"the "},{"code":"CloseMode","type":"codeVoice"},{"type":"text","text":" that is used"}],"type":"paragraph"}],"name":"mode"},{"content":[{"inlineContent":[{"text":"the ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" that will be notified once the operation completes,","type":"text"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if not interested in the outcome of the operation.","type":"text"}],"type":"paragraph"}],"name":"promise"}]}],"variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel\/close(mode:promise:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/close(mode:promise:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CloseMode","preciseIdentifier":"s:7NIOCore9CloseModeO"},{"kind":"text","text":", "},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/close(mode:promise:)","title":"close(mode:promise:)","kind":"symbol","abstract":[{"text":"Close the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" and so the connection if one exists."}],"type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/close(mode:promise:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"title":"EmbeddedChannel","role":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/ChannelOutboundInvoker-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/nioembedded\/embeddedchannel\/channeloutboundinvoker-implementations","title":"ChannelOutboundInvoker Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/ChannelOutboundInvoker-Implementations","kind":"article","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CloseMode":{"navigatorTitle":[{"text":"CloseMode","kind":"identifier"}],"title":"CloseMode","url":"\/documentation\/niocore\/closemode","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CloseMode","abstract":[{"text":"Specify what kind of close operation is requested.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CloseMode","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"type":"topic","abstract":[],"url":"\/documentation\/nioembedded","title":"NIOEmbedded","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"type":"topic","abstract":[{"type":"text","text":"A promise to provide a result later."}],"url":"\/documentation\/niocore\/eventlooppromise","title":"EventLoopPromise","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopPromise"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopPromise"}]}}}