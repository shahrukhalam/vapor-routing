{"kind":"symbol","abstract":[{"text":"Default implementation: ","type":"text"},{"type":"codeVoice","code":"NIOSynchronousChannelOptions"},{"type":"text","text":" are not supported."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"symbolKind":"property","externalID":"s:7NIOCore7ChannelPAAE11syncOptionsAA014NIOSynchronousbD0_pSgvp::SYNTHESIZED::s:11NIOEmbedded15EmbeddedChannelC","extendedModule":"NIOCore","role":"symbol","modules":[{"name":"NIOEmbedded"}],"title":"syncOptions","roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syncOptions","kind":"identifier"},{"text":": ","kind":"text"},{"text":"NIOSynchronousChannelOptions","preciseIdentifier":"s:7NIOCore28NIOSynchronousChannelOptionsP","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"syncOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOSynchronousChannelOptions","preciseIdentifier":"s:7NIOCore28NIOSynchronousChannelOptionsP","text":"NIOSynchronousChannelOptions"},{"kind":"text","text":"? { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioembedded\/embeddedchannel\/syncoptions-8lcvf"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/syncOptions-8lcvf","interfaceLanguage":"swift"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/Channel-Implementations":{"kind":"article","title":"Channel Implementations","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations","url":"\/documentation\/nioembedded\/embeddedchannel\/channel-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/syncOptions-8lcvf":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"syncOptions","kind":"identifier"},{"text":": ","kind":"text"},{"text":"NIOSynchronousChannelOptions","preciseIdentifier":"s:7NIOCore28NIOSynchronousChannelOptionsP","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"syncOptions","abstract":[{"text":"Default implementation: ","type":"text"},{"code":"NIOSynchronousChannelOptions","type":"codeVoice"},{"text":" are not supported.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/syncOptions-8lcvf","url":"\/documentation\/nioembedded\/embeddedchannel\/syncoptions-8lcvf"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"type":"topic","abstract":[],"url":"\/documentation\/nioembedded","title":"NIOEmbedded","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"title":"EmbeddedChannel","role":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOSynchronousChannelOptions":{"abstract":[],"type":"topic","url":"\/documentation\/niocore\/niosynchronouschanneloptions","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSynchronousChannelOptions"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOSynchronousChannelOptions"}],"title":"NIOSynchronousChannelOptions","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOSynchronousChannelOptions"}}}