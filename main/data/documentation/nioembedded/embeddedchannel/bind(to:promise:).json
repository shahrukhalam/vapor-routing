{"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/bind(to:promise:)"},"abstract":[{"text":"Fires the (outbound) ","type":"text"},{"type":"codeVoice","code":"bind"},{"text":" event through the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":". If the event hits the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" which","type":"text"},{"text":" ","type":"text"},{"text":"happens when it travels the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" all the way to the front, this will also set the","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s ","type":"text"},{"code":"localAddress","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"address","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The address to fake-bind to."}]}],"name":"address"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"EventLoopPromise"},{"text":" which will be fulfilled when the fake-bind operation has been done.","type":"text"}]}],"name":"promise"}],"kind":"parameters"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"]]},"metadata":{"roleHeading":"Instance Method","title":"bind(to:promise:)","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"modules":[{"name":"NIOEmbedded"}],"externalID":"s:11NIOEmbedded15EmbeddedChannelC4bind2to7promisey7NIOCore13SocketAddressO_AG16EventLoopPromiseVyytGSgtF"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioembedded\/embeddedchannel\/bind(to:promise:)"]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/bind(to:promise:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/bind(to:promise:)","abstract":[{"type":"text","text":"Fires the (outbound) "},{"type":"codeVoice","code":"bind"},{"type":"text","text":" event through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". If the event hits the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" which"},{"type":"text","text":" "},{"type":"text","text":"happens when it travels the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" all the way to the front, this will also set the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"localAddress"},{"text":".","type":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/bind(to:promise:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"kind":"symbol","title":"bind(to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketAddress":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketAddress","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketAddress"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SocketAddress"}],"url":"\/documentation\/niocore\/socketaddress","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Represent a socket address to which we may want to connect or bind."}],"title":"SocketAddress"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"title":"EmbeddedChannel","role":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"type":"topic","abstract":[],"url":"\/documentation\/nioembedded","title":"NIOEmbedded","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"type":"topic","abstract":[{"type":"text","text":"A promise to provide a result later."}],"url":"\/documentation\/niocore\/eventlooppromise","title":"EventLoopPromise","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopPromise"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopPromise"}]}}}