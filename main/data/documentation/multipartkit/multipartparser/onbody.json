{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onBody","kind":"identifier"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","kind":"typeIdentifier"},{"text":") -> ()","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit\/MultipartParser\/onBody"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"onBody"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":") -> ()","kind":"text"}],"modules":[{"name":"MultipartKit"}],"role":"symbol","roleHeading":"Instance Property","externalID":"s:12MultipartKit0A6ParserC6onBodyyy7NIOCore10ByteBufferVzcvp","title":"onBody","symbolKind":"property"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/multipartkit\/multipartparser\/onbody"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit","doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit\/MultipartParser"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/MultipartKit/MultipartParser":{"navigatorTitle":[{"text":"MultipartParser","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/multipartkit\/multipartparser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit\/MultipartParser","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipartParser","kind":"identifier"}],"title":"MultipartParser","type":"topic","abstract":[{"type":"text","text":"Parses multipart-encoded "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" into "},{"type":"codeVoice","code":"MultipartPart"},{"type":"text","text":"s. Multipart encoding is a widely-used format for encoding"},{"type":"text","text":" "},{"type":"text","text":"web-form data that includes rich content like files. It allows for arbitrary data to be encoded"},{"type":"text","text":" "},{"type":"text","text":"in each part thanks to a unique delimiter “boundary” that is defined separately. This"},{"type":"text","text":" "},{"type":"text","text":"boundary is guaranteed by the client to not appear anywhere in the data."}]},"doc://co.pointfree.VaporRouting/documentation/MultipartKit/MultipartParser/onBody":{"role":"symbol","kind":"symbol","url":"\/documentation\/multipartkit\/multipartparser\/onbody","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit\/MultipartParser\/onBody","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"onBody"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":") -> ()"}],"title":"onBody","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/MultipartKit":{"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit","role":"collection","kind":"symbol","title":"MultipartKit","type":"topic","url":"\/documentation\/multipartkit"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol","url":"\/documentation\/niocore\/bytebuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"type":"topic"}}}