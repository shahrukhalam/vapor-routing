{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/erasetoanyparser()"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyParser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AnyParser"},{"text":" wrapping this parser.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This form of ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"type erasure"}]},{"text":" preserves abstraction across API boundaries, such as different","type":"text"},{"text":" ","type":"text"},{"text":"modules.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When you expose your composed parsers as the "},{"type":"codeVoice","code":"AnyParser"},{"type":"text","text":" type, you can change the underlying"},{"type":"text","text":" "},{"type":"text","text":"implementation over time without affecting existing clients."}],"type":"paragraph"},{"inlineContent":[{"text":"Equivalent to passing ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"AnyParser.init","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"metadata":{"externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B9ZipOOVOVVV","modules":[{"name":"URLRouting"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"title":"eraseToAnyParser()","extendedModule":"Parsing","symbolKind":"method","role":"symbol"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVOVV\/eraseToAnyParser()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVOVV","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVOVV\/Parser-Implementations"]]},"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"references":{"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipOOVOVV":{"title":"PathBuilder.PathZipOOVOVV","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVOVV","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipOOVOVV","kind":"identifier"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv","navigatorTitle":[{"text":"PathZipOOVOVV","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/URLRouting":{"type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","title":"URLRouting","abstract":[],"url":"\/documentation\/urlrouting","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipOOVOVV/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVOVV\/Parser-Implementations","role":"collectionGroup","kind":"article","type":"topic","title":"Parser Implementations","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/parser-implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder":{"type":"topic","title":"PathBuilder","role":"symbol","abstract":[{"text":"A custom parameter attribute that constructs path component parsers from closures. The","type":"text"},{"text":" ","type":"text"},{"text":"constructed parser runs a number of parsers against each patch component, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and accumulates their outputs.","type":"text"}],"kind":"symbol","url":"\/documentation\/urlrouting\/pathbuilder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"PathBuilder"}]},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipOOVOVV/eraseToAnyParser()":{"role":"symbol","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"eraseToAnyParser()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVOVV\/eraseToAnyParser()","type":"topic","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovovv\/erasetoanyparser()"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParser":{"title":"AnyParser","kind":"symbol","abstract":[{"type":"text","text":"A type-erased parser of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParser","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"role":"symbol","url":"\/documentation\/parsing\/anyparser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}]}}}