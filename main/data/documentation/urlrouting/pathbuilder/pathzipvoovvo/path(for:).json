{"metadata":{"roleHeading":"Instance Method","symbolKind":"method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"code":"URLRequestData","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"externalID":"s:7Parsing13ParserPrinterP10URLRoutingAD14URLRequestDataV5InputRtzrlE4path3forSS6OutputQz_tF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B9ZipVOOVVOV","modules":[{"name":"URLRouting"}],"title":"path(for:)","extendedModule":"Parsing","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"path","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"path","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"route","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}]}]}],"variants":[{"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/path(for:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOVVO\/path(for:)"},"abstract":[{"type":"text","text":"Inherited from "},{"code":"ParserPrinter.path(for:)","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOVVO","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOVVO\/ParserPrinter-Implementations"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipVOOVVO/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOVVO\/ParserPrinter-Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/parserprinter-implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder":{"type":"topic","title":"PathBuilder","role":"symbol","abstract":[{"text":"A custom parameter attribute that constructs path component parsers from closures. The","type":"text"},{"text":" ","type":"text"},{"text":"constructed parser runs a number of parsers against each patch component, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and accumulates their outputs.","type":"text"}],"kind":"symbol","url":"\/documentation\/urlrouting\/pathbuilder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"PathBuilder"}]},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipVOOVVO":{"title":"PathBuilder.PathZipVOOVVO","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOVVO","kind":"symbol","role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo","abstract":[],"navigatorTitle":[{"text":"PathZipVOOVVO","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipVOOVVO","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/URLRouting":{"type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","title":"URLRouting","abstract":[],"url":"\/documentation\/urlrouting","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipVOOVVO/path(for:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOVVO\/path(for:)","role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoovvo\/path(for:)","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"URLRequestData"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"path(for:)","abstract":[],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"path","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]}}}