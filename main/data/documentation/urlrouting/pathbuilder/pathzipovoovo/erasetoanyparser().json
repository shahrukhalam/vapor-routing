{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/erasetoanyparser()"]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOOVO\/eraseToAnyParser()"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOOVO","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOOVO\/Parser-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParser","text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyParser"},{"type":"text","text":" wrapping this parser."}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This form of "},{"type":"emphasis","inlineContent":[{"type":"text","text":"type erasure"}]},{"type":"text","text":" preserves abstraction across API boundaries, such as different"},{"type":"text","text":" "},{"type":"text","text":"modules."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When you expose your composed parsers as the "},{"type":"codeVoice","code":"AnyParser"},{"type":"text","text":" type, you can change the underlying"},{"type":"text","text":" "},{"type":"text","text":"implementation over time without affecting existing clients."}],"type":"paragraph"},{"inlineContent":[{"text":"Equivalent to passing ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"AnyParser.init","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"metadata":{"role":"symbol","extendedModule":"Parsing","externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B9ZipOVOOVOV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","modules":[{"name":"URLRouting"}],"title":"eraseToAnyParser()","symbolKind":"method"},"references":{"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipOVOOVO/eraseToAnyParser()":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"role":"symbol","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"title":"eraseToAnyParser()","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/erasetoanyparser()","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOOVO\/eraseToAnyParser()"},"doc://co.pointfree.VaporRouting/documentation/URLRouting":{"type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","title":"URLRouting","abstract":[],"url":"\/documentation\/urlrouting","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParser":{"title":"AnyParser","kind":"symbol","abstract":[{"type":"text","text":"A type-erased parser of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParser","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"role":"symbol","url":"\/documentation\/parsing\/anyparser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}]},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipOVOOVO":{"role":"symbol","type":"topic","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOOVO","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipOVOOVO","kind":"identifier"}],"navigatorTitle":[{"text":"PathZipOVOOVO","kind":"identifier"}],"abstract":[],"kind":"symbol","title":"PathBuilder.PathZipOVOOVO"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder":{"type":"topic","title":"PathBuilder","role":"symbol","abstract":[{"text":"A custom parameter attribute that constructs path component parsers from closures. The","type":"text"},{"text":" ","type":"text"},{"text":"constructed parser runs a number of parsers against each patch component, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and accumulates their outputs.","type":"text"}],"kind":"symbol","url":"\/documentation\/urlrouting\/pathbuilder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"PathBuilder"}]},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipOVOOVO/Parser-Implementations":{"title":"Parser Implementations","role":"collectionGroup","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoovo\/parser-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOOVO\/Parser-Implementations"}}}