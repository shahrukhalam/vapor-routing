{"kind":"symbol","metadata":{"roleHeading":"Instance Method","platforms":[],"title":"compareAndExchange(expected:desired:)","externalID":"s:21NIOConcurrencyHelpers9NIOAtomicC18compareAndExchange8expected7desiredSbx_xtF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareAndExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"symbolKind":"method","role":"symbol","modules":[{"name":"NIOConcurrencyHelpers"}]},"abstract":[{"type":"text","text":"Atomically compares the value against "},{"code":"expected","type":"codeVoice"},{"type":"text","text":" and, if they are equal,"},{"type":"text","text":" "},{"type":"text","text":"replaces the value with "},{"code":"desired","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"expected","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value that this object must currently hold for the"},{"type":"text","text":" "},{"type":"text","text":"compare-and-swap to succeed."}]}]},{"name":"desired","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new value that this object will hold if the compare"},{"type":"text","text":" "},{"type":"text","text":"succeeds."}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"True"},{"text":" if the exchange occurred, or ","type":"text"},{"type":"codeVoice","code":"False"},{"text":" if ","type":"text"},{"type":"codeVoice","code":"expected"},{"text":" did not","type":"text"},{"text":" ","type":"text"},{"text":"match the current value and so no exchange occurred.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This implementation conforms to C11’s ","type":"text"},{"code":"atomic_compare_exchange_strong","type":"codeVoice"},{"text":". This","type":"text"},{"text":" ","type":"text"},{"text":"means that the compare-and-swap will always succeed if ","type":"text"},{"code":"expected","type":"codeVoice"},{"text":" is equal to","type":"text"},{"text":" ","type":"text"},{"text":"value. Additionally, it uses a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"sequentially consistent ordering"}]},{"text":". For more","type":"text"},{"text":" ","type":"text"},{"text":"details on atomic memory models, check the documentation for C11’s","type":"text"},{"text":" ","type":"text"},{"code":"stdatomic.h","type":"codeVoice"},{"text":".","type":"text"}]}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"please use ManagedAtomic from https:\/\/github.com\/apple\/swift-atomics instead","type":"text"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/NIOAtomic\/compareAndExchange(expected:desired:)"},"variants":[{"paths":["\/documentation\/nioconcurrencyhelpers\/nioatomic\/compareandexchange(expected:desired:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/NIOAtomic"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/NIOAtomic/compareAndExchange(expected:desired:)":{"title":"compareAndExchange(expected:desired:)","abstract":[{"text":"Atomically compares the value against ","type":"text"},{"code":"expected","type":"codeVoice"},{"text":" and, if they are equal,","type":"text"},{"text":" ","type":"text"},{"text":"replaces the value with ","type":"text"},{"code":"desired","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareAndExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/nioatomic\/compareandexchange(expected:desired:)","deprecated":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/NIOAtomic\/compareAndExchange(expected:desired:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/NIOAtomic":{"title":"NIOAtomic","navigatorTitle":[{"text":"NIOAtomic","kind":"identifier"}],"abstract":[{"text":"An encapsulation of an atomic primitive object.","type":"text"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOAtomic","kind":"identifier"}],"role":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/nioatomic","deprecated":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/NIOAtomic","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","title":"NIOConcurrencyHelpers","type":"topic","url":"\/documentation\/nioconcurrencyhelpers","abstract":[]}}}