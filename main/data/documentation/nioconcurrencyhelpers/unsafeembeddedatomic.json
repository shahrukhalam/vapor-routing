{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"UnsafeEmbeddedAtomic"}],"title":"UnsafeEmbeddedAtomic","platforms":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeEmbeddedAtomic"}],"symbolKind":"struct","role":"symbol","modules":[{"name":"NIOConcurrencyHelpers"}],"externalID":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeEmbeddedAtomic"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AtomicPrimitive","preciseIdentifier":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicPrimitive"}]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Before using "},{"type":"codeVoice","code":"UnsafeEmbeddedAtomic"},{"type":"text","text":", please consider whether your needs can be met by "},{"type":"codeVoice","code":"Atomic"},{"type":"text","text":" instead."},{"type":"text","text":" "},{"type":"codeVoice","code":"UnsafeEmbeddedAtomic"},{"type":"text","text":" is a value type, but atomics are heap-allocated. Thus, it is only safe to"},{"type":"text","text":" "},{"type":"text","text":"use "},{"type":"codeVoice","code":"UnsafeEmbeddedAtomic"},{"type":"text","text":" in situations where the atomic can be guaranteed to be cleaned up (via calling "},{"type":"codeVoice","code":"destroy"},{"type":"text","text":")."},{"type":"text","text":" "},{"type":"text","text":"If you cannot make these guarantees, use "},{"type":"codeVoice","code":"Atomic"},{"type":"text","text":" instead, which manages this for you."}],"type":"paragraph"},{"inlineContent":[{"text":"Atomic objects support a wide range of atomic operations:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Compare and swap"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Add"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Subtract","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Exchange"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Load current value","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Store current value","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Atomic primitives are useful when building constructs that need to","type":"text"},{"text":" ","type":"text"},{"text":"communicate or cooperate across multiple threads. In the case of","type":"text"},{"text":" ","type":"text"},{"text":"SwiftNIO this usually involves communicating across multiple event loops.","type":"text"}],"type":"paragraph"}]}],"sections":[],"abstract":[{"type":"text","text":"An atomic primitive object."}],"variants":[{"paths":["\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"please use UnsafeAtomic from https:\/\/github.com\/apple\/swift-atomics instead"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/init(value:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/add(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/compareAndExchange(expected:desired:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/destroy()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/exchange(with:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/load()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/store(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/sub(_:)"],"title":"Instance Methods"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/exchange(with:)":{"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Atomically exchanges "},{"type":"codeVoice","code":"value"},{"type":"text","text":" for the current value of this object."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/exchange(with:)","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/exchange(with:)","deprecated":true,"title":"exchange(with:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/compareAndExchange(expected:desired:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/compareAndExchange(expected:desired:)","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/compareandexchange(expected:desired:)","type":"topic","title":"compareAndExchange(expected:desired:)","abstract":[{"type":"text","text":"Atomically compares the value against "},{"type":"codeVoice","code":"expected"},{"type":"text","text":" and, if they are equal,"},{"type":"text","text":" "},{"text":"replaces the value with ","type":"text"},{"code":"desired","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareAndExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"deprecated":true,"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/load()":{"abstract":[{"type":"text","text":"Atomically loads and returns the value of this object."}],"role":"symbol","title":"load()","type":"topic","deprecated":true,"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/load()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/load()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicPrimitive":{"url":"\/documentation\/nioconcurrencyhelpers\/atomicprimitive","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicPrimitive","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicPrimitive"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicPrimitive"}],"title":"AtomicPrimitive","abstract":[{"text":"The protocol that all types that can be made atomic must conform to.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/store(_:)":{"abstract":[{"type":"text","text":"Atomically replaces the value of this object with "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"role":"symbol","title":"store(_:)","type":"topic","deprecated":true,"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/store(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/store(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"store","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","title":"NIOConcurrencyHelpers","type":"topic","url":"\/documentation\/nioconcurrencyhelpers","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/add(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/add(_:)","type":"topic","kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/add(_:)","role":"symbol","deprecated":true,"abstract":[{"type":"text","text":"Atomically adds "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" to this object."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"title":"add(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/destroy()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"destroy"},{"kind":"text","text":"()"}],"kind":"symbol","abstract":[{"type":"text","text":"Destroy the atomic value."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/destroy()","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/destroy()","deprecated":true,"title":"destroy()","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/init(value:)":{"kind":"symbol","title":"init(value:)","deprecated":true,"abstract":[{"type":"text","text":"Create an atomic object with "},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/init(value:)","type":"topic","role":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/init(value:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic":{"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}],"abstract":[{"type":"text","text":"An atomic primitive object."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic","navigatorTitle":[{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}],"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic","deprecated":true,"title":"UnsafeEmbeddedAtomic"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/sub(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sub"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Atomically subtracts "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" from this object."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/sub(_:)","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/sub(_:)","deprecated":true,"title":"sub(_:)","type":"topic"}}}