{"abstract":[{"type":"text","text":"Atomically replaces the value of this object with "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"sections":[],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"AtomicBox is deprecated without replacement because the original implementation doesn't work."}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"symbolKind":"method","platforms":[],"modules":[{"name":"NIOConcurrencyHelpers"}],"externalID":"s:21NIOConcurrencyHelpers9AtomicBoxC5storeyyxF","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"store"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"title":"store(_:)","roleHeading":"Instance Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"store","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"The new value to set the object to.","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This implementation uses a ","type":"text"},{"inlineContent":[{"type":"text","text":"relaxed"}],"type":"emphasis"},{"text":" memory ordering. This guarantees nothing","type":"text"},{"text":" ","type":"text"},{"text":"more than that this operation is atomic: there is no guarantee that any other","type":"text"},{"text":" ","type":"text"},{"text":"event will be ordered before or after this one.","type":"text"}],"type":"paragraph"},{"name":"Warning","content":[{"inlineContent":[{"text":"The implementation of ","type":"text"},{"code":"exchange","type":"codeVoice"},{"type":"text","text":" contains a "},{"inlineContent":[{"text":"Compare and Exchange loop","type":"text"}],"type":"emphasis"},{"type":"text","text":", ie. it may busy wait with"},{"type":"text","text":" "},{"type":"text","text":"100% CPU load."}],"type":"paragraph"}],"type":"aside","style":"warning"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioconcurrencyhelpers\/atomicbox\/store(_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox\/store(_:)"},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicBox/store(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox\/store(_:)","title":"store(_:)","type":"topic","url":"\/documentation\/nioconcurrencyhelpers\/atomicbox\/store(_:)","deprecated":true,"kind":"symbol","abstract":[{"text":"Atomically replaces the value of this object with ","type":"text"},{"type":"codeVoice","code":"value"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"store"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","title":"NIOConcurrencyHelpers","type":"topic","url":"\/documentation\/nioconcurrencyhelpers","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicBox":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicBox","kind":"identifier"}],"deprecated":true,"title":"AtomicBox","url":"\/documentation\/nioconcurrencyhelpers\/atomicbox","abstract":[{"code":"AtomicBox","type":"codeVoice"},{"text":" is a heap-allocated box which allows lock-free access to an instance of a Swift class.","type":"text"}],"navigatorTitle":[{"text":"AtomicBox","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox","kind":"symbol","role":"symbol","type":"topic"}}}