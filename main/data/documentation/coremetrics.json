{"metadata":{"title":"CoreMetrics","symbolKind":"module","modules":[{"name":"CoreMetrics"}],"roleHeading":"Framework","role":"collection","externalID":"CoreMetrics"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/coremetrics"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Counter","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounter","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Gauge","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MultiplexMetricsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Recorder","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Timer"]},{"title":"Protocols","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsFactory","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/RecorderHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimerHandler"]},{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimeUnit"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsSystem"]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Gauge":{"role":"symbol","kind":"symbol","url":"\/documentation\/coremetrics\/gauge","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Gauge"}],"navigatorTitle":[{"kind":"identifier","text":"Gauge"}],"abstract":[{"text":"A gauge is a metric that represents a single numerical value that can arbitrarily go up and down.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Gauges are typically used for measured values like temperatures or current memory usage, but also “counts” that can go up and down, like the number of active threads."},{"type":"text","text":" "},{"type":"text","text":"Gauges are modeled as "},{"code":"Recorder","type":"codeVoice"},{"type":"text","text":" with a sample size of 1 and that does not perform any aggregation."}],"title":"Gauge","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Gauge"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MetricsSystem":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetricsSystem","kind":"identifier"}],"url":"\/documentation\/coremetrics\/metricssystem","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsSystem","title":"MetricsSystem","role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"text":"MetricsSystem","kind":"identifier"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"MetricsSystem"},{"type":"text","text":" is a global facility where the default metrics backend implementation ("},{"code":"MetricsFactory","type":"codeVoice"},{"text":") can be","type":"text"},{"text":" ","type":"text"},{"text":"configured. ","type":"text"},{"code":"MetricsSystem","type":"codeVoice"},{"text":" is set up just once in a given program to set up the desired metrics backend","type":"text"},{"text":" ","type":"text"},{"text":"implementation.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MetricsFactory":{"url":"\/documentation\/coremetrics\/metricsfactory","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsFactory"}],"abstract":[{"text":"The ","type":"text"},{"code":"MetricsFactory","type":"codeVoice"},{"text":" is the bridge between the ","type":"text"},{"code":"MetricsSystem","type":"codeVoice"},{"text":" and the metrics backend implementation.","type":"text"},{"text":" ","type":"text"},{"code":"MetricsFactory","type":"codeVoice"},{"text":"’s role is to initialize concrete implementations of the various metric types:","type":"text"}],"role":"symbol","kind":"symbol","title":"MetricsFactory","navigatorTitle":[{"kind":"identifier","text":"MetricsFactory"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsFactory","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounterHandler":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FloatingPointCounterHandler"}],"url":"\/documentation\/coremetrics\/floatingpointcounterhandler","navigatorTitle":[{"kind":"identifier","text":"FloatingPointCounterHandler"}],"type":"topic","title":"FloatingPointCounterHandler","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler","abstract":[{"text":"A ","type":"text"},{"code":"FloatingPointCounterHandler","type":"codeVoice"},{"text":" represents a backend implementation of a ","type":"text"},{"code":"FloatingPointCounter","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/TimeUnit":{"type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"TimeUnit"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimeUnit","title":"TimeUnit","role":"symbol","url":"\/documentation\/coremetrics\/timeunit","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimeUnit"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Counter":{"navigatorTitle":[{"text":"Counter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Counter","kind":"symbol","title":"Counter","abstract":[{"text":"A counter is a cumulative metric that represents a single monotonically increasing counter whose value can only increase or be reset to zero.","type":"text"},{"text":" ","type":"text"},{"text":"For example, you can use a counter to represent the number of requests served, tasks completed, or errors.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Counter"}],"url":"\/documentation\/coremetrics\/counter","role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/CounterHandler":{"type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"CounterHandler","type":"codeVoice"},{"text":" represents a backend implementation of a ","type":"text"},{"type":"codeVoice","code":"Counter"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler","navigatorTitle":[{"text":"CounterHandler","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CounterHandler","kind":"identifier"}],"title":"CounterHandler","url":"\/documentation\/coremetrics\/counterhandler","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Timer":{"navigatorTitle":[{"kind":"identifier","text":"Timer"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timer"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Timer","abstract":[{"type":"text","text":"A timer collects observations within a time window (usually things like request durations) and provides aggregated information about the data sample,"},{"type":"text","text":" "},{"type":"text","text":"for example, min, max and various quantiles. It is similar to a "},{"code":"Recorder","type":"codeVoice"},{"type":"text","text":" but specialized for values that represent durations."}],"url":"\/documentation\/coremetrics\/timer","role":"symbol","type":"topic","title":"Timer","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/RecorderHandler":{"title":"RecorderHandler","type":"topic","role":"symbol","url":"\/documentation\/coremetrics\/recorderhandler","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecorderHandler"}],"navigatorTitle":[{"kind":"identifier","text":"RecorderHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/RecorderHandler","kind":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RecorderHandler"},{"type":"text","text":" represents a backend implementation of a "},{"type":"codeVoice","code":"Recorder"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics","abstract":[],"url":"\/documentation\/coremetrics","role":"collection","type":"topic","title":"CoreMetrics","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/NOOPMetricsHandler":{"title":"NOOPMetricsHandler","type":"topic","role":"symbol","url":"\/documentation\/coremetrics\/noopmetricshandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"NOOPMetricsHandler","kind":"identifier"}],"navigatorTitle":[{"text":"NOOPMetricsHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler","kind":"symbol","abstract":[{"type":"text","text":"Ships with the metrics module, used for initial bootstrapping."}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Recorder":{"navigatorTitle":[{"kind":"identifier","text":"Recorder"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Recorder","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Recorder"}],"kind":"symbol","abstract":[{"text":"A recorder collects observations within a time window (usually things like response sizes) and ","type":"text"},{"inlineContent":[{"type":"text","text":"can"}],"type":"emphasis"},{"text":" provide aggregated information about the data sample, for example, count, sum, min, max and various quantiles.","type":"text"}],"url":"\/documentation\/coremetrics\/recorder","type":"topic","title":"Recorder"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounter":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPointCounter","kind":"identifier"}],"navigatorTitle":[{"text":"FloatingPointCounter","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/coremetrics\/floatingpointcounter","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounter","title":"FloatingPointCounter","abstract":[{"text":"A FloatingPointCounter is a cumulative metric that represents a single monotonically increasing FloatingPointCounter whose value can only increase or be reset to zero.","type":"text"},{"text":" ","type":"text"},{"text":"For example, you can use a FloatingPointCounter to represent the number of requests served, tasks completed, or errors.","type":"text"},{"text":" ","type":"text"},{"text":"FloatingPointCounter is not supported by all metrics backends, however a default implementation is provided which accumulates floating point values and records increments to a standard Counter after crossing integer boundaries.","type":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MultiplexMetricsHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MultiplexMetricsHandler","kind":"symbol","title":"MultiplexMetricsHandler","navigatorTitle":[{"kind":"identifier","text":"MultiplexMetricsHandler"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiplexMetricsHandler"}],"abstract":[{"type":"text","text":"A pseudo-metrics handler that can be used to send messages to multiple other metrics handlers."}],"url":"\/documentation\/coremetrics\/multiplexmetricshandler","role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/TimerHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimerHandler","url":"\/documentation\/coremetrics\/timerhandler","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TimerHandler"}],"role":"symbol","title":"TimerHandler","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimerHandler"}],"abstract":[{"text":"A ","type":"text"},{"code":"TimerHandler","type":"codeVoice"},{"text":" represents a backend implementation of a ","type":"text"},{"code":"Timer","type":"codeVoice"},{"type":"text","text":"."}]}}}