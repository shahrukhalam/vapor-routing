{"metadata":{"title":"didReceiveBodyPart(task:_:)","symbolKind":"method","modules":[{"name":"AsyncHTTPClient"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"didReceiveBodyPart"},{"kind":"text","text":"("},{"kind":"externalParam","text":"task"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C","kind":"typeIdentifier","text":"HTTPClient"},{"kind":"text","text":"."},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","kind":"typeIdentifier","text":"Task"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ResponseAccumulator","preciseIdentifier":"s:15AsyncHTTPClient19ResponseAccumulatorC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","role":"symbol","externalID":"s:15AsyncHTTPClient19ResponseAccumulatorC18didReceiveBodyPart4task_7NIOCore15EventLoopFutureCyytGAA0B0C4TaskCy_AK0C0VG_AF10ByteBufferVtF"},"variants":[{"paths":["\/documentation\/asynchttpclient\/responseaccumulator\/didreceivebodypart(task:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveBodyPart","kind":"identifier"},{"text":"(","kind":"text"},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPClient","preciseIdentifier":"s:15AsyncHTTPClient0B0C","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient\/Task","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ResponseAccumulator","preciseIdentifier":"s:15AsyncHTTPClient19ResponseAccumulatorC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","preciseIdentifier":"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator\/Response","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"part","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"]}]},{"parameters":[{"name":"task","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Current request context."}]}]},{"name":"buffer","content":[{"inlineContent":[{"text":"Received body ","type":"text"},{"code":"Part","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that will be used for backpressure."}]}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"This function will not be called until the future returned by ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd","isActive":true},{"text":" has completed.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This function will not be called for subsequent body parts until the previous future returned by a","type":"text"},{"text":" ","type":"text"},{"text":"call to this function completes.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator\/didReceiveBodyPart(task:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Called when part of a response body is received. Could be called zero or more times."},{"type":"text","text":" "},{"type":"text","text":"You must return an "},{"code":"EventLoopFuture<Void>","type":"codeVoice"},{"type":"text","text":" that you complete when you have finished processing the body part."},{"type":"text","text":" "},{"type":"text","text":"You can create an already succeeded future by calling "},{"code":"task.eventLoop.makeSucceededFuture(())","type":"codeVoice"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator"]]},"sections":[],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol","url":"\/documentation\/niocore\/bytebuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClient":{"abstract":[{"text":"HTTPClient class provides API for request execution.","type":"text"}],"url":"\/documentation\/asynchttpclient\/httpclient","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPClient"}],"role":"symbol","title":"HTTPClient","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPClient"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/ResponseAccumulator":{"role":"symbol","navigatorTitle":[{"text":"ResponseAccumulator","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseAccumulator"}],"url":"\/documentation\/asynchttpclient\/responseaccumulator","kind":"symbol","title":"ResponseAccumulator","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator","abstract":[{"text":"The default ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate","type":"reference"},{"type":"text","text":"."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/ResponseAccumulator/Response":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"navigatorTitle":[{"kind":"identifier","text":"Response"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator\/Response","abstract":[],"kind":"symbol","title":"ResponseAccumulator.Response","url":"\/documentation\/asynchttpclient\/responseaccumulator\/response"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","title":"EventLoopFuture"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveHead(task:_:)-9r4xd":{"abstract":[{"text":"Called when response head is received. Will be called once.","type":"text"},{"text":" ","type":"text"},{"text":"You must return an ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture<Void>"},{"type":"text","text":" that you complete when you have finished processing the body part."},{"type":"text","text":" "},{"type":"text","text":"You can create an already succeeded future by calling "},{"type":"codeVoice","code":"task.eventLoop.makeSucceededFuture(())"},{"type":"text","text":"."}],"required":true,"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceivehead(task:_:)-9r4xd","defaultImplementations":1,"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveHead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","text":"Task","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"HTTPResponseHead","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"title":"didReceiveHead(task:_:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/ResponseAccumulator/didReceiveBodyPart(task:_:)":{"url":"\/documentation\/asynchttpclient\/responseaccumulator\/didreceivebodypart(task:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveBodyPart","kind":"identifier"},{"text":"(","kind":"text"},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Task","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ResponseAccumulator","preciseIdentifier":"s:15AsyncHTTPClient19ResponseAccumulatorC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15AsyncHTTPClient19ResponseAccumulatorC0C0a"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator\/didReceiveBodyPart(task:_:)","title":"didReceiveBodyPart(task:_:)","abstract":[{"text":"Called when part of a response body is received. Could be called zero or more times.","type":"text"},{"text":" ","type":"text"},{"text":"You must return an ","type":"text"},{"code":"EventLoopFuture<Void>","type":"codeVoice"},{"text":" that you complete when you have finished processing the body part.","type":"text"},{"text":" ","type":"text"},{"text":"You can create an already succeeded future by calling ","type":"text"},{"code":"task.eventLoop.makeSucceededFuture(())","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate","type":"topic","title":"HTTPClientResponseDelegate","url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate","abstract":[{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate","type":"reference"},{"text":" allows an implementation to receive notifications about request processing and to control how response parts are processed.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPClientResponseDelegate"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPClientResponseDelegate"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClient/Task":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Task"}],"type":"topic","url":"\/documentation\/asynchttpclient\/httpclient\/task","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient\/Task","navigatorTitle":[{"kind":"identifier","text":"Task"}],"abstract":[{"text":"Response execution context.","type":"text"}],"role":"symbol","title":"HTTPClient.Task"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient":{"abstract":[],"url":"\/documentation\/asynchttpclient","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient","type":"topic","role":"collection","title":"AsyncHTTPClient","kind":"symbol"}}}