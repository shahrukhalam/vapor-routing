{"kind":"symbol","topicSections":[{"title":"Classes","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Lazy"]},{"title":"Protocols","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/CountingRange","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection"]},{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyConversion","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Consumed","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Digits","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/From","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/FromSubstring","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/FromUTF8View","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/FromUnicodeScalarView","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Many","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOf","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Peek","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixThrough","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/StartsWith","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Stream","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Whitespace"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conditional"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers"]}],"variants":[{"paths":["\/documentation\/parsing"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"},"metadata":{"title":"Parsing","modules":[{"name":"Parsing"}],"symbolKind":"module","roleHeading":"Framework","role":"collection","externalID":"Parsing"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[[]]},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Newline":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"}],"abstract":[],"title":"Newline","role":"symbol","url":"\/documentation\/parsing\/newline","navigatorTitle":[{"kind":"identifier","text":"Newline"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Fail":{"type":"topic","abstract":[{"type":"text","text":"A parser that always fails, no matter the input."}],"kind":"symbol","url":"\/documentation\/parsing\/fail","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fail"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Fail","navigatorTitle":[{"text":"Fail","kind":"identifier"}],"role":"symbol","title":"Fail"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Many":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Many","url":"\/documentation\/parsing\/many","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"navigatorTitle":[{"text":"Many","kind":"identifier"}],"type":"topic","title":"Many","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrefixUpTo":{"navigatorTitle":[{"kind":"identifier","text":"PrefixUpTo"}],"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"role":"symbol","title":"PrefixUpTo","url":"\/documentation\/parsing\/prefixupto","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixUpTo"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixUpTo"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions":{"url":"\/documentation\/parsing\/conversions","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}],"navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"kind":"symbol","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","type":"topic","title":"Conversions"},"doc://co.pointfree.VaporRouting/documentation/Parsing/StartsWith":{"abstract":[{"text":"A parser that parses a sequence of elements from its input.","type":"text"}],"url":"\/documentation\/parsing\/startswith","type":"topic","title":"StartsWith","role":"symbol","navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/StartsWith","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/OneOf":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOf"}],"abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"role":"symbol","url":"\/documentation\/parsing\/oneof","title":"OneOf","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOf","navigatorTitle":[{"kind":"identifier","text":"OneOf"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Always":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Always"}],"title":"Always","url":"\/documentation\/parsing\/always","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"abstract":[{"type":"text","text":"A parser that always succeeds with the given value, and does not consume any input."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Consumed":{"title":"Consumed","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Consumed","url":"\/documentation\/parsing\/consumed","abstract":[{"text":"A parser that returns the subsequence of input consumed by another parser.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Consumed","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Consumed","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","kind":"symbol","role":"collection","type":"topic","abstract":[],"title":"Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParser":{"title":"AnyParser","kind":"symbol","abstract":[{"type":"text","text":"A type-erased parser of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParser","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"role":"symbol","url":"\/documentation\/parsing\/anyparser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/First":{"abstract":[{"text":"A parser that consumes the first element from a collection.","type":"text"}],"title":"First","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"}],"navigatorTitle":[{"kind":"identifier","text":"First"}],"url":"\/documentation\/parsing\/first","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Peek":{"type":"topic","abstract":[{"text":"A parser that runs the given parser, but does not consume any input.","type":"text"}],"url":"\/documentation\/parsing\/peek","navigatorTitle":[{"text":"Peek","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Peek","role":"symbol","title":"Peek","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Peek","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"title":"Parsers","url":"\/documentation\/parsing\/parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyConversion":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyConversion","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyConversion","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AnyConversion","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-erased "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion"},{"type":"text","text":"."}],"url":"\/documentation\/parsing\/anyconversion","kind":"symbol","role":"symbol","title":"AnyConversion"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Digits":{"type":"topic","title":"Digits","navigatorTitle":[{"text":"Digits","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Digits","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Digits","kind":"identifier"}],"abstract":[{"text":"A parser that consumes a number of digits from the beginning of a collection of UTF-8 code","type":"text"},{"text":" ","type":"text"},{"text":"units.","type":"text"}],"url":"\/documentation\/parsing\/digits"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint":{"kind":"symbol","abstract":[{"type":"text","text":"An entry to "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","type":"reference"},{"type":"text","text":" syntax that requires the builder to be a printer."}],"url":"\/documentation\/parsing\/parseprint","type":"topic","title":"ParsePrint","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParsePrint"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParsePrint"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/FromSubstring":{"url":"\/documentation\/parsing\/fromsubstring","navigatorTitle":[{"text":"FromSubstring","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/FromSubstring","type":"topic","kind":"symbol","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromSubstring","kind":"identifier"}],"deprecated":true,"title":"FromSubstring"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter","navigatorTitle":[{"kind":"identifier","text":"AnyParserPrinter"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"}],"type":"topic","abstract":[{"type":"text","text":"A type-erased parser-printer of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"title":"AnyParserPrinter","url":"\/documentation\/parsing\/anyparserprinter"},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrependableCollection":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PrependableCollection"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrependableCollection"}],"type":"topic","title":"PrependableCollection","abstract":[{"type":"text","text":"A collection that supports empty initialization and the ability to prepend a sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements of elements to itself."}],"url":"\/documentation\/parsing\/prependablecollection"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Lazy":{"role":"symbol","type":"topic","navigatorTitle":[{"text":"Lazy","kind":"identifier"}],"abstract":[{"text":"A parser that waits for a call to its ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Lazy\/parse(_:)","isActive":true},{"text":" method before running the given closure to","type":"text"},{"text":" ","type":"text"},{"text":"create a parser for the given input.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lazy","kind":"identifier"}],"kind":"symbol","title":"Lazy","url":"\/documentation\/parsing\/lazy","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Lazy"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"url":"\/documentation\/parsing\/parse","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse","type":"topic","title":"Parse","role":"symbol","navigatorTitle":[{"text":"Parse","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix","title":"Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"url":"\/documentation\/parsing\/prefix","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/From":{"kind":"symbol","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"From","kind":"identifier"}],"role":"symbol","type":"topic","title":"From","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/From","navigatorTitle":[{"text":"From","kind":"identifier"}],"url":"\/documentation\/parsing\/from"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest":{"abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns this subsequence as"},{"type":"text","text":" "},{"type":"text","text":"its output."}],"url":"\/documentation\/parsing\/rest","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"title":"Rest","navigatorTitle":[{"kind":"identifier","text":"Rest"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally":{"type":"topic","title":"Optionally","navigatorTitle":[{"text":"Optionally","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"abstract":[{"text":"A parser that runs the given parser and succeeds with ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if it fails.","type":"text"}],"url":"\/documentation\/parsing\/optionally"},"doc://co.pointfree.VaporRouting/documentation/Parsing/OneOfBuilder":{"kind":"symbol","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs each parser in the closure, one after another, till one succeeds with an output."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfBuilder","kind":"identifier"}],"role":"symbol","type":"topic","title":"OneOfBuilder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder","navigatorTitle":[{"text":"OneOfBuilder","kind":"identifier"}],"url":"\/documentation\/parsing\/oneofbuilder"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"url":"\/documentation\/parsing\/parserprinter","abstract":[{"type":"text","text":"A "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"role":"symbol","title":"ParserPrinter","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Skip":{"abstract":[{"text":"A parser that discards the output of another parser.","type":"text"}],"url":"\/documentation\/parsing\/skip","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Skip","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"role":"symbol","title":"Skip","kind":"symbol","navigatorTitle":[{"text":"Skip","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/CountingRange":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/CountingRange","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CountingRange"}],"abstract":[],"url":"\/documentation\/parsing\/countingrange","navigatorTitle":[{"kind":"identifier","text":"CountingRange"}],"role":"symbol","title":"CountingRange","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Lazy/parse(_:)":{"title":"parse(_:)","type":"topic","url":"\/documentation\/parsing\/lazy\/parse(_:)","role":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Lazy\/parse(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Stream":{"url":"\/documentation\/parsing\/stream","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Stream","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stream","kind":"identifier"}],"type":"topic","abstract":[{"text":"A parser that can parse streams of input.","type":"text"}],"title":"Stream","navigatorTitle":[{"kind":"identifier","text":"Stream"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrefixThrough":{"role":"symbol","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixThrough","kind":"identifier"}],"title":"PrefixThrough","kind":"symbol","url":"\/documentation\/parsing\/prefixthrough","navigatorTitle":[{"text":"PrefixThrough","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrefixThrough"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"kind":"symbol","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"role":"symbol","type":"topic","title":"ParserBuilder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"url":"\/documentation\/parsing\/parserbuilder"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Whitespace":{"title":"Whitespace","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Whitespace","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/whitespace","abstract":[{"text":"A parser that consumes whitespace from the beginning of input.","type":"text"}],"navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/FromUTF8View":{"type":"topic","title":"FromUTF8View","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/FromUTF8View","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromUTF8View"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"FromUTF8View"}],"url":"\/documentation\/parsing\/fromutf8view","deprecated":true},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conditional":{"abstract":[],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Conditional","kind":"identifier"}],"title":"Conditional","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conditional","url":"\/documentation\/parsing\/conditional","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"}],"deprecated":true,"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Not"}],"url":"\/documentation\/parsing\/not","navigatorTitle":[{"kind":"identifier","text":"Not"}],"abstract":[{"text":"A parser that succeeds if the given parser fails, and does not consume any input.","type":"text"}],"title":"Not","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not","kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/End":{"kind":"symbol","abstract":[{"text":"A parser that succeeds if the input is empty, and fails otherwise.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"End"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/End","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"type":"topic","title":"End","url":"\/documentation\/parsing\/end"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversion":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"url":"\/documentation\/parsing\/conversion","abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"code":"Output","type":"codeVoice"},{"text":" value ","type":"text"},{"inlineContent":[{"type":"text","text":"and"}],"type":"emphasis"},{"text":" transform an","type":"text"},{"text":" ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value back into an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"role":"symbol","title":"Conversion","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/FromUnicodeScalarView":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/FromUnicodeScalarView","title":"FromUnicodeScalarView","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromUnicodeScalarView","kind":"identifier"}],"navigatorTitle":[{"text":"FromUnicodeScalarView","kind":"identifier"}],"deprecated":true,"url":"\/documentation\/parsing\/fromunicodescalarview","type":"topic"}}}