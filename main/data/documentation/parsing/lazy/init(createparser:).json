{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Lazy\/init(createParser:)"},"variants":[{"paths":["\/documentation\/parsing\/lazy\/init(createparser:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Lazy"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"Parsing"}],"roleHeading":"Initializer","externalID":"s:7Parsing4LazyC12createParserACyxGxyc_tcfc","symbolKind":"init","title":"init(createParser:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"createParser"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"LazyParser"},{"kind":"text","text":")"}],"role":"symbol"},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"createParser","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Lazy/init(createParser:)":{"abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"createParser"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"LazyParser"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/parsing\/lazy\/init(createparser:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Lazy\/init(createParser:)","title":"init(createParser:)","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","kind":"symbol","role":"collection","type":"topic","abstract":[],"title":"Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Lazy/parse(_:)":{"title":"parse(_:)","type":"topic","url":"\/documentation\/parsing\/lazy\/parse(_:)","role":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Lazy\/parse(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Lazy":{"role":"symbol","type":"topic","navigatorTitle":[{"text":"Lazy","kind":"identifier"}],"abstract":[{"text":"A parser that waits for a call to its ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Lazy\/parse(_:)","isActive":true},{"text":" method before running the given closure to","type":"text"},{"text":" ","type":"text"},{"text":"create a parser for the given input.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lazy","kind":"identifier"}],"kind":"symbol","title":"Lazy","url":"\/documentation\/parsing\/lazy","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Lazy"}}}