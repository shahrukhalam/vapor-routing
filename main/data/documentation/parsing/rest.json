{"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo","kind":"relationships"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-3wugv","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-41jf5","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-9bc09"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/parse(_:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/ParserPrinter-Implementations"]}],"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/rest"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns this subsequence as"},{"type":"text","text":" "},{"type":"text","text":"its output."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"codeListing","syntax":"swift","code":["var input = \"Hello\"[...]","Rest().parse(&input)  \/\/ \"Hello\"","input                 \/\/ \"\""]},{"inlineContent":[{"type":"text","text":"This parser fails if there is no input to consume:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["try Rest().parse(\"\")","","\/\/\/ error: unexpected input","\/\/\/  --> input:1:1","\/\/\/ 1 |","\/\/\/   | ^ expected a non-empty input"]},{"inlineContent":[{"type":"text","text":"If you want to allow for the possibility of an empty remaining input you can use the"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally"},{"type":"text","text":" parser to parse an optional output value, or the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/replaceError(with:)"},{"type":"text","text":" method"},{"type":"text","text":" "},{"type":"text","text":"to coalesce the error into a default output value."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"Rest","symbolKind":"struct","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}],"role":"symbol","externalID":"s:7Parsing4RestV","navigatorTitle":[{"text":"Rest","kind":"identifier"}],"modules":[{"name":"Parsing"}]},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest":{"abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns this subsequence as"},{"type":"text","text":" "},{"type":"text","text":"its output."}],"url":"\/documentation\/parsing\/rest","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"title":"Rest","navigatorTitle":[{"kind":"identifier","text":"Rest"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"PrependableCollection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","url":"\/documentation\/parsing\/parserprinter","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"title":"ParserPrinter","abstract":[{"text":"A ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/init()-9bc09":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-9bc09","url":"\/documentation\/parsing\/rest\/init()-9bc09","kind":"symbol","abstract":[],"role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"title":"init()"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/init()-3wugv":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-3wugv","url":"\/documentation\/parsing\/rest\/init()-3wugv","abstract":[],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/parse(_:)":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Input"}],"title":"parse(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"url":"\/documentation\/parsing\/rest\/parse(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/Parser-Implementations":{"abstract":[],"url":"\/documentation\/parsing\/rest\/parser-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/Parser-Implementations","kind":"article","type":"topic","role":"collectionGroup","title":"Parser Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/ParserPrinter-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","title":"ParserPrinter Implementations","abstract":[],"url":"\/documentation\/parsing\/rest\/parserprinter-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/ParserPrinter-Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/replaceError(with:)":{"abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"url":"\/documentation\/parsing\/rest\/replaceerror(with:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/replaceError(with:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"replaceError(with:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/init()-41jf5":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-41jf5","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}]},"abstract":[],"role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","title":"init()","url":"\/documentation\/parsing\/rest\/init()-41jf5"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally":{"type":"topic","title":"Optionally","navigatorTitle":[{"text":"Optionally","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"abstract":[{"text":"A parser that runs the given parser and succeeds with ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if it fails.","type":"text"}],"url":"\/documentation\/parsing\/optionally"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","kind":"symbol","role":"collection","type":"topic","abstract":[],"title":"Parsing","url":"\/documentation\/parsing"}}}