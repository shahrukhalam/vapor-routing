{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildIf","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"parser","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers"},{"text":".","kind":"text"},{"text":"OptionalVoid","preciseIdentifier":"s:7Parsing7ParsersO12OptionalVoidV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/OptionalVoid"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"codeListing","syntax":"swift","code":["Parse {","  \"Hello\"","  if shouldParseComma {","    \",\"","  }","  \" \"","  Rest()","}"]}]}],"metadata":{"symbolKind":"method","title":"buildIf(_:)","modules":[{"name":"Parsing"}],"roleHeading":"Type Method","role":"symbol","externalID":"s:7Parsing13ParserBuilderO7buildIfyAA7ParsersO12OptionalVoidVy_xGxSgAA0B0Rzyt6OutputRtzlFZ","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildIf","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO12OptionalVoidV","kind":"typeIdentifier","text":"OptionalVoid"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/buildIf(_:)-4fmt7"},"variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/buildif(_:)-4fmt7"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"text":"Provides support for ","type":"text"},{"code":"if","type":"codeVoice"},{"text":" statements in ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","isActive":true,"type":"reference"},{"text":" blocks, producing a void parser for","type":"text"},{"text":" ","type":"text"},{"text":"a given void parser.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/buildIf(_:)-4fmt7":{"abstract":[{"type":"text","text":"Provides support for "},{"type":"codeVoice","code":"if"},{"type":"text","text":" statements in "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","type":"reference","isActive":true},{"type":"text","text":" blocks, producing a void parser for"},{"type":"text","text":" "},{"type":"text","text":"a given void parser."}],"url":"\/documentation\/parsing\/parserbuilder\/buildif(_:)-4fmt7","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/buildIf(_:)-4fmt7","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildIf"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"text":"P","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OptionalVoid","preciseIdentifier":"s:7Parsing7ParsersO12OptionalVoidV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"title":"buildIf(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","kind":"symbol","role":"collection","type":"topic","abstract":[],"title":"Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"kind":"symbol","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"role":"symbol","type":"topic","title":"ParserBuilder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"url":"\/documentation\/parsing\/parserbuilder"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"title":"Parsers","url":"\/documentation\/parsing\/parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parsers/OptionalVoid":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalVoid"}],"title":"Parsers.OptionalVoid","abstract":[{"type":"text","text":"A parser that attempts to run a given void parser, succeeding with void."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parsers\/OptionalVoid","url":"\/documentation\/parsing\/parsers\/optionalvoid","navigatorTitle":[{"kind":"identifier","text":"OptionalVoid"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]}}}