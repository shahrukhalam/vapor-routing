{"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo"}],"variants":[{"paths":["\/documentation\/parsing\/always"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Always","kind":"identifier"}],"role":"symbol","title":"Always","symbolKind":"struct","navigatorTitle":[{"text":"Always","kind":"identifier"}],"externalID":"s:7Parsing6AlwaysV","modules":[{"name":"Parsing"}]},"abstract":[{"text":"A parser that always succeeds with the given value, and does not consume any input.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"inlineContent":[{"text":"While not very useful on its own, the ","type":"text"},{"type":"codeVoice","code":"Always"},{"text":" parser can be helpful when combined with other","type":"text"},{"text":" ","type":"text"},{"text":"parsers or operators.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When its "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", it can be used as a “no-op” parser of sorts and be plugged into"},{"type":"text","text":" "},{"type":"text","text":"other parser operations. For example, the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Many","isActive":true},{"type":"text","text":" parser can be configured with separator and"},{"type":"text","text":" "},{"type":"text","text":"terminator parsers:"}],"type":"paragraph"},{"type":"codeListing","code":["Many {","  Int.parser()","} separator: {","  \",\"","} terminator: {","  End()","}"],"syntax":"swift"},{"inlineContent":[{"text":"But also exposes initializers that omit these parsers when there is no separator or terminator","type":"text"},{"text":" ","type":"text"},{"text":"to be parsed:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["Many {","  Prefix { $0 != \"\\n\" }","  \"\\n\"","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"To support this, "},{"type":"codeVoice","code":"Many"},{"type":"text","text":" plugs "},{"type":"codeVoice","code":"Always<Input, Void>"},{"type":"text","text":" into each omitted parser. As a simplified"},{"type":"text","text":" "},{"type":"text","text":"example:"}],"type":"paragraph"},{"type":"codeListing","code":["struct Many<Element: Parser, Separator: Parser, Terminator: Parser>: Parser","where Separator.Input == Element.Input, Terminator.Input == Element.Input {","  ...","}","","extension Many where Separator == Always<Input, Void>, Terminator == Always<Input, Void> {","  init(@ParserBuilder element: () -> Element) {","    self.element = element()","    self.separator = Always(())","    self.terminator = Always(())","  }","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"This means the previous example is equivalent to:"}],"type":"paragraph"},{"type":"codeListing","code":["Many {","  Prefix { $0 != \"\\n\" }","  \"\\n\"","} separator: {","  Always(())","} terminator: {","  Always(())","}"],"syntax":"swift"},{"content":[{"type":"paragraph","inlineContent":[{"text":"While ","type":"text"},{"code":"Always","type":"codeVoice"},{"text":" can be used as the last alternative of a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOf","type":"reference"},{"text":" to specify a default","type":"text"},{"text":" ","type":"text"},{"text":"output, the resulting parser will be throwing. Instead, prefer ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser\/replaceError(with:)","type":"reference"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"which returns a non-throwing parser.","type":"text"}]}],"type":"aside","style":"note","name":"Note"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/init(_:)-2spg2","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/init(_:)-56hez","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/init(_:)-fdjh"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/output"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/parse(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/print(_:into:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/ParserPrinter-Implementations"],"generated":true}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Always/parse(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/parse(_:)","url":"\/documentation\/parsing\/always\/parse(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"}],"type":"topic","kind":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"type":"text","text":" "},{"type":"text","text":"input."}],"title":"parse(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser/replaceError(with:)":{"url":"\/documentation\/parsing\/parser\/replaceerror(with:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser\/replaceError(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"title":"replaceError(with:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Many":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Many","url":"\/documentation\/parsing\/many","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"navigatorTitle":[{"text":"Many","kind":"identifier"}],"type":"topic","title":"Many","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Always/output":{"role":"symbol","abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/parsing\/always\/output","title":"output","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/output"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Always/init(_:)-fdjh":{"abstract":[],"type":"topic","url":"\/documentation\/parsing\/always\/init(_:)-fdjh","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/init(_:)-fdjh","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"init(_:)","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Always/print(_:into:)":{"type":"topic","title":"print(_:into:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/print(_:into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"url":"\/documentation\/parsing\/always\/print(_:into:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Always/ParserPrinter-Implementations":{"url":"\/documentation\/parsing\/always\/parserprinter-implementations","role":"collectionGroup","title":"ParserPrinter Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/ParserPrinter-Implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"url":"\/documentation\/parsing\/parserprinter","abstract":[{"type":"text","text":"A "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"role":"symbol","title":"ParserPrinter","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/OneOf":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOf"}],"abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"role":"symbol","url":"\/documentation\/parsing\/oneof","title":"OneOf","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOf","navigatorTitle":[{"kind":"identifier","text":"OneOf"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","kind":"symbol","role":"collection","type":"topic","abstract":[],"title":"Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Always":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Always"}],"title":"Always","url":"\/documentation\/parsing\/always","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"abstract":[{"type":"text","text":"A parser that always succeeds with the given value, and does not consume any input."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Always/init(_:)-2spg2":{"abstract":[],"type":"topic","url":"\/documentation\/parsing\/always\/init(_:)-2spg2","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/init(_:)-2spg2","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"init(_:)","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Always/Parser-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/parsing\/always\/parser-implementations","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/Parser-Implementations","kind":"article","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Always/init(_:)-56hez":{"abstract":[],"type":"topic","url":"\/documentation\/parsing\/always\/init(_:)-56hez","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Always\/init(_:)-56hez","title":"init(_:)","kind":"symbol","role":"symbol"}}}