{"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/not"]}],"metadata":{"roleHeading":"Structure","title":"Not","externalID":"s:7Parsing3NotV","symbolKind":"struct","modules":[{"name":"Parsing"}],"navigatorTitle":[{"kind":"identifier","text":"Not"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Not","kind":"identifier"}],"role":"symbol"},"kind":"symbol","relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/upstream"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/parse(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/print(_:into:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Not","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"For example, to parse a line from an input that does not start with “\/\/” one can do:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let uncommentedLine = Parse {","  Not { \"\/\/\" }","  PrefixUpTo(\"\\n\")","}","","try uncommentedLine.parse(\"let x = 1\") \/\/ ✅ \"let x = 1\"","","try uncommentedLine.parse(\"\/\/ let x = 1\") \/\/ ❌","\/\/ error: unexpected input","\/\/  --> input:1:1-2","\/\/ 1 | \/\/ let x = 1","\/\/   | ^^ expected not to be processed"]}]}],"abstract":[{"text":"A parser that succeeds if the given parser fails, and does not consume any input.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/upstream":{"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/not\/upstream","title":"upstream","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/upstream","abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upstream","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","kind":"symbol","role":"collection","type":"topic","abstract":[],"title":"Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/Parser-Implementations":{"url":"\/documentation\/parsing\/not\/parser-implementations","abstract":[],"title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/Parser-Implementations","kind":"article","type":"topic","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/print(_:into:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/not\/print(_:into:)","title":"print(_:into:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/print(_:into:)","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"((), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/parse(_:)":{"url":"\/documentation\/parsing\/not\/parse(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"title":"parse(_:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/init(_:)":{"abstract":[{"text":"Creates a parser that succeeds if the given parser fails, and does not consume any input.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/not\/init(_:)","title":"init(_:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/init(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"url":"\/documentation\/parsing\/parserprinter","abstract":[{"type":"text","text":"A "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"role":"symbol","title":"ParserPrinter","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/ParserPrinter-Implementations":{"role":"collectionGroup","abstract":[],"kind":"article","title":"ParserPrinter Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/not\/parserprinter-implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Not"}],"url":"\/documentation\/parsing\/not","navigatorTitle":[{"kind":"identifier","text":"Not"}],"abstract":[{"text":"A parser that succeeds if the given parser fails, and does not consume any input.","type":"text"}],"title":"Not","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not","kind":"symbol","type":"topic","role":"symbol"}}}