{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring\/Conversion-Implementations"]]},"abstract":[{"type":"text","text":"A conversion that invokes the given apply and unapply functions."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convert","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"apply","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"unapply","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyConversion","text":"AnyConversion","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing13AnyConversionV"},{"text":"<","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"parameters":[{"name":"apply","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that attempts to convert an input into an output. ","type":"text"},{"code":"apply","type":"codeVoice"},{"text":" is executed","type":"text"},{"text":" ","type":"text"},{"text":"each time the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring\/apply(_:)"},{"text":" method is called on the resulting conversion. If the closure","type":"text"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", an error is thrown. Otherwise, the value is unwrapped.","type":"text"}]}]},{"name":"unapply","content":[{"inlineContent":[{"text":"A closure that attempts to convert an output into an input. ","type":"text"},{"type":"codeVoice","code":"unapply"},{"text":" is executed","type":"text"},{"text":" ","type":"text"},{"text":"each time the ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring\/unapply(_:)","isActive":true},{"text":" method is called on the resulting conversion. If the closure","type":"text"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", an error is thrown. Otherwise, the value is unwrapped.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"text":"A conversion that invokes the given apply and unapply functions.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Useful for experimenting with conversions in a lightweight manner, without the ceremony of","type":"text"},{"text":" ","type":"text"},{"text":"defining a dedicated type.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct Amount {","  var cents: Int","}","","let amount = Parse(","  .convert(","    apply: { dollars, cents in Amount(cents: dollars * 100 + cents) },","    unapply: { amount in amount.cents.quotientAndRemainder(dividingBy: 100) }","  )",") {","  Digits()","  \".\"","  Digits(2)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If performance is a concern, you should define a custom type that conforms to "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"instead, which avoids the overhead of escaping closures, gives the compiler the ability to"},{"type":"text","text":" "},{"type":"text","text":"better optimize, and puts your in a better position to test the conversion."}]},{"type":"codeListing","syntax":"swift","code":["struct AmountConversion: Conversion {","  func apply(_ dollarsAndCents: (Int, Int)) -> Amount {","    return Amount(cents: dollarsAndCents.0 * 100 + dollarsAndCents.1)","  }","","  func unapply(_ amount: Amount) -> (Int, Int) {","    amount.cents.quotientAndRemainder(dividingBy: 100)","  }","}","","let amount = Parse(AmountConversion()) {","  Digits()","  \".\"","  Digits(2)","}"]}],"kind":"content"}],"metadata":{"symbolKind":"method","externalID":"s:7Parsing10ConversionPAAE7convert5apply7unapplyAA03AnyB0Vyqd__qd_0_Gqd_0_Sgqd__c_qd__Sgqd_0_ctAIRszr0_lFZ::SYNTHESIZED::s:7Parsing11ConversionsO28UnicodeScalarViewToSubstringV","modules":[{"name":"Parsing"}],"extendedModule":"Parsing","roleHeading":"Type Method","title":"convert(apply:unapply:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convert"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"apply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unapply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol"},"variants":[{"paths":["\/documentation\/parsing\/conversions\/unicodescalarviewtosubstring\/convert(apply:unapply:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring\/convert(apply:unapply:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyConversion":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyConversion","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyConversion","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AnyConversion","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-erased "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion"},{"type":"text","text":"."}],"url":"\/documentation\/parsing\/anyconversion","kind":"symbol","role":"symbol","title":"AnyConversion"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/UnicodeScalarViewToSubstring/apply(_:)":{"title":"apply(_:)","role":"symbol","url":"\/documentation\/parsing\/conversions\/unicodescalarviewtosubstring\/apply(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss17UnicodeScalarViewV","text":"UnicodeScalarView"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring\/apply(_:)","abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","kind":"symbol","role":"collection","type":"topic","abstract":[],"title":"Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/UnicodeScalarViewToSubstring/unapply(_:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring\/unapply(_:)","url":"\/documentation\/parsing\/conversions\/unicodescalarviewtosubstring\/unapply(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UnicodeScalarView","kind":"typeIdentifier","preciseIdentifier":"s:Ss17UnicodeScalarViewV"}],"type":"topic","title":"unapply(_:)","abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/UnicodeScalarViewToSubstring/convert(apply:unapply:)":{"url":"\/documentation\/parsing\/conversions\/unicodescalarviewtosubstring\/convert(apply:unapply:)","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"A conversion that invokes the given apply and unapply functions.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convert"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"apply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unapply"},{"text":": (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring\/convert(apply:unapply:)","title":"convert(apply:unapply:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/UnicodeScalarViewToSubstring":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnicodeScalarViewToSubstring","kind":"identifier"}],"navigatorTitle":[{"text":"UnicodeScalarViewToSubstring","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring","kind":"symbol","title":"Conversions.UnicodeScalarViewToSubstring","role":"symbol","abstract":[{"text":"A conversion from a unicode scalar view to its substring.","type":"text"}],"type":"topic","url":"\/documentation\/parsing\/conversions\/unicodescalarviewtosubstring"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/UnicodeScalarViewToSubstring/Conversion-Implementations":{"title":"Conversion Implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring\/Conversion-Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/parsing\/conversions\/unicodescalarviewtosubstring\/conversion-implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions":{"url":"\/documentation\/parsing\/conversions","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}],"navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"kind":"symbol","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","type":"topic","title":"Conversions"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversion":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"url":"\/documentation\/parsing\/conversion","abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"code":"Output","type":"codeVoice"},{"text":" value ","type":"text"},{"inlineContent":[{"type":"text","text":"and"}],"type":"emphasis"},{"text":" transform an","type":"text"},{"text":" ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value back into an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"role":"symbol","title":"Conversion","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"kind":"symbol"}}}