{"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initializer","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CasePaths\/CasePath"},{"text":"<","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"embed","content":[{"type":"paragraph","inlineContent":[{"text":"An embed function where ","type":"text"},{"code":"Values","type":"codeVoice"},{"text":" directly maps to the memory","type":"text"},{"text":" ","type":"text"},{"text":"layout of ","type":"text"},{"code":"Enum","type":"codeVoice"},{"text":", for example the internal, default initializer that is automatically","type":"text"},{"text":" ","type":"text"},{"text":"synthesized for structs.","type":"text"}]}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A conversion that can embed the associated values of an enum case into the case,"},{"type":"text","text":" "},{"type":"text","text":"and extract the associated values from the case."}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Useful for transforming the output of a ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","isActive":true},{"text":" into an enum:","type":"text"}]},{"type":"codeListing","code":["enum Expression {","  case add(Int, Int)","  ...","}","","let add = ParsePrint(.case(Expression.add)) {","  Int.parser()","  \"+\"","  Int.parser()","}","try add.parse(\"1+2\")  \/\/ Expression.add(1, 2)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To transform the output of a "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","isActive":true},{"type":"text","text":" into a struct, see "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring\/memberwise(_:)","isActive":true},{"type":"text","text":"."}]}]}],"abstract":[{"text":"Converts the associated values of an enum case into the case, and an enum case into its","type":"text"},{"text":" ","type":"text"},{"text":"associated values.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversions\/unicodescalarviewtosubstring\/case(_:)-68ot9"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring\/case(_:)-68ot9"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring\/Conversion-Implementations"]]},"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"symbolKind":"method","modules":[{"name":"Parsing"}],"extendedModule":"Parsing","roleHeading":"Type Method","role":"symbol","externalID":"s:7Parsing10ConversionPAAE4casey9CasePaths0D4PathVyqd_0_qd__Gqd_0_qd__cAHRszr0_lFZ::SYNTHESIZED::s:7Parsing11ConversionsO28UnicodeScalarViewToSubstringV","title":"case(_:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/UnicodeScalarViewToSubstring":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnicodeScalarViewToSubstring","kind":"identifier"}],"navigatorTitle":[{"text":"UnicodeScalarViewToSubstring","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring","kind":"symbol","title":"Conversions.UnicodeScalarViewToSubstring","role":"symbol","abstract":[{"text":"A conversion from a unicode scalar view to its substring.","type":"text"}],"type":"topic","url":"\/documentation\/parsing\/conversions\/unicodescalarviewtosubstring"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/UnicodeScalarViewToSubstring/memberwise(_:)":{"kind":"symbol","url":"\/documentation\/parsing\/conversions\/unicodescalarviewtosubstring\/memberwise(_:)","abstract":[{"text":"A conversion from a tuple of values into a struct and a struct into a tuple of values, using a","type":"text"},{"text":" ","type":"text"},{"text":"memberwise initializer.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memberwise","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Struct","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Struct","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring\/memberwise(_:)","type":"topic","role":"symbol","title":"memberwise(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","kind":"symbol","role":"collection","type":"topic","abstract":[],"title":"Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"url":"\/documentation\/parsing\/parserprinter","abstract":[{"type":"text","text":"A "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"role":"symbol","title":"ParserPrinter","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions":{"url":"\/documentation\/parsing\/conversions","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}],"navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"kind":"symbol","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","type":"topic","title":"Conversions"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/UnicodeScalarViewToSubstring/case(_:)-68ot9":{"kind":"symbol","url":"\/documentation\/parsing\/conversions\/unicodescalarviewtosubstring\/case(_:)-68ot9","abstract":[{"text":"Converts the associated values of an enum case into the case, and an enum case into its","type":"text"},{"text":" ","type":"text"},{"text":"associated values.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring\/case(_:)-68ot9","type":"topic","role":"symbol","title":"case(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/UnicodeScalarViewToSubstring/Conversion-Implementations":{"title":"Conversion Implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/UnicodeScalarViewToSubstring\/Conversion-Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/parsing\/conversions\/unicodescalarviewtosubstring\/conversion-implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/CasePaths/CasePath":{"role":"symbol","type":"topic","navigatorTitle":[{"text":"CasePath","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CasePath","kind":"identifier"}],"abstract":[{"text":"A path that supports embedding a value in a root and attempting to extract a root’s embedded","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"kind":"symbol","url":"\/documentation\/casepaths\/casepath","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CasePaths\/CasePath","title":"CasePath"}}}