{"abstract":[{"type":"text","text":"A collection implementing a double-ended queue. "},{"type":"codeVoice","code":"Deque"},{"type":"text","text":" (pronounced “deck”)"},{"type":"text","text":" "},{"text":"implements an ordered random-access collection that supports efficient","type":"text"},{"text":" ","type":"text"},{"text":"insertions and removals from both ends.","type":"text"}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/SK","doc:\/\/co.pointfree.VaporRouting\/Sl","doc:\/\/co.pointfree.VaporRouting\/s28CustomDebugStringConvertibleP","doc:\/\/co.pointfree.VaporRouting\/s17CustomReflectableP","doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP","doc:\/\/co.pointfree.VaporRouting\/Se","doc:\/\/co.pointfree.VaporRouting\/SE","doc:\/\/co.pointfree.VaporRouting\/SQ","doc:\/\/co.pointfree.VaporRouting\/s25ExpressibleByArrayLiteralP","doc:\/\/co.pointfree.VaporRouting\/SH","doc:\/\/co.pointfree.VaporRouting\/SM","doc:\/\/co.pointfree.VaporRouting\/Sk","doc:\/\/co.pointfree.VaporRouting\/Sm","doc:\/\/co.pointfree.VaporRouting\/s8SendableP","doc:\/\/co.pointfree.VaporRouting\/ST"],"type":"conformsTo"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"Deque","externalID":"s:11DequeModule0A0V","navigatorTitle":[{"text":"Deque","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Deque","kind":"identifier"}],"symbolKind":"struct","roleHeading":"Structure","modules":[{"name":"DequeModule"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule"]]},"sections":[],"variants":[{"paths":["\/documentation\/dequemodule\/deque"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/init(_:)-1tqf4","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/init(minimumCapacity:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/init(unsafeUninitializedCapacity:initializingWith:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/append(contentsOf:)-29aoh","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/popFirst()","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/prepend(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/prepend(contentsOf:)-51zn6","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/prepend(contentsOf:)-96y15"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/BidirectionalCollection-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/Collection-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/CustomDebugStringConvertible-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/CustomReflectable-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/CustomStringConvertible-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/Decodable-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/Encodable-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/Equatable-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/ExpressibleByArrayLiteral-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/Hashable-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/MutableCollection-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/RandomAccessCollection-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/RangeReplaceableCollection-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/Sequence-Implementations"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@frozen"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deque"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"syntax":null,"code":["var colors: Deque = [\"red\", \"yellow\", \"blue\"]"],"type":"codeListing"},{"inlineContent":[{"text":"Deques implement the same indexing semantics as arrays: they use integer","type":"text"},{"text":" ","type":"text"},{"text":"indices, and the first element of a nonempty deque is always at index zero.","type":"text"},{"text":" ","type":"text"},{"text":"Like arrays, deques conform to ","type":"text"},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MutableCollection"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RandomAccessCollection"},{"text":", providing a familiar","type":"text"},{"text":" ","type":"text"},{"text":"interface for manipulating their contents:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["print(colors[1]) \/\/ \"yellow\"","print(colors[3]) \/\/ Runtime error: Index out of range","","colors.insert(\"green\", at: 1)","\/\/ [\"red\", \"green\", \"yellow\", \"blue\"]","","colors.remove(at: 2) \/\/ \"yellow\"","\/\/ [\"red\", \"green\", \"blue\"]"],"type":"codeListing"},{"inlineContent":[{"text":"Like all variable-size collections on the standard library, ","type":"text"},{"type":"codeVoice","code":"Deque"},{"text":" ","type":"text"},{"text":"implements value semantics: each deque has an independent value that","type":"text"},{"text":" ","type":"text"},{"text":"includes the values of its elements. Modifying one deque does not affect any","type":"text"},{"text":" ","type":"text"},{"text":"others:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["var copy = deque","copy[1] = \"violet\"","print(copy)  \/\/ [\"red\", \"violet\", \"blue\"]","print(deque) \/\/ [\"red\", \"green\", \"blue\"]"],"type":"codeListing"},{"inlineContent":[{"text":"This is implemented with the copy-on-write optimization. Multiple copies of","type":"text"},{"text":" ","type":"text"},{"text":"a deque share the same underlying storage until you modify one of the","type":"text"},{"text":" ","type":"text"},{"text":"copies. When that happens, the deque being modified replaces its storage","type":"text"},{"text":" ","type":"text"},{"text":"with a uniquely owned copy of itself, which is then modified in place.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"codeVoice","code":"Deque"},{"text":" stores its elements in a circular buffer, which allows efficient","type":"text"},{"text":" ","type":"text"},{"text":"insertions and removals at both ends of the collection; however, this comes","type":"text"},{"text":" ","type":"text"},{"text":"at the cost of potentially discontiguous storage. In contrast, ","type":"text"},{"type":"codeVoice","code":"Array"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"text":"(usually) backed by a contiguous buffer, where new data can be efficiently","type":"text"},{"text":" ","type":"text"},{"text":"appended to the end, but inserting at the front is relatively slow, as","type":"text"},{"text":" ","type":"text"},{"text":"existing elements need to be shifted to make room.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This difference in implementation means that while the interface of a deque","type":"text"},{"text":" ","type":"text"},{"text":"is very similar to an array, the operations have different performance","type":"text"},{"text":" ","type":"text"},{"text":"characteristics. Mutations near the front are expected to be significantly","type":"text"},{"text":" ","type":"text"},{"text":"faster in deques, but arrays may measure slightly faster for general","type":"text"},{"text":" ","type":"text"},{"text":"random-access lookups.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Deques provide a handful of additional operations that make it easier to","type":"text"},{"text":" ","type":"text"},{"text":"insert and remove elements at the front. This includes queue operations such","type":"text"},{"text":" ","type":"text"},{"text":"as ","type":"text"},{"code":"popFirst","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"prepend","type":"codeVoice"},{"text":", including the ability to directly prepend a","type":"text"},{"text":" ","type":"text"},{"text":"sequence of elements:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["colors.append(\"green\")","colors.prepend(\"orange\")","\/\/ colors: [\"orange\", \"red\", \"blue\", \"yellow\", \"green\"]","","colors.popLast() \/\/ \"green\"","colors.popFirst() \/\/ \"orange\"","\/\/ colors: [\"red\", \"blue\", \"yellow\"]","","colors.prepend(contentsOf: [\"purple\", \"teal\"])","\/\/ colors: [\"purple\", \"teal\", \"red\", \"blue\", \"yellow\"]"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Unlike arrays, deques do not currently provide direct unsafe access to their"},{"type":"text","text":" "},{"type":"text","text":"underlying storage. They also lack a "},{"type":"codeVoice","code":"capacity"},{"type":"text","text":" property – the size of the"},{"type":"text","text":" "},{"type":"text","text":"storage buffer at any given point is an unstable implementation detail that"},{"type":"text","text":" "},{"type":"text","text":"should not affect application logic. (However, deques do provide a"},{"type":"text","text":" "},{"type":"codeVoice","code":"reserveCapacity"},{"type":"text","text":" method.)"}],"type":"paragraph"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/Hashable-Implementations":{"title":"Hashable Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/Hashable-Implementations","url":"\/documentation\/dequemodule\/deque\/hashable-implementations","type":"topic","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/s28CustomDebugStringConvertibleP","type":"unresolvable","title":"Swift.CustomDebugStringConvertible"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/MutableCollection-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/MutableCollection-Implementations","kind":"article","type":"topic","title":"MutableCollection Implementations","abstract":[],"url":"\/documentation\/dequemodule\/deque\/mutablecollection-implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/SQ":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://co.pointfree.VaporRouting/Sm":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/Sm","type":"unresolvable","title":"Swift.RangeReplaceableCollection"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/Encodable-Implementations":{"title":"Encodable Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/Encodable-Implementations","role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/dequemodule\/deque\/encodable-implementations"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/BidirectionalCollection-Implementations":{"type":"topic","title":"BidirectionalCollection Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/BidirectionalCollection-Implementations","url":"\/documentation\/dequemodule\/deque\/bidirectionalcollection-implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/s17CustomReflectableP":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/s17CustomReflectableP","type":"unresolvable","title":"Swift.CustomReflectable"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/Decodable-Implementations":{"abstract":[],"url":"\/documentation\/dequemodule\/deque\/decodable-implementations","role":"collectionGroup","type":"topic","kind":"article","title":"Decodable Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/Decodable-Implementations"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/init(_:)-1tqf4":{"url":"\/documentation\/dequemodule\/deque\/init(_:)-1tqf4","abstract":[{"type":"text","text":"Creates a deque containing the elements of a collection."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/init(_:)-1tqf4","kind":"symbol","type":"topic","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":")"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/ExpressibleByArrayLiteral-Implementations":{"title":"ExpressibleByArrayLiteral Implementations","url":"\/documentation\/dequemodule\/deque\/expressiblebyarrayliteral-implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/ExpressibleByArrayLiteral-Implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/CustomDebugStringConvertible-Implementations":{"url":"\/documentation\/dequemodule\/deque\/customdebugstringconvertible-implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/CustomDebugStringConvertible-Implementations","kind":"article","type":"topic","title":"CustomDebugStringConvertible Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/CustomReflectable-Implementations":{"url":"\/documentation\/dequemodule\/deque\/customreflectable-implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/CustomReflectable-Implementations","kind":"article","type":"topic","title":"CustomReflectable Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/Sl":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/Sl","type":"unresolvable","title":"Swift.Collection"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/RangeReplaceableCollection-Implementations":{"title":"RangeReplaceableCollection Implementations","type":"topic","url":"\/documentation\/dequemodule\/deque\/rangereplaceablecollection-implementations","abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/RangeReplaceableCollection-Implementations"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/Collection-Implementations":{"url":"\/documentation\/dequemodule\/deque\/collection-implementations","abstract":[],"title":"Collection Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/Collection-Implementations","kind":"article","type":"topic","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/SH":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/CustomStringConvertible-Implementations":{"url":"\/documentation\/dequemodule\/deque\/customstringconvertible-implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/CustomStringConvertible-Implementations","kind":"article","type":"topic","title":"CustomStringConvertible Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/Sk":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/Sk","type":"unresolvable","title":"Swift.RandomAccessCollection"},"doc://co.pointfree.VaporRouting/Se":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/Se","type":"unresolvable","title":"Swift.Decodable"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/init(unsafeUninitializedCapacity:initializingWith:)":{"url":"\/documentation\/dequemodule\/deque\/init(unsafeuninitializedcapacity:initializingwith:)","abstract":[{"type":"text","text":"Creates a deque with the specified capacity, then calls the given"},{"type":"text","text":" "},{"type":"text","text":"closure with a buffer covering the array’s uninitialized memory."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/init(unsafeUninitializedCapacity:initializingWith:)","kind":"symbol","type":"topic","title":"init(unsafeUninitializedCapacity:initializingWith:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"unsafeUninitializedCapacity"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initializingWith"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UnsafeMutableBufferPointer","preciseIdentifier":"s:Sr"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">, "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/append(contentsOf:)-29aoh":{"url":"\/documentation\/dequemodule\/deque\/append(contentsof:)-29aoh","abstract":[{"type":"text","text":"Adds the elements of a collection to the end of the deque."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/append(contentsOf:)-29aoh","kind":"symbol","type":"topic","title":"append(contentsOf:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"contentsOf"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":")"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/prepend(contentsOf:)-51zn6":{"role":"symbol","title":"prepend(contentsOf:)","abstract":[{"type":"text","text":"Adds the elements of a collection to the front of the deque."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prepend"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"contentsOf"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/prepend(contentsOf:)-51zn6","kind":"symbol","url":"\/documentation\/dequemodule\/deque\/prepend(contentsof:)-51zn6","type":"topic"},"doc://co.pointfree.VaporRouting/s23CustomStringConvertibleP":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://co.pointfree.VaporRouting/s25ExpressibleByArrayLiteralP":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/s25ExpressibleByArrayLiteralP","type":"unresolvable","title":"Swift.ExpressibleByArrayLiteral"},"doc://co.pointfree.VaporRouting/ST":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/ST","type":"unresolvable","title":"Swift.Sequence"},"doc://co.pointfree.VaporRouting/s8SendableP":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://co.pointfree.VaporRouting/SK":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/SK","type":"unresolvable","title":"Swift.BidirectionalCollection"},"doc://co.pointfree.VaporRouting/documentation/DequeModule":{"title":"DequeModule","type":"topic","url":"\/documentation\/dequemodule","abstract":[],"kind":"symbol","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/prepend(_:)":{"url":"\/documentation\/dequemodule\/deque\/prepend(_:)","abstract":[{"type":"text","text":"Adds a new element at the front of the deque."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/prepend(_:)","kind":"symbol","type":"topic","title":"prepend(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prepend"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/prepend(contentsOf:)-96y15":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prepend","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"contentsOf","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"prepend(contentsOf:)","url":"\/documentation\/dequemodule\/deque\/prepend(contentsof:)-96y15","type":"topic","abstract":[{"text":"Adds the elements of a sequence to the front of the deque.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/prepend(contentsOf:)-96y15"},"doc://co.pointfree.VaporRouting/SM":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/SM","type":"unresolvable","title":"Swift.MutableCollection"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/RandomAccessCollection-Implementations":{"title":"RandomAccessCollection Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/RandomAccessCollection-Implementations","url":"\/documentation\/dequemodule\/deque\/randomaccesscollection-implementations","abstract":[],"role":"collectionGroup","type":"topic","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/init(minimumCapacity:)":{"type":"topic","title":"init(minimumCapacity:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minimumCapacity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/dequemodule\/deque\/init(minimumcapacity:)","abstract":[{"text":"Creates and empty deque with preallocated space for at least the specified","type":"text"},{"text":" ","type":"text"},{"text":"number of elements.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/init(minimumCapacity:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Deque","kind":"identifier"}],"title":"Deque","type":"topic","navigatorTitle":[{"text":"Deque","kind":"identifier"}],"url":"\/documentation\/dequemodule\/deque","abstract":[{"type":"text","text":"A collection implementing a double-ended queue. "},{"type":"codeVoice","code":"Deque"},{"type":"text","text":" (pronounced “deck”)"},{"type":"text","text":" "},{"type":"text","text":"implements an ordered random-access collection that supports efficient"},{"type":"text","text":" "},{"type":"text","text":"insertions and removals from both ends."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/Equatable-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/Equatable-Implementations","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/dequemodule\/deque\/equatable-implementations","title":"Equatable Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/Sequence-Implementations":{"abstract":[],"role":"collectionGroup","kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/Sequence-Implementations","title":"Sequence Implementations","url":"\/documentation\/dequemodule\/deque\/sequence-implementations"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/popFirst()":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/popFirst()","role":"symbol","type":"topic","url":"\/documentation\/dequemodule\/deque\/popfirst()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"popFirst"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Removes and returns the first element of this deque, if it exists."}],"title":"popFirst()"},"doc://co.pointfree.VaporRouting/SE":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/SE","type":"unresolvable","title":"Swift.Encodable"}}}