{"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dequemodule\/deque\/withcontiguousmutablestorageifavailable(_:)-9ksuh"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/withContiguousMutableStorageIfAvailable(_:)-9ksuh","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sr","text":"UnsafeMutableBufferPointer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"body","content":[{"inlineContent":[{"type":"text","text":"The function to invoke."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"The value returned by ","type":"text"},{"code":"body","type":"codeVoice"},{"text":", or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" wasn’t called.","type":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Often, the optimizer can eliminate bounds- and uniqueness-checks within an","type":"text"},{"text":" ","type":"text"},{"text":"algorithm, but when that fails, invoking the same algorithm on the unsafe","type":"text"},{"text":" ","type":"text"},{"text":"buffer supplied to ","type":"text"},{"type":"codeVoice","code":"body"},{"text":" lets you trade safety for speed.","type":"text"}]},{"name":"Complexity","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"O(1) when this instance has a unique reference to its"},{"type":"text","text":" "},{"type":"text","text":"underlying storage; O("},{"type":"codeVoice","code":"count"},{"type":"text","text":") otherwise. (Not counting the call to"},{"type":"text","text":" "},{"type":"codeVoice","code":"body"},{"type":"text","text":".)"}],"type":"paragraph"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"name":"DequeModule"}],"symbolKind":"method","roleHeading":"Instance Method","extendedModule":"DequeModule","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withContiguousMutableStorageIfAvailable"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"withContiguousMutableStorageIfAvailable(_:)","externalID":"s:11DequeModule0A0V39withContiguousMutableStorageIfAvailableyqd__Sgqd__SryxGzKXEKlF","role":"symbol"},"abstract":[{"text":"Call ","type":"text"},{"code":"body(b)","type":"codeVoice"},{"text":", where ","type":"text"},{"code":"b","type":"codeVoice"},{"text":" is an unsafe buffer pointer to the deque’s","type":"text"},{"text":" ","type":"text"},{"text":"mutable contiguous storage. If the deque’s contents aren’t stored","type":"text"},{"text":" ","type":"text"},{"text":"contiguously, ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" is not called and ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" is returned. The supplied","type":"text"},{"text":" ","type":"text"},{"text":"buffer pointer is only valid for the duration of the call.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/MutableCollection-Implementations"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/withContiguousMutableStorageIfAvailable(_:)-9ksuh":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/withContiguousMutableStorageIfAvailable(_:)-9ksuh","url":"\/documentation\/dequemodule\/deque\/withcontiguousmutablestorageifavailable(_:)-9ksuh","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withContiguousMutableStorageIfAvailable","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeMutableBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sr"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"?"}],"abstract":[{"text":"Call ","type":"text"},{"code":"body(b)","type":"codeVoice"},{"text":", where ","type":"text"},{"code":"b","type":"codeVoice"},{"text":" is an unsafe buffer pointer to the deque’s","type":"text"},{"text":" ","type":"text"},{"text":"mutable contiguous storage. If the deque’s contents aren’t stored","type":"text"},{"text":" ","type":"text"},{"text":"contiguously, ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" is not called and ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" is returned. The supplied","type":"text"},{"text":" ","type":"text"},{"text":"buffer pointer is only valid for the duration of the call.","type":"text"}],"title":"withContiguousMutableStorageIfAvailable(_:)"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Deque","kind":"identifier"}],"title":"Deque","type":"topic","navigatorTitle":[{"text":"Deque","kind":"identifier"}],"url":"\/documentation\/dequemodule\/deque","abstract":[{"type":"text","text":"A collection implementing a double-ended queue. "},{"type":"codeVoice","code":"Deque"},{"type":"text","text":" (pronounced “deck”)"},{"type":"text","text":" "},{"type":"text","text":"implements an ordered random-access collection that supports efficient"},{"type":"text","text":" "},{"type":"text","text":"insertions and removals from both ends."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque"},"doc://co.pointfree.VaporRouting/documentation/DequeModule":{"title":"DequeModule","type":"topic","url":"\/documentation\/dequemodule","abstract":[],"kind":"symbol","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/MutableCollection-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/MutableCollection-Implementations","kind":"article","type":"topic","title":"MutableCollection Implementations","abstract":[],"url":"\/documentation\/dequemodule\/deque\/mutablecollection-implementations","role":"collectionGroup"}}}