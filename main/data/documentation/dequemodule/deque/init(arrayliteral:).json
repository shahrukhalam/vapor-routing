{"metadata":{"role":"symbol","extendedModule":"DequeModule","roleHeading":"Initializer","modules":[{"name":"DequeModule"}],"externalID":"s:11DequeModule0A0V12arrayLiteralACyxGxd_tcfc","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"...)"}],"title":"init(arrayLiteral:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dequemodule\/deque\/init(arrayliteral:)"]}],"sections":[],"abstract":[{"text":"Creates a new deque from the contents of an array literal.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"elements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"...)"}]}],"kind":"declarations"},{"parameters":[{"name":"elements","content":[{"inlineContent":[{"text":"A variadic list of elements of the new deque.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Do not call this initializer directly. It is used by the compiler when"},{"type":"text","text":" "},{"type":"text","text":"you use an array literal. Instead, create a new deque using an array"},{"type":"text","text":" "},{"type":"text","text":"literal as its value by enclosing a comma-separated list of values in"},{"type":"text","text":" "},{"type":"text","text":"square brackets. You can use an array literal anywhere a deque is expected"},{"type":"text","text":" "},{"type":"text","text":"by the type context."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/ExpressibleByArrayLiteral-Implementations"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/init(arrayLiteral:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/ExpressibleByArrayLiteral-Implementations":{"title":"ExpressibleByArrayLiteral Implementations","url":"\/documentation\/dequemodule\/deque\/expressiblebyarrayliteral-implementations","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/ExpressibleByArrayLiteral-Implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/init(arrayLiteral:)":{"title":"init(arrayLiteral:)","url":"\/documentation\/dequemodule\/deque\/init(arrayliteral:)","role":"symbol","type":"topic","abstract":[{"text":"Creates a new deque from the contents of an array literal.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/init(arrayLiteral:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/DequeModule":{"title":"DequeModule","type":"topic","url":"\/documentation\/dequemodule","abstract":[],"kind":"symbol","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Deque","kind":"identifier"}],"title":"Deque","type":"topic","navigatorTitle":[{"text":"Deque","kind":"identifier"}],"url":"\/documentation\/dequemodule\/deque","abstract":[{"type":"text","text":"A collection implementing a double-ended queue. "},{"type":"codeVoice","code":"Deque"},{"type":"text","text":" (pronounced “deck”)"},{"type":"text","text":" "},{"type":"text","text":"implements an ordered random-access collection that supports efficient"},{"type":"text","text":" "},{"type":"text","text":"insertions and removals from both ends."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque"}}}