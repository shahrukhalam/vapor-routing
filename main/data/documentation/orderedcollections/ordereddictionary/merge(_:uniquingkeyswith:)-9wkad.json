{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"externalID":"s:18OrderedCollections0A10DictionaryV5merge_16uniquingKeysWithyqd__n_q_q__q_tKXEtKSTRd__x3key_q_5valuet7ElementRtd__lF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"uniquingKeysWith","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"roleHeading":"Instance Method","extendedModule":"OrderedCollections","title":"merge(_:uniquingKeysWith:)","role":"symbol","modules":[{"name":"OrderedCollections"}],"symbolKind":"method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]}},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/merge(_:uniquingKeysWith:)-9wkad","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Merges the key-value pairs in the given sequence into the dictionary,"},{"type":"text","text":" "},{"type":"text","text":"using a combining closure to determine the value for any duplicate keys."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/orderedcollections\/ordereddictionary\/merge(_:uniquingkeyswith:)-9wkad"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keysAndValues","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"uniquingKeysWith","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"combine","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:ST","text":"Sequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" == (key","kind":"text"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", value","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"keysAndValues","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A sequence of key-value pairs."}]}]},{"name":"combine","content":[{"inlineContent":[{"text":"A closure that takes the current and new values for any","type":"text"},{"text":" ","type":"text"},{"text":"duplicate keys. The closure returns the desired value for the final","type":"text"},{"text":" ","type":"text"},{"text":"dictionary.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"combine"},{"text":" closure to select a value to use in the updated","type":"text"},{"text":" ","type":"text"},{"text":"dictionary, or to combine existing and new values. As the key-value","type":"text"},{"text":" ","type":"text"},{"text":"pairs are merged with the dictionary, the ","type":"text"},{"type":"codeVoice","code":"combine"},{"text":" closure is called","type":"text"},{"text":" ","type":"text"},{"text":"with the current and new values for any duplicate keys that are","type":"text"},{"text":" ","type":"text"},{"text":"encountered.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This example shows how to choose the current or new values for any"},{"type":"text","text":" "},{"type":"text","text":"duplicate keys:"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["var dictionary: OrderedDictionary = [\"a\": 1, \"b\": 2]","","\/\/ Keeping existing value for key \"a\":","dictionary.merge(zip([\"a\", \"c\"], [3, 4])) { (current, _) in current }","\/\/ [\"a\": 1, \"b\": 2, \"c\": 4]","","\/\/ Taking the new value for key \"a\":","dictionary.merge(zip([\"a\", \"d\"], [5, 6])) { (_, new) in new }","\/\/ [\"a\": 5, \"b\": 2, \"c\": 4, \"d\": 6]"]},{"inlineContent":[{"type":"text","text":"This operation preserves the order of keys in the original dictionary."},{"type":"text","text":" "},{"type":"text","text":"New key-value pairs are appended to the end in the order they appear in"},{"type":"text","text":" "},{"type":"text","text":"the given sequence."}],"type":"paragraph"},{"name":"Complexity","style":"note","content":[{"inlineContent":[{"type":"text","text":"Expected to be O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":") on average, where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" is the number of"},{"type":"text","text":" "},{"type":"text","text":"elements in "},{"type":"codeVoice","code":"keysAndValues"},{"type":"text","text":", if "},{"type":"codeVoice","code":"Key"},{"type":"text","text":" implements high-quality hashing."}],"type":"paragraph"}],"type":"aside"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary":{"abstract":[{"text":"An ordered collection of key-value pairs.","type":"text"}],"role":"symbol","title":"OrderedDictionary","navigatorTitle":[{"kind":"identifier","text":"OrderedDictionary"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OrderedDictionary"}],"kind":"symbol","url":"\/documentation\/orderedcollections\/ordereddictionary","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections":{"title":"OrderedCollections","role":"collection","type":"topic","url":"\/documentation\/orderedcollections","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary/merge(_:uniquingKeysWith:)-9wkad":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"text":"uniquingKeysWith","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"title":"merge(_:uniquingKeysWith:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/merge(_:uniquingKeysWith:)-9wkad","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/orderedcollections\/ordereddictionary\/merge(_:uniquingkeyswith:)-9wkad","type":"topic","abstract":[{"type":"text","text":"Merges the key-value pairs in the given sequence into the dictionary,"},{"type":"text","text":" "},{"type":"text","text":"using a combining closure to determine the value for any duplicate keys."}],"role":"symbol","kind":"symbol"}}}