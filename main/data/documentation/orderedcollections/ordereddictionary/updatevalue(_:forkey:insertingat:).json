{"abstract":[{"type":"text","text":"Updates the value stored in the dictionary for the given key, or inserts a"},{"type":"text","text":" "},{"type":"text","text":"new key-value pair at the specified index if the key does not exist."}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(_:forKey:insertingAt:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":" "},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":", "},{"kind":"externalParam","text":"insertingAt"},{"kind":"text","text":" "},{"kind":"internalParam","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> (originalMember"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?, index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The new value to add to the dictionary.","type":"text"}]}],"name":"value"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The key to associate with ","type":"text"},{"code":"value","type":"codeVoice"},{"text":". If ","type":"text"},{"code":"key","type":"codeVoice"},{"text":" already exists in","type":"text"},{"text":" ","type":"text"},{"text":"the dictionary, ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" replaces the existing associated value. If","type":"text"},{"text":" ","type":"text"},{"code":"key","type":"codeVoice"},{"text":" isn’t already a key of the dictionary, the ","type":"text"},{"code":"(key, value)","type":"codeVoice"},{"text":" pair","type":"text"},{"text":" ","type":"text"},{"text":"is inserted.","type":"text"}]}],"name":"key"},{"content":[{"inlineContent":[{"type":"text","text":"The index at which to insert the key, if it doesn’t already"},{"type":"text","text":" "},{"type":"text","text":"exist."}],"type":"paragraph"}],"name":"index"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"A pair ","type":"text"},{"code":"(old, index)","type":"codeVoice"},{"text":", where ","type":"text"},{"code":"old","type":"codeVoice"},{"text":" is the value that was","type":"text"},{"text":" ","type":"text"},{"text":"replaced, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if a new key-value pair was added, and ","type":"text"},{"code":"index","type":"codeVoice"},{"text":" ","type":"text"},{"text":"is the index corresponding to the updated (or inserted) value.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Use this method instead of key-based subscripting when you need to insert"},{"type":"text","text":" "},{"type":"text","text":"new keys at a particular index. You can use the return value to"},{"type":"text","text":" "},{"type":"text","text":"determine whether or not the new value supplanted the value of an existing"},{"type":"text","text":" "},{"type":"text","text":"key."}],"type":"paragraph"},{"inlineContent":[{"text":"If the value of an existing key is updated,","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"updateValue(_:forKey:insertingAt:)"},{"text":" returns the original value and its","type":"text"},{"text":" ","type":"text"},{"text":"index.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["var hues: OrderedDictionary = [","    \"Heliotrope\": 296,","    \"Coral\": 16,","    \"Aquamarine\": 156]","let newIndex = hues.startIndex","let (old, index) =","    hues.updateValue(18, forKey: \"Coral\", insertingAt: newIndex)","if let old = old {","    print(\"The value '\\(old)' at offset \\(index.offset) was replaced.\")","}","\/\/ Prints \"The value '16' at offset 1 was replaced.\""]},{"inlineContent":[{"text":"If the given key is not present in the dictionary, this method inserts the","type":"text"},{"text":" ","type":"text"},{"text":"key-value pair at the specified index and returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let (old, index) =","    hues.updateValue(330, forKey: \"Cerise\", insertingAt: newIndex)","if let old = old {","    print(\"The value '\\(old)' at offset \\(index.offset) was replaced.\")","} else {","    print(\"A new value was inserted at offset \\(index.offset).\")","}","\/\/ Prints \"A new value was inserted at offset 0.\")"]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"codeVoice","code":"count"},{"type":"text","text":")"}]}],"name":"Complexity","style":"note","type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(_:forkey:insertingat:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary"]]},"metadata":{"role":"symbol","externalID":"s:18OrderedCollections0A10DictionaryV11updateValue_6forKey11insertingAtq_Sg14originalMember_Si5indextq__xSitF","symbolKind":"method","title":"updateValue(_:forKey:insertingAt:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"insertingAt","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> (originalMember","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?, index","kind":"text"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","modules":[{"name":"OrderedCollections"}],"extendedModule":"OrderedCollections"},"references":{"doc://co.pointfree.VaporRouting/documentation/OrderedCollections":{"title":"OrderedCollections","role":"collection","type":"topic","url":"\/documentation\/orderedcollections","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary/updateValue(_:forKey:insertingAt:)":{"role":"symbol","abstract":[{"type":"text","text":"Updates the value stored in the dictionary for the given key, or inserts a"},{"type":"text","text":" "},{"type":"text","text":"new key-value pair at the specified index if the key does not exist."}],"title":"updateValue(_:forKey:insertingAt:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(_:forKey:insertingAt:)","type":"topic","url":"\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(_:forkey:insertingat:)","conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"insertingAt","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> (originalMember","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?, index","kind":"text"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary":{"abstract":[{"text":"An ordered collection of key-value pairs.","type":"text"}],"role":"symbol","title":"OrderedDictionary","navigatorTitle":[{"kind":"identifier","text":"OrderedDictionary"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OrderedDictionary"}],"kind":"symbol","url":"\/documentation\/orderedcollections\/ordereddictionary","type":"topic"}}}