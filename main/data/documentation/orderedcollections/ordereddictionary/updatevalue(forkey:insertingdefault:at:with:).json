{"abstract":[{"type":"text","text":"Ensures that the specified key exists in the dictionary (by inserting one"},{"type":"text","text":" "},{"type":"text","text":"with the specified index and default value if necessary), then calls"},{"type":"text","text":" "},{"type":"codeVoice","code":"body"},{"type":"text","text":" to update it in place."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary"]]},"metadata":{"roleHeading":"Instance Method","modules":[{"name":"OrderedCollections"}],"title":"updateValue(forKey:insertingDefault:at:with:)","externalID":"s:18OrderedCollections0A10DictionaryV11updateValue6forKey16insertingDefault2at4withqd__x_q_yXKSiqd__q_zKXEtKlF","symbolKind":"method","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"extendedModule":"OrderedCollections","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"insertingDefault","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"insertingDefault","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"defaultValue","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"index","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The key to look up (or append). If ","type":"text"},{"type":"codeVoice","code":"key"},{"text":" does not already exist","type":"text"},{"text":" ","type":"text"},{"text":"in the dictionary, it is appended with the supplied default value.","type":"text"}],"type":"paragraph"}],"name":"key"},{"content":[{"inlineContent":[{"type":"text","text":"The default value to append if "},{"type":"codeVoice","code":"key"},{"type":"text","text":" doesnâ€™t exist in"},{"type":"text","text":" "},{"type":"text","text":"the dictionary."}],"type":"paragraph"}],"name":"defaultValue"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A function that performs an in-place mutation on the dictionary","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}]}],"name":"body"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":"The return value of "},{"type":"codeVoice","code":"body"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"You can use this method to perform in-place operations on values in the","type":"text"},{"text":" ","type":"text"},{"text":"dictionary, whether or not ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" has value semantics. The following","type":"text"},{"text":" ","type":"text"},{"text":"example uses this method while counting the occurrences of each letter","type":"text"},{"text":" ","type":"text"},{"text":"in a string:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let message = \"Hello, Elle!\"","var letterCounts: [Character: Int] = [:]","for letter in message {","    letterCounts.updateValue(forKey: letter, default: 0) { count in","        count += 1","    }","}","\/\/ letterCounts == [\"H\": 1, \"e\": 2, \"l\": 4, \"o\": 1, ...]"],"type":"codeListing"},{"name":"Complexity","style":"note","content":[{"inlineContent":[{"type":"text","text":"expected complexity is amortized O(1), if "},{"type":"codeVoice","code":"Key"},{"type":"text","text":" implements"},{"type":"text","text":" "},{"type":"text","text":"high-quality hashing. (Ignoring the complexity of calling "},{"type":"codeVoice","code":"body"},{"type":"text","text":".)"}],"type":"paragraph"}],"type":"aside"}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(forKey:insertingDefault:at:with:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(forkey:insertingdefault:at:with:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary":{"abstract":[{"text":"An ordered collection of key-value pairs.","type":"text"}],"role":"symbol","title":"OrderedDictionary","navigatorTitle":[{"kind":"identifier","text":"OrderedDictionary"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OrderedDictionary"}],"kind":"symbol","url":"\/documentation\/orderedcollections\/ordereddictionary","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections":{"title":"OrderedCollections","role":"collection","type":"topic","url":"\/documentation\/orderedcollections","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary/updateValue(forKey:insertingDefault:at:with:)":{"title":"updateValue(forKey:insertingDefault:at:with:)","abstract":[{"type":"text","text":"Ensures that the specified key exists in the dictionary (by inserting one"},{"type":"text","text":" "},{"type":"text","text":"with the specified index and default value if necessary), then calls"},{"type":"text","text":" "},{"type":"codeVoice","code":"body"},{"type":"text","text":" to update it in place."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"insertingDefault","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(forKey:insertingDefault:at:with:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(forkey:insertingdefault:at:with:)","type":"topic"}}}